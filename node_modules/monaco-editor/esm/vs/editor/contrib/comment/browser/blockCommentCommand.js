import{EditOperation}from"../../../common/core/editOperation.js";import{Position}from"../../../common/core/position.js";import{Range}from"../../../common/core/range.js";import{Selection}from"../../../common/core/selection.js";export class BlockCommentCommand{constructor(e,n,t){this.languageConfigurationService=t,this._selection=e,this._insertSpace=n,this._usedEndToken=null}static _haystackHasNeedleAtOffset(e,n,t){if(t<0)return!1;const o=n.length;if(t+o>e.length)return!1;for(let r=0;r<o;r++){const o=e.charCodeAt(t+r),i=n.charCodeAt(r);if(o!==i&&!(o>=65&&o<=90&&o+32===i||i>=65&&i<=90&&i+32===o))return!1}return!0}_createOperationsForBlockComment(e,n,t,o,r,i){const s=e.startLineNumber,a=e.startColumn,m=e.endLineNumber,l=e.endColumn,c=r.getLineContent(s),u=r.getLineContent(m);let d,g=c.lastIndexOf(n,a-1+n.length),C=u.indexOf(t,l-1-t.length);if(-1!==g&&-1!==C)if(s===m)c.substring(g+n.length,C).indexOf(t)>=0&&(g=-1,C=-1);else{const e=c.substring(g+n.length),o=u.substring(0,C);(e.indexOf(t)>=0||o.indexOf(t)>=0)&&(g=-1,C=-1)}-1!==g&&-1!==C?(o&&g+n.length<c.length&&32===c.charCodeAt(g+n.length)&&(n+=" "),o&&C>0&&32===u.charCodeAt(C-1)&&(t=" "+t,C-=1),d=BlockCommentCommand._createRemoveBlockCommentOperations(new Range(s,g+n.length+1,m,C+1),n,t)):(d=BlockCommentCommand._createAddBlockCommentOperations(e,n,t,this._insertSpace),this._usedEndToken=1===d.length?t:null);for(const e of d)i.addTrackedEditOperation(e.range,e.text)}static _createRemoveBlockCommentOperations(e,n,t){const o=[];return Range.isEmpty(e)?o.push(EditOperation.delete(new Range(e.startLineNumber,e.startColumn-n.length,e.endLineNumber,e.endColumn+t.length))):(o.push(EditOperation.delete(new Range(e.startLineNumber,e.startColumn-n.length,e.startLineNumber,e.startColumn))),o.push(EditOperation.delete(new Range(e.endLineNumber,e.endColumn,e.endLineNumber,e.endColumn+t.length)))),o}static _createAddBlockCommentOperations(e,n,t,o){const r=[];return Range.isEmpty(e)?r.push(EditOperation.replace(new Range(e.startLineNumber,e.startColumn,e.endLineNumber,e.endColumn),n+"  "+t)):(r.push(EditOperation.insert(new Position(e.startLineNumber,e.startColumn),n+(o?" ":""))),r.push(EditOperation.insert(new Position(e.endLineNumber,e.endColumn),(o?" ":"")+t))),r}getEditOperations(e,n){const t=this._selection.startLineNumber,o=this._selection.startColumn;e.tokenization.tokenizeIfCheap(t);const r=e.getLanguageIdAtPosition(t,o),i=this.languageConfigurationService.getLanguageConfiguration(r).comments;i&&i.blockCommentStartToken&&i.blockCommentEndToken&&this._createOperationsForBlockComment(this._selection,i.blockCommentStartToken,i.blockCommentEndToken,this._insertSpace,e,n)}computeCursorState(e,n){const t=n.getInverseEditOperations();if(2===t.length){const e=t[0],n=t[1];return new Selection(e.range.endLineNumber,e.range.endColumn,n.range.startLineNumber,n.range.startColumn)}{const e=t[0].range,n=this._usedEndToken?-this._usedEndToken.length-1:0;return new Selection(e.endLineNumber,e.endColumn+n,e.endLineNumber,e.endColumn+n)}}}