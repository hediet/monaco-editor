var __decorate=this&&this.__decorate||function(e,o,r,t){var i,n=arguments.length,c=n<3?o:null===t?t=Object.getOwnPropertyDescriptor(o,r):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(e,o,r,t);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(c=(n<3?i(c):n>3?i(o,r,c):i(o,r))||c);return n>3&&c&&Object.defineProperty(o,r,c),c},__param=this&&this.__param||function(e,o){return function(r,t){o(r,t,e)}},__awaiter=this&&this.__awaiter||function(e,o,r,t){return new(r||(r=Promise))((function(i,n){function c(e){try{s(t.next(e))}catch(e){n(e)}}function a(e){try{s(t.throw(e))}catch(e){n(e)}}function s(e){var o;e.done?i(e.value):(o=e.value,o instanceof r?o:new r((function(e){e(o)}))).then(c,a)}s((t=t.apply(e,o||[])).next())}))};import{Lazy}from"../../../../base/common/lazy.js";import{Disposable}from"../../../../base/common/lifecycle.js";import{escapeRegExpCharacters}from"../../../../base/common/strings.js";import{EditorAction,EditorCommand}from"../../../browser/editorExtensions.js";import{EditorContextKeys}from"../../../common/editorContextKeys.js";import{ILanguageFeaturesService}from"../../../common/services/languageFeatures.js";import{applyCodeAction,ApplyCodeActionReason,codeActionCommandId,fixAllCommandId,organizeImportsCommandId,refactorCommandId,refactorPreviewCommandId,sourceActionCommandId}from"./codeAction.js";import{CodeActionUi}from"./codeActionUi.js";import{MessageController}from"../../message/browser/messageController.js";import*as nls from"../../../../nls.js";import{ContextKeyExpr,IContextKeyService}from"../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService}from"../../../../platform/instantiation/common/instantiation.js";import{IMarkerService}from"../../../../platform/markers/common/markers.js";import{IEditorProgressService}from"../../../../platform/progress/common/progress.js";import{CodeActionModel,SUPPORTED_CODE_ACTIONS}from"./codeActionModel.js";import{CodeActionCommandArgs,CodeActionKind,CodeActionTriggerSource}from"../common/types.js";function contextKeyForSupportedActions(e){return ContextKeyExpr.regex(SUPPORTED_CODE_ACTIONS.keys()[0],new RegExp("(\\s|^)"+escapeRegExpCharacters(e.value)+"\\b"))}function refactorTrigger(e,o,r,t){const i=CodeActionCommandArgs.fromUser(o,{kind:CodeActionKind.Refactor,apply:"never"});return triggerCodeActionsForEditorSelection(e,"string"==typeof(null==o?void 0:o.kind)?i.preferred?nls.localize("editor.action.refactor.noneMessage.preferred.kind","No preferred refactorings for '{0}' available",o.kind):nls.localize("editor.action.refactor.noneMessage.kind","No refactorings for '{0}' available",o.kind):i.preferred?nls.localize("editor.action.refactor.noneMessage.preferred","No preferred refactorings available"):nls.localize("editor.action.refactor.noneMessage","No refactorings available"),{include:CodeActionKind.Refactor.contains(i.kind)?i.kind:CodeActionKind.None,onlyIncludePreferredActions:i.preferred},i.apply,r,t)}const argsSchema={type:"object",defaultSnippets:[{body:{kind:""}}],properties:{kind:{type:"string",description:nls.localize("args.schema.kind","Kind of the code action to run.")},apply:{type:"string",description:nls.localize("args.schema.apply","Controls when the returned actions are applied."),default:"ifSingle",enum:["first","ifSingle","never"],enumDescriptions:[nls.localize("args.schema.apply.first","Always apply the first returned code action."),nls.localize("args.schema.apply.ifSingle","Apply the first returned code action if it is the only one."),nls.localize("args.schema.apply.never","Do not apply the returned code actions.")]},preferred:{type:"boolean",default:!1,description:nls.localize("args.schema.preferred","Controls if only preferred code actions should be returned.")}}};let CodeActionController=class e extends Disposable{static get(o){return o.getContribution(e.ID)}constructor(e,o,r,t,i,n){super(),this._instantiationService=i,this._editor=e,this._model=this._register(new CodeActionModel(this._editor,n.codeActionProvider,o,r,t)),this._register(this._model.onDidChangeState((e=>this.update(e)))),this._ui=new Lazy((()=>this._register(i.createInstance(CodeActionUi,e,QuickFixAction.Id,AutoFixAction.Id,{applyCodeAction:(e,o,r)=>__awaiter(this,void 0,void 0,(function*(){try{yield this._applyCodeAction(e,r)}finally{o&&this._trigger({type:2,triggerAction:CodeActionTriggerSource.QuickFix,filter:{}})}}))}))))}update(e){this._ui.value.update(e)}showCodeActions(e,o,r){return this._ui.value.showCodeActionList(o,r,{includeDisabledActions:!1,fromLightbulb:!1})}manualTriggerAtCurrentPosition(e,o,r,t,i){var n;if(!this._editor.hasModel())return;null===(n=MessageController.get(this._editor))||void 0===n||n.closeMessage();const c=this._editor.getPosition();this._trigger({type:1,triggerAction:o,filter:r,autoApply:t,context:{notAvailableMessage:e,position:c},preview:i})}_trigger(e){return this._model.trigger(e)}_applyCodeAction(e,o){return this._instantiationService.invokeFunction(applyCodeAction,e,ApplyCodeActionReason.FromCodeActions,{preview:o,editor:this._editor})}};CodeActionController.ID="editor.contrib.codeActionController",CodeActionController=__decorate([__param(1,IMarkerService),__param(2,IContextKeyService),__param(3,IEditorProgressService),__param(4,IInstantiationService),__param(5,ILanguageFeaturesService)],CodeActionController);export{CodeActionController};function triggerCodeActionsForEditorSelection(e,o,r,t,i=!1,n=CodeActionTriggerSource.Default){if(e.hasModel()){const c=CodeActionController.get(e);null==c||c.manualTriggerAtCurrentPosition(o,n,r,t,i)}}class QuickFixAction extends EditorAction{constructor(){super({id:QuickFixAction.Id,label:nls.localize("quickfix.trigger.label","Quick Fix..."),alias:"Quick Fix...",precondition:ContextKeyExpr.and(EditorContextKeys.writable,EditorContextKeys.hasCodeActionsProvider),kbOpts:{kbExpr:EditorContextKeys.editorTextFocus,primary:2132,weight:100}})}run(e,o){return triggerCodeActionsForEditorSelection(o,nls.localize("editor.action.quickFix.noneMessage","No code actions available"),void 0,void 0,!1,CodeActionTriggerSource.QuickFix)}}QuickFixAction.Id="editor.action.quickFix";export{QuickFixAction};export class CodeActionCommand extends EditorCommand{constructor(){super({id:codeActionCommandId,precondition:ContextKeyExpr.and(EditorContextKeys.writable,EditorContextKeys.hasCodeActionsProvider),description:{description:"Trigger a code action",args:[{name:"args",schema:argsSchema}]}})}runEditorCommand(e,o,r){const t=CodeActionCommandArgs.fromUser(r,{kind:CodeActionKind.Empty,apply:"ifSingle"});return triggerCodeActionsForEditorSelection(o,"string"==typeof(null==r?void 0:r.kind)?t.preferred?nls.localize("editor.action.codeAction.noneMessage.preferred.kind","No preferred code actions for '{0}' available",r.kind):nls.localize("editor.action.codeAction.noneMessage.kind","No code actions for '{0}' available",r.kind):t.preferred?nls.localize("editor.action.codeAction.noneMessage.preferred","No preferred code actions available"):nls.localize("editor.action.codeAction.noneMessage","No code actions available"),{include:t.kind,includeSourceActions:!0,onlyIncludePreferredActions:t.preferred},t.apply)}}export class RefactorAction extends EditorAction{constructor(){super({id:refactorCommandId,label:nls.localize("refactor.label","Refactor..."),alias:"Refactor...",precondition:ContextKeyExpr.and(EditorContextKeys.writable,EditorContextKeys.hasCodeActionsProvider),kbOpts:{kbExpr:EditorContextKeys.editorTextFocus,primary:3120,mac:{primary:1328},weight:100},contextMenuOpts:{group:"1_modification",order:2,when:ContextKeyExpr.and(EditorContextKeys.writable,contextKeyForSupportedActions(CodeActionKind.Refactor))},description:{description:"Refactor...",args:[{name:"args",schema:argsSchema}]}})}run(e,o,r){return refactorTrigger(o,r,!1,CodeActionTriggerSource.Refactor)}}export class RefactorPreview extends EditorAction{constructor(){super({id:refactorPreviewCommandId,label:nls.localize("refactor.preview.label","Refactor with Preview..."),alias:"Refactor Preview...",precondition:ContextKeyExpr.and(EditorContextKeys.writable,EditorContextKeys.hasCodeActionsProvider),description:{description:"Refactor Preview...",args:[{name:"args",schema:argsSchema}]}})}run(e,o,r){return refactorTrigger(o,r,!0,CodeActionTriggerSource.RefactorPreview)}}export class SourceAction extends EditorAction{constructor(){super({id:sourceActionCommandId,label:nls.localize("source.label","Source Action..."),alias:"Source Action...",precondition:ContextKeyExpr.and(EditorContextKeys.writable,EditorContextKeys.hasCodeActionsProvider),contextMenuOpts:{group:"1_modification",order:2.1,when:ContextKeyExpr.and(EditorContextKeys.writable,contextKeyForSupportedActions(CodeActionKind.Source))},description:{description:"Source Action...",args:[{name:"args",schema:argsSchema}]}})}run(e,o,r){const t=CodeActionCommandArgs.fromUser(r,{kind:CodeActionKind.Source,apply:"never"});return triggerCodeActionsForEditorSelection(o,"string"==typeof(null==r?void 0:r.kind)?t.preferred?nls.localize("editor.action.source.noneMessage.preferred.kind","No preferred source actions for '{0}' available",r.kind):nls.localize("editor.action.source.noneMessage.kind","No source actions for '{0}' available",r.kind):t.preferred?nls.localize("editor.action.source.noneMessage.preferred","No preferred source actions available"):nls.localize("editor.action.source.noneMessage","No source actions available"),{include:CodeActionKind.Source.contains(t.kind)?t.kind:CodeActionKind.None,includeSourceActions:!0,onlyIncludePreferredActions:t.preferred},t.apply,void 0,CodeActionTriggerSource.SourceAction)}}export class OrganizeImportsAction extends EditorAction{constructor(){super({id:organizeImportsCommandId,label:nls.localize("organizeImports.label","Organize Imports"),alias:"Organize Imports",precondition:ContextKeyExpr.and(EditorContextKeys.writable,contextKeyForSupportedActions(CodeActionKind.SourceOrganizeImports)),kbOpts:{kbExpr:EditorContextKeys.editorTextFocus,primary:1581,weight:100}})}run(e,o){return triggerCodeActionsForEditorSelection(o,nls.localize("editor.action.organize.noneMessage","No organize imports action available"),{include:CodeActionKind.SourceOrganizeImports,includeSourceActions:!0},"ifSingle",void 0,CodeActionTriggerSource.OrganizeImports)}}export class FixAllAction extends EditorAction{constructor(){super({id:fixAllCommandId,label:nls.localize("fixAll.label","Fix All"),alias:"Fix All",precondition:ContextKeyExpr.and(EditorContextKeys.writable,contextKeyForSupportedActions(CodeActionKind.SourceFixAll))})}run(e,o){return triggerCodeActionsForEditorSelection(o,nls.localize("fixAll.noneMessage","No fix all action available"),{include:CodeActionKind.SourceFixAll,includeSourceActions:!0},"ifSingle",void 0,CodeActionTriggerSource.FixAll)}}class AutoFixAction extends EditorAction{constructor(){super({id:AutoFixAction.Id,label:nls.localize("autoFix.label","Auto Fix..."),alias:"Auto Fix...",precondition:ContextKeyExpr.and(EditorContextKeys.writable,contextKeyForSupportedActions(CodeActionKind.QuickFix)),kbOpts:{kbExpr:EditorContextKeys.editorTextFocus,primary:1620,mac:{primary:2644},weight:100}})}run(e,o){return triggerCodeActionsForEditorSelection(o,nls.localize("editor.action.autoFix.noneMessage","No auto fixes available"),{include:CodeActionKind.QuickFix,onlyIncludePreferredActions:!0},"ifSingle",void 0,CodeActionTriggerSource.AutoFix)}}AutoFixAction.Id="editor.action.autoFix";export{AutoFixAction};