import{Emitter}from"../../../../base/common/event.js";import{FoldingRegions}from"./foldingRanges.js";import{hash}from"../../../../base/common/hash.js";export class FoldingModel{get regions(){return this._regions}get textModel(){return this._textModel}constructor(e,t){this._updateEventEmitter=new Emitter,this.onDidChange=this._updateEventEmitter.event,this._textModel=e,this._decorationProvider=t,this._regions=new FoldingRegions(new Uint32Array(0),new Uint32Array(0)),this._editorDecorationIds=[]}toggleCollapseState(e){if(!e.length)return;e=e.sort(((e,t)=>e.regionIndex-t.regionIndex));const t={};this._decorationProvider.changeDecorations((n=>{let o=0,i=-1,s=-1;const r=e=>{for(;o<e;){const e=this._regions.getEndLineNumber(o),t=this._regions.isCollapsed(o);if(e<=i){const i=0!==this.regions.getSource(o);n.changeDecorationOptions(this._editorDecorationIds[o],this._decorationProvider.getDecorationOption(t,e<=s,i))}t&&e>s&&(s=e),o++}};for(const n of e){const e=n.regionIndex,o=this._editorDecorationIds[e];if(o&&!t[o]){t[o]=!0,r(e);const n=!this._regions.isCollapsed(e);this._regions.setCollapsed(e,n),i=Math.max(i,this._regions.getEndLineNumber(e))}}r(this._regions.length)})),this._updateEventEmitter.fire({model:this,collapseStateChanged:e})}removeManualRanges(e){const t=new Array,n=t=>{for(const n of e)if(!(n.startLineNumber>t.endLineNumber||t.startLineNumber>n.endLineNumber))return!0;return!1};for(let e=0;e<this._regions.length;e++){const o=this._regions.toFoldRange(e);0!==o.source&&n(o)||t.push(o)}this.updatePost(FoldingRegions.fromFoldRanges(t))}update(e,t=[]){const n=this._currentFoldedOrManualRanges(t),o=FoldingRegions.sanitizeAndMerge(e,n,this._textModel.getLineCount());this.updatePost(FoldingRegions.fromFoldRanges(o))}updatePost(e){const t=[];let n=-1;for(let o=0,i=e.length;o<i;o++){const i=e.getStartLineNumber(o),s=e.getEndLineNumber(o),r=e.isCollapsed(o),l=0!==e.getSource(o),g={startLineNumber:i,startColumn:this._textModel.getLineMaxColumn(i),endLineNumber:s,endColumn:this._textModel.getLineMaxColumn(s)+1};t.push({range:g,options:this._decorationProvider.getDecorationOption(r,s<=n,l)}),r&&s>n&&(n=s)}this._decorationProvider.changeDecorations((e=>this._editorDecorationIds=e.deltaDecorations(this._editorDecorationIds,t))),this._regions=e,this._updateEventEmitter.fire({model:this})}_currentFoldedOrManualRanges(e=[]){const t=(t,n)=>{for(const o of e)if(t<o&&o<=n)return!0;return!1},n=[];for(let e=0,o=this._regions.length;e<o;e++){let o=this.regions.isCollapsed(e);const i=this.regions.getSource(e);if(o||0!==i){const s=this._regions.toFoldRange(e),r=this._textModel.getDecorationRange(this._editorDecorationIds[e]);r&&(o&&(t(r.startLineNumber,r.endLineNumber)||r.endLineNumber-r.startLineNumber!=s.endLineNumber-s.startLineNumber)&&(o=!1),n.push({startLineNumber:r.startLineNumber,endLineNumber:r.endLineNumber,type:s.type,isCollapsed:o,source:i}))}}return n}getMemento(){const e=this._currentFoldedOrManualRanges(),t=[],n=this._textModel.getLineCount();for(let o=0,i=e.length;o<i;o++){const i=e[o];if(i.startLineNumber>=i.endLineNumber||i.startLineNumber<1||i.endLineNumber>n)continue;const s=this._getLinesChecksum(i.startLineNumber+1,i.endLineNumber);t.push({startLineNumber:i.startLineNumber,endLineNumber:i.endLineNumber,isCollapsed:i.isCollapsed,source:i.source,checksum:s})}return t.length>0?t:void 0}applyMemento(e){var t,n;if(!Array.isArray(e))return;const o=[],i=this._textModel.getLineCount();for(const s of e){if(s.startLineNumber>=s.endLineNumber||s.startLineNumber<1||s.endLineNumber>i)continue;const e=this._getLinesChecksum(s.startLineNumber+1,s.endLineNumber);s.checksum&&e!==s.checksum||o.push({startLineNumber:s.startLineNumber,endLineNumber:s.endLineNumber,type:void 0,isCollapsed:null===(t=s.isCollapsed)||void 0===t||t,source:null!==(n=s.source)&&void 0!==n?n:0})}const s=FoldingRegions.sanitizeAndMerge(this._regions,o,i);this.updatePost(FoldingRegions.fromFoldRanges(s))}_getLinesChecksum(e,t){return hash(this._textModel.getLineContent(e)+this._textModel.getLineContent(t))%1e6}dispose(){this._decorationProvider.removeDecorations(this._editorDecorationIds)}getAllRegionsAtLine(e,t){const n=[];if(this._regions){let o=this._regions.findRange(e),i=1;for(;o>=0;){const e=this._regions.toRegion(o);t&&!t(e,i)||n.push(e),i++,o=e.parentIndex}}return n}getRegionAtLine(e){if(this._regions){const t=this._regions.findRange(e);if(t>=0)return this._regions.toRegion(t)}return null}getRegionsInside(e,t){const n=[],o=e?e.regionIndex+1:0,i=e?e.endLineNumber:Number.MAX_VALUE;if(t&&2===t.length){const e=[];for(let s=o,r=this._regions.length;s<r;s++){const o=this._regions.toRegion(s);if(!(this._regions.getStartLineNumber(s)<i))break;for(;e.length>0&&!o.containedBy(e[e.length-1]);)e.pop();e.push(o),t(o,e.length)&&n.push(o)}}else for(let e=o,s=this._regions.length;e<s;e++){const o=this._regions.toRegion(e);if(!(this._regions.getStartLineNumber(e)<i))break;t&&!t(o)||n.push(o)}return n}}export function toggleCollapseState(e,t,n){const o=[];for(const i of n){const n=e.getRegionAtLine(i);if(n){const i=!n.isCollapsed;if(o.push(n),t>1){const s=e.getRegionsInside(n,((e,n)=>e.isCollapsed!==i&&n<t));o.push(...s)}}}e.toggleCollapseState(o)}export function setCollapseStateLevelsDown(e,t,n=Number.MAX_VALUE,o){const i=[];if(o&&o.length>0)for(const s of o){const o=e.getRegionAtLine(s);if(o&&(o.isCollapsed!==t&&i.push(o),n>1)){const s=e.getRegionsInside(o,((e,o)=>e.isCollapsed!==t&&o<n));i.push(...s)}}else{const o=e.getRegionsInside(null,((e,o)=>e.isCollapsed!==t&&o<n));i.push(...o)}e.toggleCollapseState(i)}export function setCollapseStateLevelsUp(e,t,n,o){const i=[];for(const s of o){const o=e.getAllRegionsAtLine(s,((e,o)=>e.isCollapsed!==t&&o<=n));i.push(...o)}e.toggleCollapseState(i)}export function setCollapseStateUp(e,t,n){const o=[];for(const i of n){const n=e.getAllRegionsAtLine(i,(e=>e.isCollapsed!==t));n.length>0&&o.push(n[0])}e.toggleCollapseState(o)}export function setCollapseStateAtLevel(e,t,n,o){const i=e.getRegionsInside(null,((e,i)=>i===t&&e.isCollapsed!==n&&!o.some((t=>e.containsLine(t)))));e.toggleCollapseState(i)}export function setCollapseStateForRest(e,t,n){const o=[];for(const t of n){const n=e.getAllRegionsAtLine(t,void 0);n.length>0&&o.push(n[0])}const i=e.getRegionsInside(null,(e=>o.every((t=>!t.containedBy(e)&&!e.containedBy(t)))&&e.isCollapsed!==t));e.toggleCollapseState(i)}export function setCollapseStateForMatchingLines(e,t,n){const o=e.textModel,i=e.regions,s=[];for(let e=i.length-1;e>=0;e--)if(n!==i.isCollapsed(e)){const n=i.getStartLineNumber(e);t.test(o.getLineContent(n))&&s.push(i.toRegion(e))}e.toggleCollapseState(s)}export function setCollapseStateForType(e,t,n){const o=e.regions,i=[];for(let e=o.length-1;e>=0;e--)n!==o.isCollapsed(e)&&t===o.getType(e)&&i.push(o.toRegion(e));e.toggleCollapseState(i)}export function getParentFoldLine(e,t){let n=null;const o=t.getRegionAtLine(e);if(null!==o&&(n=o.startLineNumber,e===n)){const e=o.parentIndex;n=-1!==e?t.regions.getStartLineNumber(e):null}return n}export function getPreviousFoldLine(e,t){let n=t.getRegionAtLine(e);if(null!==n&&n.startLineNumber===e){if(e!==n.startLineNumber)return n.startLineNumber;{const e=n.parentIndex;let o=0;for(-1!==e&&(o=t.regions.getStartLineNumber(n.parentIndex));null!==n;){if(!(n.regionIndex>0))return null;if(n=t.regions.toRegion(n.regionIndex-1),n.startLineNumber<=o)return null;if(n.parentIndex===e)return n.startLineNumber}}}else if(t.regions.length>0)for(n=t.regions.toRegion(t.regions.length-1);null!==n;){if(n.startLineNumber<e)return n.startLineNumber;n=n.regionIndex>0?t.regions.toRegion(n.regionIndex-1):null}return null}export function getNextFoldLine(e,t){let n=t.getRegionAtLine(e);if(null!==n&&n.startLineNumber===e){const e=n.parentIndex;let o=0;if(-1!==e)o=t.regions.getEndLineNumber(n.parentIndex);else{if(0===t.regions.length)return null;o=t.regions.getEndLineNumber(t.regions.length-1)}for(;null!==n;){if(!(n.regionIndex<t.regions.length))return null;if(n=t.regions.toRegion(n.regionIndex+1),n.startLineNumber>=o)return null;if(n.parentIndex===e)return n.startLineNumber}}else if(t.regions.length>0)for(n=t.regions.toRegion(0);null!==n;){if(n.startLineNumber>e)return n.startLineNumber;n=n.regionIndex<t.regions.length?t.regions.toRegion(n.regionIndex+1):null}return null}