var __decorate=this&&this.__decorate||function(e,i,t,r){var n,o=arguments.length,s=o<3?i:null===r?r=Object.getOwnPropertyDescriptor(i,t):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,i,t,r);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(s=(o<3?n(s):o>3?n(i,t,s):n(i,t))||s);return o>3&&s&&Object.defineProperty(i,t,s),s},__param=this&&this.__param||function(e,i){return function(t,r){i(t,r,e)}},__awaiter=this&&this.__awaiter||function(e,i,t,r){return new(t||(t=Promise))((function(n,o){function s(e){try{u(r.next(e))}catch(e){o(e)}}function a(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){var i;e.done?n(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(s,a)}u((r=r.apply(e,i||[])).next())}))};import{Disposable}from"../../../../base/common/lifecycle.js";import{basename}from"../../../../base/common/resources.js";import{registerEditorContribution}from"../../../browser/editorExtensions.js";import{ICodeEditorService}from"../../../browser/services/codeEditorService.js";import*as nls from"../../../../nls.js";import{IDialogService}from"../../../../platform/dialogs/common/dialogs.js";const ignoreUnusualLineTerminators="ignoreUnusualLineTerminators";function writeIgnoreState(e,i,t){e.setModelProperty(i.uri,ignoreUnusualLineTerminators,t)}function readIgnoreState(e,i){return e.getModelProperty(i.uri,ignoreUnusualLineTerminators)}let UnusualLineTerminatorsDetector=class extends Disposable{constructor(e,i,t){super(),this._editor=e,this._dialogService=i,this._codeEditorService=t,this._isPresentingDialog=!1,this._config=this._editor.getOption(120),this._register(this._editor.onDidChangeConfiguration((e=>{e.hasChanged(120)&&(this._config=this._editor.getOption(120),this._checkForUnusualLineTerminators())}))),this._register(this._editor.onDidChangeModel((()=>{this._checkForUnusualLineTerminators()}))),this._register(this._editor.onDidChangeModelContent((e=>{e.isUndoing||this._checkForUnusualLineTerminators()}))),this._checkForUnusualLineTerminators()}_checkForUnusualLineTerminators(){return __awaiter(this,void 0,void 0,(function*(){if("off"===this._config)return;if(!this._editor.hasModel())return;const e=this._editor.getModel();if(!e.mightContainUnusualLineTerminators())return;if(!0===readIgnoreState(this._codeEditorService,e))return;if(this._editor.getOption(86))return;if("auto"===this._config)return void e.removeUnusualLineTerminators(this._editor.getSelections());if(this._isPresentingDialog)return;let i;try{this._isPresentingDialog=!0,i=yield this._dialogService.confirm({title:nls.localize("unusualLineTerminators.title","Unusual Line Terminators"),message:nls.localize("unusualLineTerminators.message","Detected unusual line terminators"),detail:nls.localize("unusualLineTerminators.detail","The file '{0}' contains one or more unusual line terminator characters, like Line Separator (LS) or Paragraph Separator (PS).\n\nIt is recommended to remove them from the file. This can be configured via `editor.unusualLineTerminators`.",basename(e.uri)),primaryButton:nls.localize("unusualLineTerminators.fix","Remove Unusual Line Terminators"),secondaryButton:nls.localize("unusualLineTerminators.ignore","Ignore")})}finally{this._isPresentingDialog=!1}i.confirmed?e.removeUnusualLineTerminators(this._editor.getSelections()):writeIgnoreState(this._codeEditorService,e,!0)}))}};UnusualLineTerminatorsDetector.ID="editor.contrib.unusualLineTerminatorsDetector",UnusualLineTerminatorsDetector=__decorate([__param(1,IDialogService),__param(2,ICodeEditorService)],UnusualLineTerminatorsDetector);export{UnusualLineTerminatorsDetector};registerEditorContribution(UnusualLineTerminatorsDetector.ID,UnusualLineTerminatorsDetector,1);