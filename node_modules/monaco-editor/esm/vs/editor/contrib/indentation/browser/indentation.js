var __decorate=this&&this.__decorate||function(e,t,n,i){var o,s=arguments.length,a=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(a=(s<3?o(a):s>3?o(t,n,a):o(t,n))||a);return s>3&&a&&Object.defineProperty(t,n,a),a},__param=this&&this.__param||function(e,t){return function(n,i){t(n,i,e)}};import{DisposableStore}from"../../../../base/common/lifecycle.js";import*as strings from"../../../../base/common/strings.js";import{EditorAction,registerEditorAction,registerEditorContribution}from"../../../browser/editorExtensions.js";import{ShiftCommand}from"../../../common/commands/shiftCommand.js";import{EditOperation}from"../../../common/core/editOperation.js";import{Range}from"../../../common/core/range.js";import{Selection}from"../../../common/core/selection.js";import{EditorContextKeys}from"../../../common/editorContextKeys.js";import{ILanguageConfigurationService}from"../../../common/languages/languageConfigurationRegistry.js";import{IModelService}from"../../../common/services/model.js";import*as indentUtils from"./indentUtils.js";import*as nls from"../../../../nls.js";import{IQuickInputService}from"../../../../platform/quickinput/common/quickInput.js";import{normalizeIndentation}from"../../../common/core/indentation.js";import{getGoodIndentForLine,getIndentMetadata}from"../../../common/languages/autoIndent.js";export function getReindentEditOperations(e,t,n,i,o){if(1===e.getLineCount()&&1===e.getLineMaxColumn(1))return[];const s=t.getLanguageConfiguration(e.getLanguageId()).indentationRules;if(!s)return[];for(i=Math.min(i,e.getLineCount());n<=i&&s.unIndentedLinePattern;){const t=e.getLineContent(n);if(!s.unIndentedLinePattern.test(t))break;n++}if(n>i-1)return[];const{tabSize:a,indentSize:r,insertSpaces:d}=e.getOptions(),c=(e,t)=>(t=t||1,ShiftCommand.shiftIndent(e,e.length+t,a,r,d)),l=(e,t)=>(t=t||1,ShiftCommand.unshiftIndent(e,e.length+t,a,r,d)),g=[];let u;const p=e.getLineContent(n);let h=p;if(null!=o){u=o;const e=strings.getLeadingWhitespace(p);h=u+p.substring(e.length),s.decreaseIndentPattern&&s.decreaseIndentPattern.test(h)&&(u=l(u),h=u+p.substring(e.length)),p!==h&&g.push(EditOperation.replaceMove(new Selection(n,1,n,e.length+1),normalizeIndentation(u,r,d)))}else u=strings.getLeadingWhitespace(p);let S=u;s.increaseIndentPattern&&s.increaseIndentPattern.test(h)?(S=c(S),u=c(u)):s.indentNextLinePattern&&s.indentNextLinePattern.test(h)&&(S=c(S));for(let t=++n;t<=i;t++){const n=e.getLineContent(t),i=strings.getLeadingWhitespace(n),o=S+n.substring(i.length);s.decreaseIndentPattern&&s.decreaseIndentPattern.test(o)&&(S=l(S),u=l(u)),i!==S&&g.push(EditOperation.replaceMove(new Selection(t,1,t,i.length+1),normalizeIndentation(S,r,d))),s.unIndentedLinePattern&&s.unIndentedLinePattern.test(n)||(s.increaseIndentPattern&&s.increaseIndentPattern.test(o)?(u=c(u),S=u):S=s.indentNextLinePattern&&s.indentNextLinePattern.test(o)?c(S):u)}return g}class IndentationToSpacesAction extends EditorAction{constructor(){super({id:IndentationToSpacesAction.ID,label:nls.localize("indentationToSpaces","Convert Indentation to Spaces"),alias:"Convert Indentation to Spaces",precondition:EditorContextKeys.writable})}run(e,t){const n=t.getModel();if(!n)return;const i=n.getOptions(),o=t.getSelection();if(!o)return;const s=new IndentationToSpacesCommand(o,i.tabSize);t.pushUndoStop(),t.executeCommands(this.id,[s]),t.pushUndoStop(),n.updateOptions({insertSpaces:!0})}}IndentationToSpacesAction.ID="editor.action.indentationToSpaces";export{IndentationToSpacesAction};class IndentationToTabsAction extends EditorAction{constructor(){super({id:IndentationToTabsAction.ID,label:nls.localize("indentationToTabs","Convert Indentation to Tabs"),alias:"Convert Indentation to Tabs",precondition:EditorContextKeys.writable})}run(e,t){const n=t.getModel();if(!n)return;const i=n.getOptions(),o=t.getSelection();if(!o)return;const s=new IndentationToTabsCommand(o,i.tabSize);t.pushUndoStop(),t.executeCommands(this.id,[s]),t.pushUndoStop(),n.updateOptions({insertSpaces:!1})}}IndentationToTabsAction.ID="editor.action.indentationToTabs";export{IndentationToTabsAction};export class ChangeIndentationSizeAction extends EditorAction{constructor(e,t,n){super(n),this.insertSpaces=e,this.displaySizeOnly=t}run(e,t){const n=e.get(IQuickInputService),i=e.get(IModelService),o=t.getModel();if(!o)return;const s=i.getCreationOptions(o.getLanguageId(),o.uri,o.isForSimpleWidget),a=o.getOptions(),r=[1,2,3,4,5,6,7,8].map((e=>({id:e.toString(),label:e.toString(),description:e===s.tabSize&&e===a.tabSize?nls.localize("configuredTabSize","Configured Tab Size"):e===s.tabSize?nls.localize("defaultTabSize","Default Tab Size"):e===a.tabSize?nls.localize("currentTabSize","Current Tab Size"):void 0}))),d=Math.min(o.getOptions().tabSize-1,7);setTimeout((()=>{n.pick(r,{placeHolder:nls.localize({key:"selectTabWidth",comment:["Tab corresponds to the tab key"]},"Select Tab Size for Current File"),activeItem:r[d]}).then((e=>{if(e&&o&&!o.isDisposed()){const t=parseInt(e.label,10);this.displaySizeOnly?o.updateOptions({tabSize:t}):o.updateOptions({tabSize:t,indentSize:t,insertSpaces:this.insertSpaces})}}))}),50)}}class IndentUsingTabs extends ChangeIndentationSizeAction{constructor(){super(!1,!1,{id:IndentUsingTabs.ID,label:nls.localize("indentUsingTabs","Indent Using Tabs"),alias:"Indent Using Tabs",precondition:void 0})}}IndentUsingTabs.ID="editor.action.indentUsingTabs";export{IndentUsingTabs};class IndentUsingSpaces extends ChangeIndentationSizeAction{constructor(){super(!0,!1,{id:IndentUsingSpaces.ID,label:nls.localize("indentUsingSpaces","Indent Using Spaces"),alias:"Indent Using Spaces",precondition:void 0})}}IndentUsingSpaces.ID="editor.action.indentUsingSpaces";export{IndentUsingSpaces};class ChangeTabDisplaySize extends ChangeIndentationSizeAction{constructor(){super(!0,!0,{id:ChangeTabDisplaySize.ID,label:nls.localize("changeTabDisplaySize","Change Tab Display Size"),alias:"Change Tab Display Size",precondition:void 0})}}ChangeTabDisplaySize.ID="editor.action.changeTabDisplaySize";export{ChangeTabDisplaySize};class DetectIndentation extends EditorAction{constructor(){super({id:DetectIndentation.ID,label:nls.localize("detectIndentation","Detect Indentation from Content"),alias:"Detect Indentation from Content",precondition:void 0})}run(e,t){const n=e.get(IModelService),i=t.getModel();if(!i)return;const o=n.getCreationOptions(i.getLanguageId(),i.uri,i.isForSimpleWidget);i.detectIndentation(o.insertSpaces,o.tabSize)}}DetectIndentation.ID="editor.action.detectIndentation";export{DetectIndentation};export class ReindentLinesAction extends EditorAction{constructor(){super({id:"editor.action.reindentlines",label:nls.localize("editor.reindentlines","Reindent Lines"),alias:"Reindent Lines",precondition:EditorContextKeys.writable})}run(e,t){const n=e.get(ILanguageConfigurationService),i=t.getModel();if(!i)return;const o=getReindentEditOperations(i,n,1,i.getLineCount());o.length>0&&(t.pushUndoStop(),t.executeEdits(this.id,o),t.pushUndoStop())}}export class ReindentSelectedLinesAction extends EditorAction{constructor(){super({id:"editor.action.reindentselectedlines",label:nls.localize("editor.reindentselectedlines","Reindent Selected Lines"),alias:"Reindent Selected Lines",precondition:EditorContextKeys.writable})}run(e,t){const n=e.get(ILanguageConfigurationService),i=t.getModel();if(!i)return;const o=t.getSelections();if(null===o)return;const s=[];for(const e of o){let t=e.startLineNumber,o=e.endLineNumber;if(t!==o&&1===e.endColumn&&o--,1===t){if(t===o)continue}else t--;const a=getReindentEditOperations(i,n,t,o);s.push(...a)}s.length>0&&(t.pushUndoStop(),t.executeEdits(this.id,s),t.pushUndoStop())}}export class AutoIndentOnPasteCommand{constructor(e,t){this._initialSelection=t,this._edits=[],this._selectionId=null;for(const t of e)t.range&&"string"==typeof t.text&&this._edits.push(t)}getEditOperations(e,t){for(const e of this._edits)t.addEditOperation(Range.lift(e.range),e.text);let n=!1;Array.isArray(this._edits)&&1===this._edits.length&&this._initialSelection.isEmpty()&&(this._edits[0].range.startColumn===this._initialSelection.endColumn&&this._edits[0].range.startLineNumber===this._initialSelection.endLineNumber?(n=!0,this._selectionId=t.trackSelection(this._initialSelection,!0)):this._edits[0].range.endColumn===this._initialSelection.startColumn&&this._edits[0].range.endLineNumber===this._initialSelection.startLineNumber&&(n=!0,this._selectionId=t.trackSelection(this._initialSelection,!1))),n||(this._selectionId=t.trackSelection(this._initialSelection))}computeCursorState(e,t){return t.getTrackedSelection(this._selectionId)}}let AutoIndentOnPaste=class{constructor(e,t){this.editor=e,this._languageConfigurationService=t,this.callOnDispose=new DisposableStore,this.callOnModel=new DisposableStore,this.callOnDispose.add(e.onDidChangeConfiguration((()=>this.update()))),this.callOnDispose.add(e.onDidChangeModel((()=>this.update()))),this.callOnDispose.add(e.onDidChangeModelLanguage((()=>this.update())))}update(){this.callOnModel.clear(),this.editor.getOption(9)<4||this.editor.getOption(52)||this.editor.hasModel()&&this.callOnModel.add(this.editor.onDidPaste((({range:e})=>{this.trigger(e)})))}trigger(e){const t=this.editor.getSelections();if(null===t||t.length>1)return;const n=this.editor.getModel();if(!n)return;if(!n.tokenization.isCheapToTokenize(e.getStartPosition().lineNumber))return;const i=this.editor.getOption(9),{tabSize:o,indentSize:s,insertSpaces:a}=n.getOptions(),r=[],d={shiftIndent:e=>ShiftCommand.shiftIndent(e,e.length+1,o,s,a),unshiftIndent:e=>ShiftCommand.unshiftIndent(e,e.length+1,o,s,a)};let c=e.startLineNumber;for(;c<=e.endLineNumber&&this.shouldIgnoreLine(n,c);)c++;if(c>e.endLineNumber)return;let l=n.getLineContent(c);if(!/\S/.test(l.substring(0,e.startColumn-1))){const e=getGoodIndentForLine(i,n,n.getLanguageId(),c,d,this._languageConfigurationService);if(null!==e){const t=strings.getLeadingWhitespace(l),i=indentUtils.getSpaceCnt(e,o);if(i!==indentUtils.getSpaceCnt(t,o)){const e=indentUtils.generateIndent(i,o,a);r.push({range:new Range(c,1,c,t.length+1),text:e}),l=e+l.substr(t.length)}else{const e=getIndentMetadata(n,c,this._languageConfigurationService);if(0===e||8===e)return}}}const g=c;for(;c<e.endLineNumber&&!/\S/.test(n.getLineContent(c+1));)c++;if(c!==e.endLineNumber){const t=getGoodIndentForLine(i,{tokenization:{getLineTokens:e=>n.tokenization.getLineTokens(e),getLanguageId:()=>n.getLanguageId(),getLanguageIdAtPosition:(e,t)=>n.getLanguageIdAtPosition(e,t)},getLineContent:e=>e===g?l:n.getLineContent(e)},n.getLanguageId(),c+1,d,this._languageConfigurationService);if(null!==t){const i=indentUtils.getSpaceCnt(t,o),s=indentUtils.getSpaceCnt(strings.getLeadingWhitespace(n.getLineContent(c+1)),o);if(i!==s){const t=i-s;for(let i=c+1;i<=e.endLineNumber;i++){const e=n.getLineContent(i),s=strings.getLeadingWhitespace(e),d=indentUtils.getSpaceCnt(s,o)+t,c=indentUtils.generateIndent(d,o,a);c!==s&&r.push({range:new Range(i,1,i,s.length+1),text:c})}}}}if(r.length>0){this.editor.pushUndoStop();const e=new AutoIndentOnPasteCommand(r,this.editor.getSelection());this.editor.executeCommand("autoIndentOnPaste",e),this.editor.pushUndoStop()}}shouldIgnoreLine(e,t){e.tokenization.forceTokenization(t);const n=e.getLineFirstNonWhitespaceColumn(t);if(0===n)return!0;const i=e.tokenization.getLineTokens(t);if(i.getCount()>0){const e=i.findTokenIndexAtOffset(n);if(e>=0&&1===i.getStandardTokenType(e))return!0}return!1}dispose(){this.callOnDispose.dispose(),this.callOnModel.dispose()}};AutoIndentOnPaste.ID="editor.contrib.autoIndentOnPaste",AutoIndentOnPaste=__decorate([__param(1,ILanguageConfigurationService)],AutoIndentOnPaste);export{AutoIndentOnPaste};function getIndentationEditOperations(e,t,n,i){if(1===e.getLineCount()&&1===e.getLineMaxColumn(1))return;let o="";for(let e=0;e<n;e++)o+=" ";const s=new RegExp(o,"gi");for(let n=1,a=e.getLineCount();n<=a;n++){let a=e.getLineFirstNonWhitespaceColumn(n);if(0===a&&(a=e.getLineMaxColumn(n)),1===a)continue;const r=new Range(n,1,n,a),d=e.getValueInRange(r),c=i?d.replace(/\t/gi,o):d.replace(s,"\t");t.addEditOperation(r,c)}}export class IndentationToSpacesCommand{constructor(e,t){this.selection=e,this.tabSize=t,this.selectionId=null}getEditOperations(e,t){this.selectionId=t.trackSelection(this.selection),getIndentationEditOperations(e,t,this.tabSize,!0)}computeCursorState(e,t){return t.getTrackedSelection(this.selectionId)}}export class IndentationToTabsCommand{constructor(e,t){this.selection=e,this.tabSize=t,this.selectionId=null}getEditOperations(e,t){this.selectionId=t.trackSelection(this.selection),getIndentationEditOperations(e,t,this.tabSize,!1)}computeCursorState(e,t){return t.getTrackedSelection(this.selectionId)}}registerEditorContribution(AutoIndentOnPaste.ID,AutoIndentOnPaste,2),registerEditorAction(IndentationToSpacesAction),registerEditorAction(IndentationToTabsAction),registerEditorAction(IndentUsingTabs),registerEditorAction(IndentUsingSpaces),registerEditorAction(ChangeTabDisplaySize),registerEditorAction(DetectIndentation),registerEditorAction(ReindentLinesAction),registerEditorAction(ReindentSelectedLinesAction);