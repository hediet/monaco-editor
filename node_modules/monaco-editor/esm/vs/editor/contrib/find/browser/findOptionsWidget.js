import*as dom from"../../../../base/browser/dom.js";import"./findOptionsWidget.css";import{CaseSensitiveToggle,RegexToggle,WholeWordsToggle}from"../../../../base/browser/ui/findinput/findInputToggles.js";import{Widget}from"../../../../base/browser/ui/widget.js";import{RunOnceScheduler}from"../../../../base/common/async.js";import{FIND_IDS}from"./findModel.js";import{asCssVariable,inputActiveOptionBackground,inputActiveOptionBorder,inputActiveOptionForeground}from"../../../../platform/theme/common/colorRegistry.js";class FindOptionsWidget extends Widget{constructor(e,i,t){super(),this._hideSoon=this._register(new RunOnceScheduler((()=>this._hide()),2e3)),this._isVisible=!1,this._editor=e,this._state=i,this._keybindingService=t,this._domNode=document.createElement("div"),this._domNode.className="findOptionsWidget",this._domNode.style.display="none",this._domNode.style.top="10px",this._domNode.style.zIndex="12",this._domNode.setAttribute("role","presentation"),this._domNode.setAttribute("aria-hidden","true");const s={inputActiveOptionBorder:asCssVariable(inputActiveOptionBorder),inputActiveOptionForeground:asCssVariable(inputActiveOptionForeground),inputActiveOptionBackground:asCssVariable(inputActiveOptionBackground)};this.caseSensitive=this._register(new CaseSensitiveToggle(Object.assign({appendTitle:this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),isChecked:this._state.matchCase},s))),this._domNode.appendChild(this.caseSensitive.domNode),this._register(this.caseSensitive.onChange((()=>{this._state.change({matchCase:this.caseSensitive.checked},!1)}))),this.wholeWords=this._register(new WholeWordsToggle(Object.assign({appendTitle:this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),isChecked:this._state.wholeWord},s))),this._domNode.appendChild(this.wholeWords.domNode),this._register(this.wholeWords.onChange((()=>{this._state.change({wholeWord:this.wholeWords.checked},!1)}))),this.regex=this._register(new RegexToggle(Object.assign({appendTitle:this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),isChecked:this._state.isRegex},s))),this._domNode.appendChild(this.regex.domNode),this._register(this.regex.onChange((()=>{this._state.change({isRegex:this.regex.checked},!1)}))),this._editor.addOverlayWidget(this),this._register(this._state.onFindReplaceStateChange((e=>{let i=!1;e.isRegex&&(this.regex.checked=this._state.isRegex,i=!0),e.wholeWord&&(this.wholeWords.checked=this._state.wholeWord,i=!0),e.matchCase&&(this.caseSensitive.checked=this._state.matchCase,i=!0),!this._state.isRevealed&&i&&this._revealTemporarily()}))),this._register(dom.addDisposableListener(this._domNode,dom.EventType.MOUSE_LEAVE,(e=>this._onMouseLeave()))),this._register(dom.addDisposableListener(this._domNode,"mouseover",(e=>this._onMouseOver())))}_keybindingLabelFor(e){const i=this._keybindingService.lookupKeybinding(e);return i?` (${i.getLabel()})`:""}dispose(){this._editor.removeOverlayWidget(this),super.dispose()}getId(){return FindOptionsWidget.ID}getDomNode(){return this._domNode}getPosition(){return{preference:0}}highlightFindOptions(){this._revealTemporarily()}_revealTemporarily(){this._show(),this._hideSoon.schedule()}_onMouseLeave(){this._hideSoon.schedule()}_onMouseOver(){this._hideSoon.cancel()}_show(){this._isVisible||(this._isVisible=!0,this._domNode.style.display="block")}_hide(){this._isVisible&&(this._isVisible=!1,this._domNode.style.display="none")}}FindOptionsWidget.ID="editor.contrib.findOptionsWidget";export{FindOptionsWidget};