import{Disposable}from"../../../../base/common/lifecycle.js";import{registerEditorContribution}from"../../../browser/editorExtensions.js";import{MessageController}from"../../message/browser/messageController.js";import*as nls from"../../../../nls.js";class ReadOnlyMessageController extends Disposable{constructor(e){super(),this.editor=e,this._register(this.editor.onDidAttemptReadOnlyEdit((()=>this._onDidAttemptReadOnlyEdit())))}_onDidAttemptReadOnlyEdit(){const e=MessageController.get(this.editor);e&&this.editor.hasModel()&&(this.editor.isSimpleWidget?e.showMessage(nls.localize("editor.simple.readonly","Cannot edit in read-only input"),this.editor.getPosition()):e.showMessage(nls.localize("editor.readonly","Cannot edit in read-only editor"),this.editor.getPosition()))}}ReadOnlyMessageController.ID="editor.contrib.readOnlyMessageController";export{ReadOnlyMessageController};registerEditorContribution(ReadOnlyMessageController.ID,ReadOnlyMessageController,2);