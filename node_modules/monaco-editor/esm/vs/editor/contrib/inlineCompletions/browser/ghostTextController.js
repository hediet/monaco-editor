var __decorate=this&&this.__decorate||function(e,t,o,i){var n,s=arguments.length,l=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,o):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,o,i);else for(var r=e.length-1;r>=0;r--)(n=e[r])&&(l=(s<3?n(l):s>3?n(t,o,l):n(t,o))||l);return s>3&&l&&Object.defineProperty(t,o,l),l},__param=this&&this.__param||function(e,t){return function(o,i){t(o,i,e)}},__awaiter=this&&this.__awaiter||function(e,t,o,i){return new(o||(o=Promise))((function(n,s){function l(e){try{a(i.next(e))}catch(e){s(e)}}function r(e){try{a(i.throw(e))}catch(e){s(e)}}function a(e){var t;e.done?n(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(l,r)}a((i=i.apply(e,t||[])).next())}))};import{Emitter}from"../../../../base/common/event.js";import{Disposable,MutableDisposable,toDisposable}from"../../../../base/common/lifecycle.js";import{firstNonWhitespaceIndex}from"../../../../base/common/strings.js";import{EditorAction}from"../../../browser/editorExtensions.js";import{CursorColumns}from"../../../common/core/cursorColumns.js";import{EditorContextKeys}from"../../../common/editorContextKeys.js";import{inlineSuggestCommitId,showNextInlineSuggestionActionId,showPreviousInlineSuggestionActionId}from"./consts.js";import{GhostTextModel}from"./ghostTextModel.js";import{GhostTextWidget}from"./ghostTextWidget.js";import*as nls from"../../../../nls.js";import{Action2,MenuId}from"../../../../platform/actions/common/actions.js";import{IConfigurationService}from"../../../../platform/configuration/common/configuration.js";import{ContextKeyExpr,IContextKeyService,RawContextKey}from"../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService}from"../../../../platform/instantiation/common/instantiation.js";let GhostTextController=class e extends Disposable{static get(t){return t.getContribution(e.ID)}get activeModel(){var e;return null===(e=this.activeController.value)||void 0===e?void 0:e.model}constructor(t,o,i){super(),this.editor=t,this.instantiationService=o,this.contextKeyService=i,this.triggeredExplicitly=!1,this.activeController=this._register(new MutableDisposable),this.activeModelDidChangeEmitter=this._register(new Emitter),this.firstUndoableVersionId=void 0,this.alwaysShowInlineSuggestionToolbar=e.alwaysShowInlineSuggestionToolbar.bindTo(this.contextKeyService),this._register(this.editor.onDidChangeModelContent((e=>{var t;(!e.isUndoing||this.firstUndoableVersionId&&this.editor.getModel().getAlternativeVersionId()<this.firstUndoableVersionId)&&(null===(t=this.activeController.value)||void 0===t||t.contextKeys.canUndoInlineSuggestion.reset(),this.firstUndoableVersionId=void 0)}))),this._register(this.editor.onDidChangeCursorPosition((e=>{var t;3===e.reason&&(null===(t=this.activeController.value)||void 0===t||t.contextKeys.canUndoInlineSuggestion.reset(),this.firstUndoableVersionId=void 0)}))),this._register(this.editor.onDidChangeModel((()=>{this.update()}))),this._register(this.editor.onDidChangeConfiguration((e=>{(e.hasChanged(112)||e.hasChanged(59))&&this.update()}))),this.update()}update(){const e=this.editor.getOption(112),t=this.editor.getOption(59);this.alwaysShowInlineSuggestionToolbar.set("always"===t.showToolbar);const o=this.editor.hasModel()&&(e.preview||t.enabled||this.triggeredExplicitly);o!==!!this.activeController.value&&(this.activeController.value=void 0,this.activeController.value=o?this.instantiationService.createInstance(ActiveGhostTextController,this.editor):void 0,this.activeModelDidChangeEmitter.fire())}shouldShowHoverAt(e){var t;return(null===(t=this.activeModel)||void 0===t?void 0:t.shouldShowHoverAt(e))||!1}shouldShowHoverAtViewZone(e){var t,o;return(null===(o=null===(t=this.activeController.value)||void 0===t?void 0:t.widget)||void 0===o?void 0:o.shouldShowHoverAtViewZone(e))||!1}trigger(){var e;this.triggeredExplicitly=!0,this.activeController.value||this.update(),null===(e=this.activeModel)||void 0===e||e.triggerInlineCompletion()}commitPartially(){var e,t,o;const i=this.firstUndoableVersionId;null===(e=this.activeModel)||void 0===e||e.commitInlineCompletionPartially(),null===(o=null===(t=this.activeController)||void 0===t?void 0:t.value)||void 0===o||o.contextKeys.canUndoInlineSuggestion.set(!0),this.firstUndoableVersionId=null!=i?i:this.editor.getModel().getAlternativeVersionId()}commit(){var e;null===(e=this.activeModel)||void 0===e||e.commitInlineCompletion()}hide(){var e;null===(e=this.activeModel)||void 0===e||e.hideInlineCompletion()}showNextInlineCompletion(){var e;null===(e=this.activeModel)||void 0===e||e.showNextInlineCompletion()}showPreviousInlineCompletion(){var e;null===(e=this.activeModel)||void 0===e||e.showPreviousInlineCompletion()}};GhostTextController.inlineSuggestionVisible=new RawContextKey("inlineSuggestionVisible",!1,nls.localize("inlineSuggestionVisible","Whether an inline suggestion is visible")),GhostTextController.inlineSuggestionHasIndentation=new RawContextKey("inlineSuggestionHasIndentation",!1,nls.localize("inlineSuggestionHasIndentation","Whether the inline suggestion starts with whitespace")),GhostTextController.inlineSuggestionHasIndentationLessThanTabSize=new RawContextKey("inlineSuggestionHasIndentationLessThanTabSize",!0,nls.localize("inlineSuggestionHasIndentationLessThanTabSize","Whether the inline suggestion starts with whitespace that is less than what would be inserted by tab")),GhostTextController.canUndoInlineSuggestion=new RawContextKey("canUndoInlineSuggestion",!1,nls.localize("canUndoInlineSuggestion","Whether undo would undo an inline suggestion")),GhostTextController.alwaysShowInlineSuggestionToolbar=new RawContextKey("alwaysShowInlineSuggestionToolbar",!1,nls.localize("alwaysShowInlineSuggestionToolbar","Whether the inline suggestion toolbar should always be visible")),GhostTextController.ID="editor.contrib.ghostTextController",GhostTextController=__decorate([__param(1,IInstantiationService),__param(2,IContextKeyService)],GhostTextController);export{GhostTextController};class GhostTextContextKeys{constructor(e){this.contextKeyService=e,this.inlineCompletionVisible=GhostTextController.inlineSuggestionVisible.bindTo(this.contextKeyService),this.inlineCompletionSuggestsIndentation=GhostTextController.inlineSuggestionHasIndentation.bindTo(this.contextKeyService),this.inlineCompletionSuggestsIndentationLessThanTabSize=GhostTextController.inlineSuggestionHasIndentationLessThanTabSize.bindTo(this.contextKeyService),this.canUndoInlineSuggestion=GhostTextController.canUndoInlineSuggestion.bindTo(this.contextKeyService)}}let ActiveGhostTextController=class extends Disposable{constructor(e,t,o){super(),this.editor=e,this.instantiationService=t,this.contextKeyService=o,this.contextKeys=new GhostTextContextKeys(this.contextKeyService),this.model=this._register(this.instantiationService.createInstance(GhostTextModel,this.editor)),this.widget=this._register(this.instantiationService.createInstance(GhostTextWidget,this.editor,this.model)),this._register(toDisposable((()=>{this.contextKeys.inlineCompletionVisible.set(!1),this.contextKeys.inlineCompletionSuggestsIndentation.set(!1),this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(!0)}))),this._register(this.model.onDidChange((()=>{this.updateContextKeys()}))),this.updateContextKeys()}updateContextKeys(){var e;this.contextKeys.inlineCompletionVisible.set(void 0!==(null===(e=this.model.activeInlineCompletionsModel)||void 0===e?void 0:e.ghostText));let t=!1,o=!0;const i=this.model.inlineCompletionsModel.ghostText;if(this.model.activeInlineCompletionsModel&&i&&i.parts.length>0){const{column:e,lines:n}=i.parts[0],s=n[0];if(e<=this.editor.getModel().getLineIndentColumn(i.lineNumber)){let e=firstNonWhitespaceIndex(s);-1===e&&(e=s.length-1),t=e>0;const i=this.editor.getModel().getOptions().tabSize;o=CursorColumns.visibleColumnFromColumn(s,e+1,i)<i}}this.contextKeys.inlineCompletionSuggestsIndentation.set(t),this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(o)}};ActiveGhostTextController=__decorate([__param(1,IInstantiationService),__param(2,IContextKeyService)],ActiveGhostTextController);export{ActiveGhostTextController};class ShowNextInlineSuggestionAction extends EditorAction{constructor(){super({id:ShowNextInlineSuggestionAction.ID,label:nls.localize("action.inlineSuggest.showNext","Show Next Inline Suggestion"),alias:"Show Next Inline Suggestion",precondition:ContextKeyExpr.and(EditorContextKeys.writable,GhostTextController.inlineSuggestionVisible),kbOpts:{weight:100,primary:601}})}run(e,t){return __awaiter(this,void 0,void 0,(function*(){const e=GhostTextController.get(t);e&&(e.showNextInlineCompletion(),t.focus())}))}}ShowNextInlineSuggestionAction.ID=showNextInlineSuggestionActionId;export{ShowNextInlineSuggestionAction};class ShowPreviousInlineSuggestionAction extends EditorAction{constructor(){super({id:ShowPreviousInlineSuggestionAction.ID,label:nls.localize("action.inlineSuggest.showPrevious","Show Previous Inline Suggestion"),alias:"Show Previous Inline Suggestion",precondition:ContextKeyExpr.and(EditorContextKeys.writable,GhostTextController.inlineSuggestionVisible),kbOpts:{weight:100,primary:599}})}run(e,t){return __awaiter(this,void 0,void 0,(function*(){const e=GhostTextController.get(t);e&&(e.showPreviousInlineCompletion(),t.focus())}))}}ShowPreviousInlineSuggestionAction.ID=showPreviousInlineSuggestionActionId;export{ShowPreviousInlineSuggestionAction};export class TriggerInlineSuggestionAction extends EditorAction{constructor(){super({id:"editor.action.inlineSuggest.trigger",label:nls.localize("action.inlineSuggest.trigger","Trigger Inline Suggestion"),alias:"Trigger Inline Suggestion",precondition:EditorContextKeys.writable})}run(e,t){return __awaiter(this,void 0,void 0,(function*(){const e=GhostTextController.get(t);null==e||e.trigger()}))}}export class AcceptNextWordOfInlineCompletion extends EditorAction{constructor(){super({id:"editor.action.inlineSuggest.acceptNextWord",label:nls.localize("action.inlineSuggest.acceptNextWord","Accept Next Word Of Inline Suggestion"),alias:"Accept Next Word Of Inline Suggestion",precondition:ContextKeyExpr.and(EditorContextKeys.writable,GhostTextController.inlineSuggestionVisible),kbOpts:{weight:101,primary:2065},menuOpts:[{menuId:MenuId.InlineSuggestionToolbar,title:nls.localize("acceptWord","Accept Word"),group:"primary",order:2}]})}run(e,t){return __awaiter(this,void 0,void 0,(function*(){const e=GhostTextController.get(t);e&&e.commitPartially()}))}}export class AcceptInlineCompletion extends EditorAction{constructor(){super({id:inlineSuggestCommitId,label:nls.localize("action.inlineSuggest.accept","Accept Inline Suggestion"),alias:"Accept Inline Suggestion",precondition:GhostTextController.inlineSuggestionVisible,menuOpts:[{menuId:MenuId.InlineSuggestionToolbar,title:nls.localize("accept","Accept"),group:"primary",order:1}],kbOpts:{primary:2,weight:200,kbExpr:ContextKeyExpr.and(GhostTextController.inlineSuggestionVisible,EditorContextKeys.tabMovesFocus.toNegated(),GhostTextController.inlineSuggestionHasIndentationLessThanTabSize)}})}run(e,t){return __awaiter(this,void 0,void 0,(function*(){const e=GhostTextController.get(t);e&&(e.commit(),e.editor.focus())}))}}class HideInlineCompletion extends EditorAction{constructor(){super({id:HideInlineCompletion.ID,label:nls.localize("action.inlineSuggest.acceptNextWord","Accept Next Word Of Inline Suggestion"),alias:"Accept Next Word Of Inline Suggestion",precondition:GhostTextController.inlineSuggestionVisible,kbOpts:{weight:100,primary:9}})}run(e,t){return __awaiter(this,void 0,void 0,(function*(){const e=GhostTextController.get(t);e&&e.hide()}))}}HideInlineCompletion.ID="editor.action.inlineSuggest.hide";export{HideInlineCompletion};class ToggleAlwaysShowInlineSuggestionToolbar extends Action2{constructor(){super({id:ToggleAlwaysShowInlineSuggestionToolbar.ID,title:nls.localize("action.inlineSuggest.alwaysShowToolbar","Always Show Toolbar"),f1:!1,precondition:void 0,menu:[{id:MenuId.InlineSuggestionToolbar,group:"secondary",order:10}],toggled:GhostTextController.alwaysShowInlineSuggestionToolbar})}run(e,t){return __awaiter(this,void 0,void 0,(function*(){const t=e.get(IConfigurationService),o="always"===t.getValue("editor.inlineSuggest.showToolbar")?"onHover":"always";t.updateValue("editor.inlineSuggest.showToolbar",o)}))}}ToggleAlwaysShowInlineSuggestionToolbar.ID="editor.action.inlineSuggest.toggleAlwaysShowToolbar";export{ToggleAlwaysShowInlineSuggestionToolbar};export class UndoAcceptPart extends EditorAction{constructor(){super({id:"editor.action.inlineSuggest.undo",label:nls.localize("action.inlineSuggest.undo","Undo Accept Word"),alias:"Undo Accept Word",precondition:ContextKeyExpr.and(EditorContextKeys.writable,GhostTextController.canUndoInlineSuggestion),kbOpts:{weight:101,primary:2063,kbExpr:ContextKeyExpr.and(EditorContextKeys.writable,GhostTextController.canUndoInlineSuggestion)},menuOpts:[{menuId:MenuId.InlineSuggestionToolbar,title:nls.localize("undoAcceptWord","Undo Accept Word"),group:"secondary",order:3}]})}run(e,t){var o;return __awaiter(this,void 0,void 0,(function*(){null===(o=t.getModel())||void 0===o||o.undo()}))}}