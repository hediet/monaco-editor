var __decorate=this&&this.__decorate||function(e,t,i,o){var n,s=arguments.length,l=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,i):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,i,o);else for(var r=e.length-1;r>=0;r--)(n=e[r])&&(l=(s<3?n(l):s>3?n(t,i,l):n(t,i))||l);return s>3&&l&&Object.defineProperty(t,i,l),l},__param=this&&this.__param||function(e,t){return function(i,o){t(i,o,e)}};import{Emitter}from"../../../../base/common/event.js";import{Disposable,MutableDisposable}from"../../../../base/common/lifecycle.js";import{Position}from"../../../common/core/position.js";import{InlineCompletionTriggerKind}from"../../../common/languages.js";import{InlineCompletionsModel,SynchronizedInlineCompletionsCache}from"./inlineCompletionsModel.js";import{SuggestWidgetPreviewModel}from"./suggestWidgetPreviewModel.js";import{createDisposableRef}from"./utils.js";import{IInstantiationService}from"../../../../platform/instantiation/common/instantiation.js";export class DelegatingModel extends Disposable{constructor(){super(...arguments),this.onDidChangeEmitter=new Emitter,this.onDidChange=this.onDidChangeEmitter.event,this.hasCachedGhostText=!1,this.currentModelRef=this._register(new MutableDisposable)}get targetModel(){var e;return null===(e=this.currentModelRef.value)||void 0===e?void 0:e.object}setTargetModel(e){var t;(null===(t=this.currentModelRef.value)||void 0===t?void 0:t.object)!==e&&(this.currentModelRef.clear(),this.currentModelRef.value=e?createDisposableRef(e,e.onDidChange((()=>{this.hasCachedGhostText=!1,this.onDidChangeEmitter.fire()}))):void 0,this.hasCachedGhostText=!1,this.onDidChangeEmitter.fire())}get ghostText(){var e,t;return this.hasCachedGhostText||(this.cachedGhostText=null===(t=null===(e=this.currentModelRef.value)||void 0===e?void 0:e.object)||void 0===t?void 0:t.ghostText,this.hasCachedGhostText=!0),this.cachedGhostText}setExpanded(e){var t;null===(t=this.targetModel)||void 0===t||t.setExpanded(e)}get minReservedLineCount(){return this.targetModel?this.targetModel.minReservedLineCount:0}}let GhostTextModel=class extends DelegatingModel{get activeInlineCompletionsModel(){if(this.targetModel===this.inlineCompletionsModel)return this.inlineCompletionsModel}constructor(e,t){super(),this.editor=e,this.instantiationService=t,this.sharedCache=this._register(new SharedInlineCompletionCache),this.suggestWidgetAdapterModel=this._register(this.instantiationService.createInstance(SuggestWidgetPreviewModel,this.editor,this.sharedCache)),this.inlineCompletionsModel=this._register(this.instantiationService.createInstance(InlineCompletionsModel,this.editor,this.sharedCache)),this._register(this.suggestWidgetAdapterModel.onDidChange((()=>{this.updateModel()}))),this.updateModel()}updateModel(){this.setTargetModel(this.suggestWidgetAdapterModel.isActive?this.suggestWidgetAdapterModel:this.inlineCompletionsModel),this.inlineCompletionsModel.setActive(this.targetModel===this.inlineCompletionsModel)}shouldShowHoverAt(e){var t;const i=null===(t=this.activeInlineCompletionsModel)||void 0===t?void 0:t.ghostText;return!!i&&i.parts.some((t=>e.containsPosition(new Position(i.lineNumber,t.column))))}triggerInlineCompletion(){var e;null===(e=this.activeInlineCompletionsModel)||void 0===e||e.trigger(InlineCompletionTriggerKind.Explicit)}commitInlineCompletion(){var e;null===(e=this.activeInlineCompletionsModel)||void 0===e||e.commitCurrentSuggestion()}commitInlineCompletionPartially(){var e;null===(e=this.activeInlineCompletionsModel)||void 0===e||e.commitCurrentSuggestionPartially()}hideInlineCompletion(){var e;null===(e=this.activeInlineCompletionsModel)||void 0===e||e.hide()}showNextInlineCompletion(){var e;null===(e=this.activeInlineCompletionsModel)||void 0===e||e.showNext()}showPreviousInlineCompletion(){var e;null===(e=this.activeInlineCompletionsModel)||void 0===e||e.showPrevious()}};GhostTextModel=__decorate([__param(1,IInstantiationService)],GhostTextModel);export{GhostTextModel};export class SharedInlineCompletionCache extends Disposable{constructor(){super(...arguments),this.onDidChangeEmitter=new Emitter,this.onDidChange=this.onDidChangeEmitter.event,this.cache=this._register(new MutableDisposable)}get value(){return this.cache.value}setValue(e,t,i){this.cache.value=new SynchronizedInlineCompletionsCache(t,e,(()=>this.onDidChangeEmitter.fire()),i)}clearAndLeak(){return this.cache.clearAndLeak()}clear(){this.cache.clear()}}