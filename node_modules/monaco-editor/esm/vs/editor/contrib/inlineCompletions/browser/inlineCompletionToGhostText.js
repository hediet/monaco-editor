import{LcsDiff}from"../../../../base/common/diff/diff.js";import*as strings from"../../../../base/common/strings.js";import{Range}from"../../../common/core/range.js";import{GhostText,GhostTextPart}from"./ghostText.js";export function minimizeInlineCompletion(t,e){if(!e)return e;const n=t.getValueInRange(e.range),i=strings.commonPrefixLength(n,e.insertText),r=t.getOffsetAt(e.range.getStartPosition())+i,s=t.getPositionAt(r),o=n.substr(i),a=strings.commonSuffixLength(o,e.insertText),g=t.getPositionAt(Math.max(r,t.getOffsetAt(e.range.getEndPosition())-a));return{range:Range.fromPositions(s,g),insertText:e.insertText.substr(i,e.insertText.length-i-a),snippetInfo:e.snippetInfo,filterText:e.filterText,additionalTextEdits:e.additionalTextEdits}}export function normalizedInlineCompletionsEquals(t,e){return t===e||!(!t||!e)&&t.range.equalsRange(e.range)&&t.insertText===e.insertText&&t.command===e.command}export function inlineCompletionToGhostText(t,e,n,i,r=0){if(t.range.startLineNumber!==t.range.endLineNumber)return;const s=e.getLineContent(t.range.startLineNumber),o=strings.getLeadingWhitespace(s).length;if(t.range.startColumn-1<=o){const e=strings.getLeadingWhitespace(t.insertText).length,n=s.substring(t.range.startColumn-1,o),i=Range.fromPositions(t.range.getStartPosition().delta(0,n.length),t.range.getEndPosition()),r=t.insertText.startsWith(n)?t.insertText.substring(n.length):t.insertText.substring(e);t={range:i,insertText:r,command:t.command,snippetInfo:void 0,filterText:t.filterText,additionalTextEdits:t.additionalTextEdits}}const a=e.getValueInRange(t.range),g=cachingDiff(a,t.insertText);if(!g)return;const l=t.range.startLineNumber,f=new Array;if("prefix"===n){const t=g.filter((t=>0===t.originalLength));if(t.length>1||1===t.length&&t[0].originalStart!==a.length)return}const u=t.insertText.length-r;for(const e of g){const r=t.range.startColumn+e.originalStart+e.originalLength;if("subwordSmart"===n&&i&&i.lineNumber===t.range.startLineNumber&&r<i.column)return;if(e.originalLength>0)return;if(0===e.modifiedLength)continue;const s=e.modifiedStart+e.modifiedLength,o=Math.max(e.modifiedStart,Math.min(s,u)),a=t.insertText.substring(e.modifiedStart,o),g=t.insertText.substring(o,Math.max(e.modifiedStart,s));if(a.length>0){const t=strings.splitLines(a);f.push(new GhostTextPart(r,t,!1))}if(g.length>0){const t=strings.splitLines(g);f.push(new GhostTextPart(r,t,!0))}}return new GhostText(l,f,0)}let lastRequest;function cachingDiff(t,e){if((null==lastRequest?void 0:lastRequest.originalValue)===t&&(null==lastRequest?void 0:lastRequest.newValue)===e)return null==lastRequest?void 0:lastRequest.changes;{let n=smartDiff(t,e,!0);if(n){const i=deletedCharacters(n);if(i>0){const r=smartDiff(t,e,!1);r&&deletedCharacters(r)<i&&(n=r)}}return lastRequest={originalValue:t,newValue:e,changes:n},n}}function deletedCharacters(t){let e=0;for(const n of t)e+=n.originalLength;return e}function smartDiff(t,e,n){if(t.length>5e3||e.length>5e3)return;function i(t){let e=0;for(let n=0,i=t.length;n<i;n++){const i=t.charCodeAt(n);i>e&&(e=i)}return e}const r=Math.max(i(t),i(e));function s(t){if(t<0)throw new Error("unexpected");return r+t+1}function o(t){let e=0,i=0;const r=new Int32Array(t.length);for(let o=0,a=t.length;o<a;o++)if(n&&"("===t[o]){const t=100*i+e;r[o]=s(2*t),e++}else if(n&&")"===t[o]){e=Math.max(e-1,0);const t=100*i+e;r[o]=s(2*t+1),0===e&&i++}else r[o]=t.charCodeAt(o);return r}const a=o(t),g=o(e);return new LcsDiff({getElements:()=>a},{getElements:()=>g}).ComputeDiff(!1).changes}