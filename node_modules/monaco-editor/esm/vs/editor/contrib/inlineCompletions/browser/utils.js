import{Range}from"../../../common/core/range.js";export function createDisposableRef(t,e){return{object:t,dispose:()=>null==e?void 0:e.dispose()}}export function applyEdits(t,e){const s=new PositionOffsetTransformer(t),r=e.map((t=>{const e=Range.lift(t.range);return{startOffset:s.getOffset(e.getStartPosition()),endOffset:s.getOffset(e.getEndPosition()),text:t.text}}));r.sort(((t,e)=>e.startOffset-t.startOffset));for(const e of r)t=t.substring(0,e.startOffset)+e.text+t.substring(e.endOffset);return t}class PositionOffsetTransformer{constructor(t){this.lineStartOffsetByLineIdx=[],this.lineStartOffsetByLineIdx.push(0);for(let e=0;e<t.length;e++)"\n"===t.charAt(e)&&this.lineStartOffsetByLineIdx.push(e+1)}getOffset(t){return this.lineStartOffsetByLineIdx[t.lineNumber-1]+t.column-1}}const array=[];export function getReadonlyEmptyArray(){return array}