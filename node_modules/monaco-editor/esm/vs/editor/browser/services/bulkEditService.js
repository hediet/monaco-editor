import{createDecorator}from"../../../platform/instantiation/common/instantiation.js";import{URI}from"../../../base/common/uri.js";import{isObject}from"../../../base/common/types.js";export const IBulkEditService=createDecorator("IWorkspaceEditService");export class ResourceEdit{constructor(e){this.metadata=e}static convert(e){return e.edits.map((e=>{if(ResourceTextEdit.is(e))return ResourceTextEdit.lift(e);if(ResourceFileEdit.is(e))return ResourceFileEdit.lift(e);throw new Error("Unsupported edit")}))}}export class ResourceTextEdit extends ResourceEdit{static is(e){return e instanceof ResourceTextEdit||isObject(e)&&URI.isUri(e.resource)&&isObject(e.textEdit)}static lift(e){return e instanceof ResourceTextEdit?e:new ResourceTextEdit(e.resource,e.textEdit,e.versionId,e.metadata)}constructor(e,t,r,s){super(s),this.resource=e,this.textEdit=t,this.versionId=r}}export class ResourceFileEdit extends ResourceEdit{static is(e){return e instanceof ResourceFileEdit||isObject(e)&&(Boolean(e.newResource)||Boolean(e.oldResource))}static lift(e){return e instanceof ResourceFileEdit?e:new ResourceFileEdit(e.oldResource,e.newResource,e.options,e.metadata)}constructor(e,t,r={},s){super(s),this.oldResource=e,this.newResource=t,this.options=r}}