import{MinimapCharRenderer}from"./minimapCharRenderer.js";import{allCharCodes}from"./minimapCharSheet.js";import{prebakedMiniMaps}from"./minimapPreBaked.js";import{toUint8}from"../../../../base/common/uint.js";export class MinimapCharRendererFactory{static create(e,t){if(this.lastCreated&&e===this.lastCreated.scale&&t===this.lastFontFamily)return this.lastCreated;let a;return a=prebakedMiniMaps[e]?new MinimapCharRenderer(prebakedMiniMaps[e](),e):MinimapCharRendererFactory.createFromSampleData(MinimapCharRendererFactory.createSampleData(t).data,e),this.lastFontFamily=t,this.lastCreated=a,a}static createSampleData(e){const t=document.createElement("canvas"),a=t.getContext("2d");t.style.height="16px",t.height=16,t.width=960,t.style.width="960px",a.fillStyle="#ffffff",a.font=`bold 16px ${e}`,a.textBaseline="middle";let r=0;for(const e of allCharCodes)a.fillText(String.fromCharCode(e),r,8),r+=10;return a.getImageData(0,0,960,16)}static createFromSampleData(e,t){if(61440!==e.length)throw new Error("Unexpected source in MinimapCharRenderer");const a=MinimapCharRendererFactory._downsample(e,t);return new MinimapCharRenderer(a,t)}static _downsampleChar(e,t,a,r,n){const i=1*n,o=2*n;let s=r,l=0;for(let r=0;r<o;r++){const n=r/o*16,m=(r+1)/o*16;for(let r=0;r<i;r++){const o=r/i*10,h=(r+1)/i*10;let p=0,d=0;for(let a=n;a<m;a++){const r=t+3840*Math.floor(a),n=1-(a-Math.floor(a));for(let t=o;t<h;t++){const a=1-(t-Math.floor(t)),i=r+4*Math.floor(t),o=a*n;d+=o,p+=e[i]*e[i+3]/255*o}}const c=p/d;l=Math.max(l,c),a[s++]=toUint8(c)}}return l}static _downsample(e,t){const a=2*t*1*t,r=96*a,n=new Uint8ClampedArray(r);let i=0,o=0,s=0;for(let r=0;r<96;r++)s=Math.max(s,this._downsampleChar(e,o,n,i,t)),i+=a,o+=40;if(s>0){const e=255/s;for(let t=0;t<r;t++)n[t]*=e}return n}}