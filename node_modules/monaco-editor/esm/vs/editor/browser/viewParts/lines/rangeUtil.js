import{FloatHorizontalRange}from"../../view/renderingContext.js";export class RangeUtil{static _createRange(){return this._handyReadyRange||(this._handyReadyRange=document.createRange()),this._handyReadyRange}static _detachRange(t,e){t.selectNodeContents(e)}static _readClientRects(t,e,n,a,r){const i=this._createRange();try{return i.setStart(t,e),i.setEnd(n,a),i.getClientRects()}catch(t){return null}finally{this._detachRange(i,r)}}static _mergeAdjacentRanges(t){if(1===t.length)return t;t.sort(FloatHorizontalRange.compare);const e=[];let n=0,a=t[0];for(let r=1,i=t.length;r<i;r++){const i=t[r];a.left+a.width+.9>=i.left?a.width=Math.max(a.width,i.left+i.width-a.left):(e[n++]=a,a=i)}return e[n++]=a,e}static _createHorizontalRangesFromClientRects(t,e,n){if(!t||0===t.length)return null;const a=[];for(let r=0,i=t.length;r<i;r++){const i=t[r];a[r]=new FloatHorizontalRange(Math.max(0,(i.left-e)/n),i.width/n)}return this._mergeAdjacentRanges(a)}static readHorizontalRanges(t,e,n,a,r,i,l,h){const s=t.children.length-1;if(0>s)return null;if((e=Math.min(s,Math.max(0,e)))===(a=Math.min(s,Math.max(0,a)))&&n===r&&0===n&&!t.children[e].firstChild){const n=t.children[e].getClientRects();return this._createHorizontalRangesFromClientRects(n,i,l)}e!==a&&a>0&&0===r&&(a--,r=1073741824);let c=t.children[e].firstChild,o=t.children[a].firstChild;if(c&&o||(!c&&0===n&&e>0&&(c=t.children[e-1].firstChild,n=1073741824),!o&&0===r&&a>0&&(o=t.children[a-1].firstChild,r=1073741824)),!c||!o)return null;n=Math.min(c.textContent.length,Math.max(0,n)),r=Math.min(o.textContent.length,Math.max(0,r));const d=this._readClientRects(c,n,o,r,h);return this._createHorizontalRangesFromClientRects(d,i,l)}}