var __awaiter=this&&this.__awaiter||function(t,e,r,a){return new(r||(r=Promise))((function(n,o){function s(t){try{f(a.next(t))}catch(t){o(t)}}function i(t){try{f(a.throw(t))}catch(t){o(t)}}function f(t){var e;t.done?n(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,i)}f((a=a.apply(t,e||[])).next())}))};import{DataTransfers}from"../../base/browser/dnd.js";import{createFileDataTransferItem,createStringDataTransferItem,UriList,VSDataTransfer}from"../../base/common/dataTransfer.js";import{Mimes}from"../../base/common/mime.js";import{URI}from"../../base/common/uri.js";import{CodeDataTransfers,extractEditorsDropData}from"../../platform/dnd/browser/dnd.js";export function toVSDataTransfer(t){const e=new VSDataTransfer;for(const r of t.items){const t=r.type;if("string"===r.kind){const a=new Promise((t=>r.getAsString(t)));e.append(t,createStringDataTransferItem(a))}else if("file"===r.kind){const a=r.getAsFile();a&&e.append(t,createFileDataTransferItemFromFile(a))}}return e}function createFileDataTransferItemFromFile(t){const e=t.path?URI.parse(t.path):void 0;return createFileDataTransferItem(t.name,e,(()=>__awaiter(this,void 0,void 0,(function*(){return new Uint8Array(yield t.arrayBuffer())}))))}const INTERNAL_DND_MIME_TYPES=Object.freeze([CodeDataTransfers.EDITORS,CodeDataTransfers.FILES,DataTransfers.RESOURCES]);export function addExternalEditorsDropData(t,e,r=!1){var a;if(e.dataTransfer&&(r||!t.has(Mimes.uriList))){const r=extractEditorsDropData(e).filter((t=>t.resource)).map((t=>t.resource.toString()));for(const t of null===(a=e.dataTransfer)||void 0===a?void 0:a.items){const e=t.getAsFile();e&&r.push(e.path?URI.file(e.path).toString():e.name)}r.length&&t.replace(Mimes.uriList,createStringDataTransferItem(UriList.create(r)))}for(const e of INTERNAL_DND_MIME_TYPES)t.delete(e)}