class EditorSettingMigration{constructor(t,i){this.key=t,this.migrate=i}apply(t){const i=EditorSettingMigration._read(t,this.key);this.migrate(i,(i=>EditorSettingMigration._read(t,i)),((i,e)=>EditorSettingMigration._write(t,i,e)))}static _read(t,i){if(void 0===t)return;const e=i.indexOf(".");if(e>=0){const r=i.substring(0,e);return this._read(t[r],i.substring(e+1))}return t[i]}static _write(t,i,e){const r=i.indexOf(".");if(r>=0){const o=i.substring(0,r);return t[o]=t[o]||{},void this._write(t[o],i.substring(r+1),e)}t[i]=e}}EditorSettingMigration.items=[];export{EditorSettingMigration};function registerEditorSettingMigration(t,i){EditorSettingMigration.items.push(new EditorSettingMigration(t,i))}function registerSimpleEditorSettingMigration(t,i){registerEditorSettingMigration(t,((e,r,o)=>{if(void 0!==e)for(const[r,n]of i)if(e===r)return void o(t,n)}))}export function migrateOptions(t){EditorSettingMigration.items.forEach((i=>i.apply(t)))}registerSimpleEditorSettingMigration("wordWrap",[[!0,"on"],[!1,"off"]]),registerSimpleEditorSettingMigration("lineNumbers",[[!0,"on"],[!1,"off"]]),registerSimpleEditorSettingMigration("cursorBlinking",[["visible","solid"]]),registerSimpleEditorSettingMigration("renderWhitespace",[[!0,"boundary"],[!1,"none"]]),registerSimpleEditorSettingMigration("renderLineHighlight",[[!0,"line"],[!1,"none"]]),registerSimpleEditorSettingMigration("acceptSuggestionOnEnter",[[!0,"on"],[!1,"off"]]),registerSimpleEditorSettingMigration("tabCompletion",[[!1,"off"],[!0,"onlySnippets"]]),registerSimpleEditorSettingMigration("hover",[[!0,{enabled:!0}],[!1,{enabled:!1}]]),registerSimpleEditorSettingMigration("parameterHints",[[!0,{enabled:!0}],[!1,{enabled:!1}]]),registerSimpleEditorSettingMigration("autoIndent",[[!1,"advanced"],[!0,"full"]]),registerSimpleEditorSettingMigration("matchBrackets",[[!0,"always"],[!1,"never"]]),registerSimpleEditorSettingMigration("renderFinalNewline",[[!0,"on"],[!1,"off"]]),registerSimpleEditorSettingMigration("cursorSmoothCaretAnimation",[[!0,"on"],[!1,"off"]]),registerEditorSettingMigration("autoClosingBrackets",((t,i,e)=>{!1===t&&(e("autoClosingBrackets","never"),void 0===i("autoClosingQuotes")&&e("autoClosingQuotes","never"),void 0===i("autoSurround")&&e("autoSurround","never"))})),registerEditorSettingMigration("renderIndentGuides",((t,i,e)=>{void 0!==t&&(e("renderIndentGuides",void 0),void 0===i("guides.indentation")&&e("guides.indentation",!!t))})),registerEditorSettingMigration("highlightActiveIndentGuide",((t,i,e)=>{void 0!==t&&(e("highlightActiveIndentGuide",void 0),void 0===i("guides.highlightActiveIndentation")&&e("guides.highlightActiveIndentation",!!t))}));const suggestFilteredTypesMapping={method:"showMethods",function:"showFunctions",constructor:"showConstructors",deprecated:"showDeprecated",field:"showFields",variable:"showVariables",class:"showClasses",struct:"showStructs",interface:"showInterfaces",module:"showModules",property:"showProperties",event:"showEvents",operator:"showOperators",unit:"showUnits",value:"showValues",constant:"showConstants",enum:"showEnums",enumMember:"showEnumMembers",keyword:"showKeywords",text:"showWords",color:"showColors",file:"showFiles",reference:"showReferences",folder:"showFolders",typeParameter:"showTypeParameters",snippet:"showSnippets"};registerEditorSettingMigration("suggest.filteredTypes",((t,i,e)=>{if(t&&"object"==typeof t){for(const r of Object.entries(suggestFilteredTypesMapping))!1===t[r[0]]&&void 0===i(`suggest.${r[1]}`)&&e(`suggest.${r[1]}`,!1);e("suggest.filteredTypes",void 0)}})),registerEditorSettingMigration("quickSuggestions",((t,i,e)=>{if("boolean"==typeof t){const i=t?"on":"off";e("quickSuggestions",{comments:i,strings:i,other:i})}})),registerEditorSettingMigration("experimental.stickyScroll.enabled",((t,i,e)=>{"boolean"==typeof t&&(e("experimental.stickyScroll.enabled",void 0),void 0===i("stickyScroll.enabled")&&e("stickyScroll.enabled",t))})),registerEditorSettingMigration("experimental.stickyScroll.maxLineCount",((t,i,e)=>{"number"==typeof t&&(e("experimental.stickyScroll.maxLineCount",void 0),void 0===i("stickyScroll.maxLineCount")&&e("stickyScroll.maxLineCount",t))}));