import*as dom from"../../base/browser/dom.js";import{GlobalPointerMoveMonitor}from"../../base/browser/globalPointerMoveMonitor.js";import{StandardMouseEvent}from"../../base/browser/mouseEvent.js";import{RunOnceScheduler}from"../../base/common/async.js";import{Disposable}from"../../base/common/lifecycle.js";import{asCssVariable}from"../../platform/theme/common/colorRegistry.js";export class PageCoordinates{constructor(e,t){this.x=e,this.y=t,this._pageCoordinatesBrand=void 0}toClientCoordinates(){return new ClientCoordinates(this.x-window.scrollX,this.y-window.scrollY)}}export class ClientCoordinates{constructor(e,t){this.clientX=e,this.clientY=t,this._clientCoordinatesBrand=void 0}toPageCoordinates(){return new PageCoordinates(this.clientX+window.scrollX,this.clientY+window.scrollY)}}export class EditorPagePosition{constructor(e,t,o,s){this.x=e,this.y=t,this.width=o,this.height=s,this._editorPagePositionBrand=void 0}}export class CoordinatesRelativeToEditor{constructor(e,t){this.x=e,this.y=t,this._positionRelativeToEditorBrand=void 0}}export function createEditorPagePosition(e){const t=dom.getDomNodePagePosition(e);return new EditorPagePosition(t.left,t.top,t.width,t.height)}export function createCoordinatesRelativeToEditor(e,t,o){const s=t.width/e.offsetWidth,i=t.height/e.offsetHeight,r=(o.x-t.x)/s,n=(o.y-t.y)/i;return new CoordinatesRelativeToEditor(r,n)}export class EditorMouseEvent extends StandardMouseEvent{constructor(e,t,o){super(e),this._editorMouseEventBrand=void 0,this.isFromPointerCapture=t,this.pos=new PageCoordinates(this.posx,this.posy),this.editorPos=createEditorPagePosition(o),this.relativePos=createCoordinatesRelativeToEditor(o,this.editorPos,this.pos)}}export class EditorMouseEventFactory{constructor(e){this._editorViewDomNode=e}_create(e){return new EditorMouseEvent(e,!1,this._editorViewDomNode)}onContextMenu(e,t){return dom.addDisposableListener(e,"contextmenu",(e=>{t(this._create(e))}))}onMouseUp(e,t){return dom.addDisposableListener(e,"mouseup",(e=>{t(this._create(e))}))}onMouseDown(e,t){return dom.addDisposableListener(e,dom.EventType.MOUSE_DOWN,(e=>{t(this._create(e))}))}onPointerDown(e,t){return dom.addDisposableListener(e,dom.EventType.POINTER_DOWN,(e=>{t(this._create(e),e.pointerId)}))}onMouseLeave(e,t){return dom.addDisposableListener(e,dom.EventType.MOUSE_LEAVE,(e=>{t(this._create(e))}))}onMouseMove(e,t){return dom.addDisposableListener(e,"mousemove",(e=>t(this._create(e))))}}export class EditorPointerEventFactory{constructor(e){this._editorViewDomNode=e}_create(e){return new EditorMouseEvent(e,!1,this._editorViewDomNode)}onPointerUp(e,t){return dom.addDisposableListener(e,"pointerup",(e=>{t(this._create(e))}))}onPointerDown(e,t){return dom.addDisposableListener(e,dom.EventType.POINTER_DOWN,(e=>{t(this._create(e),e.pointerId)}))}onPointerLeave(e,t){return dom.addDisposableListener(e,dom.EventType.POINTER_LEAVE,(e=>{t(this._create(e))}))}onPointerMove(e,t){return dom.addDisposableListener(e,"pointermove",(e=>t(this._create(e))))}}export class GlobalEditorPointerMoveMonitor extends Disposable{constructor(e){super(),this._editorViewDomNode=e,this._globalPointerMoveMonitor=this._register(new GlobalPointerMoveMonitor),this._keydownListener=null}startMonitoring(e,t,o,s,i){this._keydownListener=dom.addStandardDisposableListener(document,"keydown",(e=>{e.toKeyCodeChord().isModifierKey()||this._globalPointerMoveMonitor.stopMonitoring(!0,e.browserEvent)}),!0),this._globalPointerMoveMonitor.startMonitoring(e,t,o,(e=>{s(new EditorMouseEvent(e,!0,this._editorViewDomNode))}),(e=>{this._keydownListener.dispose(),i(e)}))}stopMonitoring(){this._globalPointerMoveMonitor.stopMonitoring(!0)}}class DynamicCssRules{constructor(e){this._editor=e,this._instanceId=++DynamicCssRules._idPool,this._counter=0,this._rules=new Map,this._garbageCollectionScheduler=new RunOnceScheduler((()=>this.garbageCollect()),1e3)}createClassNameRef(e){const t=this.getOrCreateRule(e);return t.increaseRefCount(),{className:t.className,dispose:()=>{t.decreaseRefCount(),this._garbageCollectionScheduler.schedule()}}}getOrCreateRule(e){const t=this.computeUniqueKey(e);let o=this._rules.get(t);if(!o){const s=this._counter++;o=new RefCountedCssRule(t,`dyn-rule-${this._instanceId}-${s}`,dom.isInShadowDOM(this._editor.getContainerDomNode())?this._editor.getContainerDomNode():void 0,e),this._rules.set(t,o)}return o}computeUniqueKey(e){return JSON.stringify(e)}garbageCollect(){for(const e of this._rules.values())e.hasReferences()||(this._rules.delete(e.key),e.dispose())}}DynamicCssRules._idPool=0;export{DynamicCssRules};class RefCountedCssRule{constructor(e,t,o,s){this.key=e,this.className=t,this.properties=s,this._referenceCount=0,this._styleElement=dom.createStyleSheet(o),this._styleElement.textContent=this.getCssText(this.className,this.properties)}getCssText(e,t){let o=`.${e} {`;for(const e in t){const s=t[e];let i;i="object"==typeof s?asCssVariable(s.id):s,o+=`\n\t${camelToDashes(e)}: ${i};`}return o+="\n}",o}dispose(){this._styleElement.remove()}increaseRefCount(){this._referenceCount++}decreaseRefCount(){this._referenceCount--}hasReferences(){return this._referenceCount>0}}function camelToDashes(e){return e.replace(/(^[A-Z])/,(([e])=>e.toLowerCase())).replace(/([A-Z])/g,(([e])=>`-${e.toLowerCase()}`))}