import{PageCoordinates}from"../editorDom.js";import{PartFingerprints}from"../view/viewPart.js";import{ViewLine}from"../viewParts/lines/viewLine.js";import{Position}from"../../common/core/position.js";import{Range as EditorRange}from"../../common/core/range.js";import{CursorColumns}from"../../common/core/cursorColumns.js";import*as dom from"../../../base/browser/dom.js";import{AtomicTabMoveOperations}from"../../common/cursor/cursorAtomicMoveOperations.js";class UnknownHitTestResult{constructor(t=null){this.hitTarget=t,this.type=0}}class ContentHitTestResult{constructor(t,e,n){this.position=t,this.spanNode=e,this.injectedText=n,this.type=1}}var HitTestResult;!function(t){t.createFromDOMInfo=function(t,e,n){const i=t.getPositionFromDOMInfo(e,n);return i?new ContentHitTestResult(i,e,null):new UnknownHitTestResult(e)}}(HitTestResult||(HitTestResult={}));export class PointerHandlerLastRenderData{constructor(t,e){this.lastViewCursorsRenderData=t,this.lastTextareaPosition=e}}export class MouseTarget{static _deduceRage(t,e=null){return!e&&t?new EditorRange(t.lineNumber,t.column,t.lineNumber,t.column):null!=e?e:null}static createUnknown(t,e,n){return{type:0,element:t,mouseColumn:e,position:n,range:this._deduceRage(n)}}static createTextarea(t,e){return{type:1,element:t,mouseColumn:e,position:null,range:null}}static createMargin(t,e,n,i,o,r){return{type:t,element:e,mouseColumn:n,position:i,range:o,detail:r}}static createViewZone(t,e,n,i,o){return{type:t,element:e,mouseColumn:n,position:i,range:this._deduceRage(i),detail:o}}static createContentText(t,e,n,i,o){return{type:6,element:t,mouseColumn:e,position:n,range:this._deduceRage(n,i),detail:o}}static createContentEmpty(t,e,n,i){return{type:7,element:t,mouseColumn:e,position:n,range:this._deduceRage(n),detail:i}}static createContentWidget(t,e,n){return{type:9,element:t,mouseColumn:e,position:null,range:null,detail:n}}static createScrollbar(t,e,n){return{type:11,element:t,mouseColumn:e,position:n,range:this._deduceRage(n)}}static createOverlayWidget(t,e,n){return{type:12,element:t,mouseColumn:e,position:null,range:null,detail:n}}static createOutsideEditor(t,e,n,i){return{type:13,element:null,mouseColumn:t,position:e,range:this._deduceRage(e),outsidePosition:n,outsideDistance:i}}static _typeToString(t){return 1===t?"TEXTAREA":2===t?"GUTTER_GLYPH_MARGIN":3===t?"GUTTER_LINE_NUMBERS":4===t?"GUTTER_LINE_DECORATIONS":5===t?"GUTTER_VIEW_ZONE":6===t?"CONTENT_TEXT":7===t?"CONTENT_EMPTY":8===t?"CONTENT_VIEW_ZONE":9===t?"CONTENT_WIDGET":10===t?"OVERVIEW_RULER":11===t?"SCROLLBAR":12===t?"OVERLAY_WIDGET":"UNKNOWN"}static toString(t){return this._typeToString(t.type)+": "+t.position+" - "+t.range+" - "+JSON.stringify(t.detail)}}class ElementPath{static isTextArea(t){return 2===t.length&&3===t[0]&&6===t[1]}static isChildOfViewLines(t){return t.length>=4&&3===t[0]&&7===t[3]}static isStrictChildOfViewLines(t){return t.length>4&&3===t[0]&&7===t[3]}static isChildOfScrollableElement(t){return t.length>=2&&3===t[0]&&5===t[1]}static isChildOfMinimap(t){return t.length>=2&&3===t[0]&&8===t[1]}static isChildOfContentWidgets(t){return t.length>=4&&3===t[0]&&1===t[3]}static isChildOfOverflowingContentWidgets(t){return t.length>=1&&2===t[0]}static isChildOfOverlayWidgets(t){return t.length>=2&&3===t[0]&&4===t[1]}}export class HitTestContext{constructor(t,e,n){this.viewModel=t.viewModel;const i=t.configuration.options;this.layoutInfo=i.get(138),this.viewDomNode=e.viewDomNode,this.lineHeight=i.get(63),this.stickyTabStops=i.get(110),this.typicalHalfwidthCharacterWidth=i.get(47).typicalHalfwidthCharacterWidth,this.lastRenderData=n,this._context=t,this._viewHelper=e}getZoneAtCoord(t){return HitTestContext.getZoneAtCoord(this._context,t)}static getZoneAtCoord(t,e){const n=t.viewLayout.getWhitespaceAtVerticalOffset(e);if(n){const i=n.verticalOffset+n.height/2,o=t.viewModel.getLineCount();let r,s=null,l=null;return n.afterLineNumber!==o&&(l=new Position(n.afterLineNumber+1,1)),n.afterLineNumber>0&&(s=new Position(n.afterLineNumber,t.viewModel.getLineMaxColumn(n.afterLineNumber))),r=null===l?s:null===s?l:e<i?s:l,{viewZoneId:n.id,afterLineNumber:n.afterLineNumber,positionBefore:s,positionAfter:l,position:r}}return null}getFullLineRangeAtCoord(t){if(this._context.viewLayout.isAfterLines(t)){const t=this._context.viewModel.getLineCount(),e=this._context.viewModel.getLineMaxColumn(t);return{range:new EditorRange(t,e,t,e),isAfterLines:!0}}const e=this._context.viewLayout.getLineNumberAtVerticalOffset(t),n=this._context.viewModel.getLineMaxColumn(e);return{range:new EditorRange(e,1,e,n),isAfterLines:!1}}getLineNumberAtVerticalOffset(t){return this._context.viewLayout.getLineNumberAtVerticalOffset(t)}isAfterLines(t){return this._context.viewLayout.isAfterLines(t)}isInTopPadding(t){return this._context.viewLayout.isInTopPadding(t)}isInBottomPadding(t){return this._context.viewLayout.isInBottomPadding(t)}getVerticalOffsetForLineNumber(t){return this._context.viewLayout.getVerticalOffsetForLineNumber(t)}findAttribute(t,e){return HitTestContext._findAttribute(t,e,this._viewHelper.viewDomNode)}static _findAttribute(t,e,n){for(;t&&t!==document.body;){if(t.hasAttribute&&t.hasAttribute(e))return t.getAttribute(e);if(t===n)return null;t=t.parentNode}return null}getLineWidth(t){return this._viewHelper.getLineWidth(t)}visibleRangeForPosition(t,e){return this._viewHelper.visibleRangeForPosition(t,e)}getPositionFromDOMInfo(t,e){return this._viewHelper.getPositionFromDOMInfo(t,e)}getCurrentScrollTop(){return this._context.viewLayout.getCurrentScrollTop()}getCurrentScrollLeft(){return this._context.viewLayout.getCurrentScrollLeft()}}class BareHitTestRequest{constructor(t,e,n,i){this.editorPos=e,this.pos=n,this.relativePos=i,this.mouseVerticalOffset=Math.max(0,t.getCurrentScrollTop()+this.relativePos.y),this.mouseContentHorizontalOffset=t.getCurrentScrollLeft()+this.relativePos.x-t.layoutInfo.contentLeft,this.isInMarginArea=this.relativePos.x<t.layoutInfo.contentLeft&&this.relativePos.x>=t.layoutInfo.glyphMarginLeft,this.isInContentArea=!this.isInMarginArea,this.mouseColumn=Math.max(0,MouseTargetFactory._getMouseColumn(this.mouseContentHorizontalOffset,t.typicalHalfwidthCharacterWidth))}}class HitTestRequest extends BareHitTestRequest{constructor(t,e,n,i,o){super(t,e,n,i),this._ctx=t,o?(this.target=o,this.targetPath=PartFingerprints.collect(o,t.viewDomNode)):(this.target=null,this.targetPath=new Uint8Array(0))}toString(){return`pos(${this.pos.x},${this.pos.y}), editorPos(${this.editorPos.x},${this.editorPos.y}), relativePos(${this.relativePos.x},${this.relativePos.y}), mouseVerticalOffset: ${this.mouseVerticalOffset}, mouseContentHorizontalOffset: ${this.mouseContentHorizontalOffset}\n\ttarget: ${this.target?this.target.outerHTML:null}`}_getMouseColumn(t=null){return t&&t.column<this._ctx.viewModel.getLineMaxColumn(t.lineNumber)?CursorColumns.visibleColumnFromColumn(this._ctx.viewModel.getLineContent(t.lineNumber),t.column,this._ctx.viewModel.model.getOptions().tabSize)+1:this.mouseColumn}fulfillUnknown(t=null){return MouseTarget.createUnknown(this.target,this._getMouseColumn(t),t)}fulfillTextarea(){return MouseTarget.createTextarea(this.target,this._getMouseColumn())}fulfillMargin(t,e,n,i){return MouseTarget.createMargin(t,this.target,this._getMouseColumn(e),e,n,i)}fulfillViewZone(t,e,n){return MouseTarget.createViewZone(t,this.target,this._getMouseColumn(e),e,n)}fulfillContentText(t,e,n){return MouseTarget.createContentText(this.target,this._getMouseColumn(t),t,e,n)}fulfillContentEmpty(t,e){return MouseTarget.createContentEmpty(this.target,this._getMouseColumn(t),t,e)}fulfillContentWidget(t){return MouseTarget.createContentWidget(this.target,this._getMouseColumn(),t)}fulfillScrollbar(t){return MouseTarget.createScrollbar(this.target,this._getMouseColumn(t),t)}fulfillOverlayWidget(t){return MouseTarget.createOverlayWidget(this.target,this._getMouseColumn(),t)}withTarget(t){return new HitTestRequest(this._ctx,this.editorPos,this.pos,this.relativePos,t)}}const EMPTY_CONTENT_AFTER_LINES={isAfterLines:!0};function createEmptyContentDataInLines(t){return{isAfterLines:!1,horizontalDistanceToText:t}}export class MouseTargetFactory{constructor(t,e){this._context=t,this._viewHelper=e}mouseTargetIsWidget(t){const e=t.target,n=PartFingerprints.collect(e,this._viewHelper.viewDomNode);return!(!ElementPath.isChildOfContentWidgets(n)&&!ElementPath.isChildOfOverflowingContentWidgets(n)&&!ElementPath.isChildOfOverlayWidgets(n))}createMouseTarget(t,e,n,i,o){const r=new HitTestContext(this._context,this._viewHelper,t),s=new HitTestRequest(r,e,n,i,o);try{const t=MouseTargetFactory._createMouseTarget(r,s,!1);if(6===t.type&&r.stickyTabStops&&null!==t.position){const e=MouseTargetFactory._snapToSoftTabBoundary(t.position,r.viewModel),n=EditorRange.fromPositions(e,e).plusRange(t.range);return s.fulfillContentText(e,n,t.detail)}return t}catch(t){return s.fulfillUnknown()}}static _createMouseTarget(t,e,n){if(null===e.target){if(n)return e.fulfillUnknown();const i=MouseTargetFactory._doHitTest(t,e);return 1===i.type?MouseTargetFactory.createMouseTargetFromHitTestPosition(t,e,i.spanNode,i.position,i.injectedText):this._createMouseTarget(t,e.withTarget(i.hitTarget),!0)}const i=e;let o=null;return o=o||MouseTargetFactory._hitTestContentWidget(t,i),o=o||MouseTargetFactory._hitTestOverlayWidget(t,i),o=o||MouseTargetFactory._hitTestMinimap(t,i),o=o||MouseTargetFactory._hitTestScrollbarSlider(t,i),o=o||MouseTargetFactory._hitTestViewZone(t,i),o=o||MouseTargetFactory._hitTestMargin(t,i),o=o||MouseTargetFactory._hitTestViewCursor(t,i),o=o||MouseTargetFactory._hitTestTextArea(t,i),o=o||MouseTargetFactory._hitTestViewLines(t,i,n),o=o||MouseTargetFactory._hitTestScrollbar(t,i),o||e.fulfillUnknown()}static _hitTestContentWidget(t,e){if(ElementPath.isChildOfContentWidgets(e.targetPath)||ElementPath.isChildOfOverflowingContentWidgets(e.targetPath)){const n=t.findAttribute(e.target,"widgetId");return n?e.fulfillContentWidget(n):e.fulfillUnknown()}return null}static _hitTestOverlayWidget(t,e){if(ElementPath.isChildOfOverlayWidgets(e.targetPath)){const n=t.findAttribute(e.target,"widgetId");return n?e.fulfillOverlayWidget(n):e.fulfillUnknown()}return null}static _hitTestViewCursor(t,e){if(e.target){const n=t.lastRenderData.lastViewCursorsRenderData;for(const t of n)if(e.target===t.domNode)return e.fulfillContentText(t.position,null,{mightBeForeignElement:!1,injectedText:null})}if(e.isInContentArea){const n=t.lastRenderData.lastViewCursorsRenderData,i=e.mouseContentHorizontalOffset,o=e.mouseVerticalOffset;for(const r of n){if(i<r.contentLeft)continue;if(i>r.contentLeft+r.width)continue;const n=t.getVerticalOffsetForLineNumber(r.position.lineNumber);if(n<=o&&o<=n+r.height)return e.fulfillContentText(r.position,null,{mightBeForeignElement:!1,injectedText:null})}}return null}static _hitTestViewZone(t,e){const n=t.getZoneAtCoord(e.mouseVerticalOffset);if(n){const t=e.isInContentArea?8:5;return e.fulfillViewZone(t,n.position,n)}return null}static _hitTestTextArea(t,e){return ElementPath.isTextArea(e.targetPath)?t.lastRenderData.lastTextareaPosition?e.fulfillContentText(t.lastRenderData.lastTextareaPosition,null,{mightBeForeignElement:!1,injectedText:null}):e.fulfillTextarea():null}static _hitTestMargin(t,e){if(e.isInMarginArea){const n=t.getFullLineRangeAtCoord(e.mouseVerticalOffset),i=n.range.getStartPosition();let o=Math.abs(e.relativePos.x);const r={isAfterLines:n.isAfterLines,glyphMarginLeft:t.layoutInfo.glyphMarginLeft,glyphMarginWidth:t.layoutInfo.glyphMarginWidth,lineNumbersWidth:t.layoutInfo.lineNumbersWidth,offsetX:o};return o-=t.layoutInfo.glyphMarginLeft,o<=t.layoutInfo.glyphMarginWidth?e.fulfillMargin(2,i,n.range,r):(o-=t.layoutInfo.glyphMarginWidth,o<=t.layoutInfo.lineNumbersWidth?e.fulfillMargin(3,i,n.range,r):(o-=t.layoutInfo.lineNumbersWidth,e.fulfillMargin(4,i,n.range,r)))}return null}static _hitTestViewLines(t,e,n){if(!ElementPath.isChildOfViewLines(e.targetPath))return null;if(t.isInTopPadding(e.mouseVerticalOffset))return e.fulfillContentEmpty(new Position(1,1),EMPTY_CONTENT_AFTER_LINES);if(t.isAfterLines(e.mouseVerticalOffset)||t.isInBottomPadding(e.mouseVerticalOffset)){const n=t.viewModel.getLineCount(),i=t.viewModel.getLineMaxColumn(n);return e.fulfillContentEmpty(new Position(n,i),EMPTY_CONTENT_AFTER_LINES)}if(n){if(ElementPath.isStrictChildOfViewLines(e.targetPath)){const n=t.getLineNumberAtVerticalOffset(e.mouseVerticalOffset);if(0===t.viewModel.getLineLength(n)){const i=t.getLineWidth(n),o=createEmptyContentDataInLines(e.mouseContentHorizontalOffset-i);return e.fulfillContentEmpty(new Position(n,1),o)}const i=t.getLineWidth(n);if(e.mouseContentHorizontalOffset>=i){const o=createEmptyContentDataInLines(e.mouseContentHorizontalOffset-i),r=new Position(n,t.viewModel.getLineMaxColumn(n));return e.fulfillContentEmpty(r,o)}}return e.fulfillUnknown()}const i=MouseTargetFactory._doHitTest(t,e);return 1===i.type?MouseTargetFactory.createMouseTargetFromHitTestPosition(t,e,i.spanNode,i.position,i.injectedText):this._createMouseTarget(t,e.withTarget(i.hitTarget),!0)}static _hitTestMinimap(t,e){if(ElementPath.isChildOfMinimap(e.targetPath)){const n=t.getLineNumberAtVerticalOffset(e.mouseVerticalOffset),i=t.viewModel.getLineMaxColumn(n);return e.fulfillScrollbar(new Position(n,i))}return null}static _hitTestScrollbarSlider(t,e){if(ElementPath.isChildOfScrollableElement(e.targetPath)&&e.target&&1===e.target.nodeType){const n=e.target.className;if(n&&/\b(slider|scrollbar)\b/.test(n)){const n=t.getLineNumberAtVerticalOffset(e.mouseVerticalOffset),i=t.viewModel.getLineMaxColumn(n);return e.fulfillScrollbar(new Position(n,i))}}return null}static _hitTestScrollbar(t,e){if(ElementPath.isChildOfScrollableElement(e.targetPath)){const n=t.getLineNumberAtVerticalOffset(e.mouseVerticalOffset),i=t.viewModel.getLineMaxColumn(n);return e.fulfillScrollbar(new Position(n,i))}return null}getMouseColumn(t){const e=this._context.configuration.options,n=e.get(138),i=this._context.viewLayout.getCurrentScrollLeft()+t.x-n.contentLeft;return MouseTargetFactory._getMouseColumn(i,e.get(47).typicalHalfwidthCharacterWidth)}static _getMouseColumn(t,e){return t<0?1:Math.round(t/e)+1}static createMouseTargetFromHitTestPosition(t,e,n,i,o){const r=i.lineNumber,s=i.column,l=t.getLineWidth(r);if(e.mouseContentHorizontalOffset>l){const t=createEmptyContentDataInLines(e.mouseContentHorizontalOffset-l);return e.fulfillContentEmpty(i,t)}const a=t.visibleRangeForPosition(r,s);if(!a)return e.fulfillUnknown(i);const u=a.left;if(Math.abs(e.mouseContentHorizontalOffset-u)<1)return e.fulfillContentText(i,null,{mightBeForeignElement:!!o,injectedText:o});const c=[];if(c.push({offset:a.left,column:s}),s>1){const e=t.visibleRangeForPosition(r,s-1);e&&c.push({offset:e.left,column:s-1})}if(s<t.viewModel.getLineMaxColumn(r)){const e=t.visibleRangeForPosition(r,s+1);e&&c.push({offset:e.left,column:s+1})}c.sort(((t,e)=>t.offset-e.offset));const f=e.pos.toClientCoordinates(),g=n.getBoundingClientRect(),h=g.left<=f.clientX&&f.clientX<=g.right;let d=null;for(let t=1;t<c.length;t++){const n=c[t-1],o=c[t];if(n.offset<=e.mouseContentHorizontalOffset&&e.mouseContentHorizontalOffset<=o.offset){d=new EditorRange(r,n.column,r,o.column);const t=Math.abs(n.offset-e.mouseContentHorizontalOffset),s=Math.abs(o.offset-e.mouseContentHorizontalOffset);i=new Position(r,t<s?n.column:o.column);break}}return e.fulfillContentText(i,d,{mightBeForeignElement:!h||!!o,injectedText:o})}static _doHitTestWithCaretRangeFromPoint(t,e){const n=t.getLineNumberAtVerticalOffset(e.mouseVerticalOffset),i=t.getVerticalOffsetForLineNumber(n),o=i+t.lineHeight;if(!(n===t.viewModel.getLineCount()&&e.mouseVerticalOffset>o)){const n=Math.floor((i+o)/2);let r=e.pos.y+(n-e.mouseVerticalOffset);r<=e.editorPos.y&&(r=e.editorPos.y+1),r>=e.editorPos.y+e.editorPos.height&&(r=e.editorPos.y+e.editorPos.height-1);const s=new PageCoordinates(e.pos.x,r),l=this._actualDoHitTestWithCaretRangeFromPoint(t,s.toClientCoordinates());if(1===l.type)return l}return this._actualDoHitTestWithCaretRangeFromPoint(t,e.pos.toClientCoordinates())}static _actualDoHitTestWithCaretRangeFromPoint(t,e){const n=dom.getShadowRoot(t.viewDomNode);let i;if(i=n?void 0===n.caretRangeFromPoint?shadowCaretRangeFromPoint(n,e.clientX,e.clientY):n.caretRangeFromPoint(e.clientX,e.clientY):document.caretRangeFromPoint(e.clientX,e.clientY),!i||!i.startContainer)return new UnknownHitTestResult;const o=i.startContainer;if(o.nodeType===o.TEXT_NODE){const e=o.parentNode,n=e?e.parentNode:null,r=n?n.parentNode:null;return(r&&r.nodeType===r.ELEMENT_NODE?r.className:null)===ViewLine.CLASS_NAME?HitTestResult.createFromDOMInfo(t,e,i.startOffset):new UnknownHitTestResult(o.parentNode)}if(o.nodeType===o.ELEMENT_NODE){const e=o.parentNode,n=e?e.parentNode:null;return(n&&n.nodeType===n.ELEMENT_NODE?n.className:null)===ViewLine.CLASS_NAME?HitTestResult.createFromDOMInfo(t,o,o.textContent.length):new UnknownHitTestResult(o)}return new UnknownHitTestResult}static _doHitTestWithCaretPositionFromPoint(t,e){const n=document.caretPositionFromPoint(e.clientX,e.clientY);if(n.offsetNode.nodeType===n.offsetNode.TEXT_NODE){const e=n.offsetNode.parentNode,i=e?e.parentNode:null,o=i?i.parentNode:null;return(o&&o.nodeType===o.ELEMENT_NODE?o.className:null)===ViewLine.CLASS_NAME?HitTestResult.createFromDOMInfo(t,n.offsetNode.parentNode,n.offset):new UnknownHitTestResult(n.offsetNode.parentNode)}if(n.offsetNode.nodeType===n.offsetNode.ELEMENT_NODE){const e=n.offsetNode.parentNode,i=e&&e.nodeType===e.ELEMENT_NODE?e.className:null,o=e?e.parentNode:null,r=o&&o.nodeType===o.ELEMENT_NODE?o.className:null;if(i===ViewLine.CLASS_NAME){const e=n.offsetNode.childNodes[Math.min(n.offset,n.offsetNode.childNodes.length-1)];if(e)return HitTestResult.createFromDOMInfo(t,e,0)}else if(r===ViewLine.CLASS_NAME)return HitTestResult.createFromDOMInfo(t,n.offsetNode,0)}return new UnknownHitTestResult(n.offsetNode)}static _snapToSoftTabBoundary(t,e){const n=e.getLineContent(t.lineNumber),{tabSize:i}=e.model.getOptions(),o=AtomicTabMoveOperations.atomicPosition(n,t.column-1,i,2);return-1!==o?new Position(t.lineNumber,o+1):t}static _doHitTest(t,e){let n=new UnknownHitTestResult;if("function"==typeof document.caretRangeFromPoint?n=this._doHitTestWithCaretRangeFromPoint(t,e):document.caretPositionFromPoint&&(n=this._doHitTestWithCaretPositionFromPoint(t,e.pos.toClientCoordinates())),1===n.type){const e=t.viewModel.getInjectedTextAt(n.position),i=t.viewModel.normalizePosition(n.position,2);!e&&i.equals(n.position)||(n=new ContentHitTestResult(i,n.spanNode,e))}return n}}function shadowCaretRangeFromPoint(t,e,n){const i=document.createRange();let o=t.elementFromPoint(e,n);if(null!==o){for(;o&&o.firstChild&&o.firstChild.nodeType!==o.firstChild.TEXT_NODE&&o.lastChild&&o.lastChild.firstChild;)o=o.lastChild;const t=o.getBoundingClientRect(),n=window.getComputedStyle(o,null).getPropertyValue("font"),r=o.innerText;let s,l=t.left,a=0;if(e>t.left+t.width)a=r.length;else{const t=CharWidthReader.getInstance();for(let i=0;i<r.length+1;i++){if(s=t.getCharWidth(r.charAt(i),n)/2,l+=s,e<l){a=i;break}l+=s}}i.setStart(o.firstChild,a),i.setEnd(o.firstChild,a)}return i}class CharWidthReader{static getInstance(){return CharWidthReader._INSTANCE||(CharWidthReader._INSTANCE=new CharWidthReader),CharWidthReader._INSTANCE}constructor(){this._cache={},this._canvas=document.createElement("canvas")}getCharWidth(t,e){const n=t+e;if(this._cache[n])return this._cache[n];const i=this._canvas.getContext("2d");i.font=e;const o=i.measureText(t).width;return this._cache[n]=o,o}}CharWidthReader._INSTANCE=null;