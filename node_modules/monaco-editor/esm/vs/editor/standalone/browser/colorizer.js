var _a,__awaiter=this&&this.__awaiter||function(e,n,t,i){return new(t||(t=Promise))((function(o,r){function a(e){try{c(i.next(e))}catch(e){r(e)}}function s(e){try{c(i.throw(e))}catch(e){r(e)}}function c(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,s)}c((i=i.apply(e,n||[])).next())}))};import*as strings from"../../../base/common/strings.js";import{LineTokens}from"../../common/tokens/lineTokens.js";import{TokenizationRegistry}from"../../common/languages.js";import{RenderLineInput,renderViewLine2 as renderViewLine}from"../../common/viewLayout/viewLineRenderer.js";import{ViewLineRenderingData}from"../../common/viewModel.js";import{MonarchTokenizer}from"../common/monarch/monarchLexer.js";const ttPolicy=null===(_a=window.trustedTypes)||void 0===_a?void 0:_a.createPolicy("standaloneColorizer",{createHTML:e=>e});export class Colorizer{static colorizeElement(e,n,t,i){const o=(i=i||{}).theme||"vs",r=i.mimeType||t.getAttribute("lang")||t.getAttribute("data-lang");if(!r)return console.error("Mode not detected"),Promise.resolve();const a=n.getLanguageIdByMimeType(r)||r;e.setTheme(o);const s=t.firstChild?t.firstChild.nodeValue:"";return t.className+=" "+o,this.colorize(n,s||"",a,i).then((e=>{var n;const i=null!==(n=null==ttPolicy?void 0:ttPolicy.createHTML(e))&&void 0!==n?n:e;t.innerHTML=i}),(e=>console.error(e)))}static colorize(e,n,t,i){return __awaiter(this,void 0,void 0,(function*(){const o=e.languageIdCodec;let r=4;i&&"number"==typeof i.tabSize&&(r=i.tabSize),strings.startsWithUTF8BOM(n)&&(n=n.substr(1));const a=strings.splitLines(n);if(!e.isRegisteredLanguageId(t))return _fakeColorize(a,r,o);const s=yield TokenizationRegistry.getOrCreate(t);return s?_colorize(a,r,s,o):_fakeColorize(a,r,o)}))}static colorizeLine(e,n,t,i,o=4){const r=ViewLineRenderingData.isBasicASCII(e,n),a=ViewLineRenderingData.containsRTL(e,r,t);return renderViewLine(new RenderLineInput(!1,!0,e,!1,r,a,0,i,[],o,0,0,0,0,-1,"none",!1,!1,null)).html}static colorizeModelLine(e,n,t=4){const i=e.getLineContent(n);e.tokenization.forceTokenization(n);const o=e.tokenization.getLineTokens(n).inflate();return this.colorizeLine(i,e.mightContainNonBasicASCII(),e.mightContainRTL(),o,t)}}function _colorize(e,n,t,i){return new Promise(((o,r)=>{const a=()=>{const s=_actualColorize(e,n,t,i);if(t instanceof MonarchTokenizer){const e=t.getLoadStatus();if(!1===e.loaded)return void e.promise.then(a,r)}o(s)};a()}))}function _fakeColorize(e,n,t){let i=[];const o=new Uint32Array(2);o[0]=0,o[1]=33587200;for(let r=0,a=e.length;r<a;r++){const a=e[r];o[0]=a.length;const s=new LineTokens(o,a,t),c=ViewLineRenderingData.isBasicASCII(a,!0),l=ViewLineRenderingData.containsRTL(a,c,!0),d=renderViewLine(new RenderLineInput(!1,!0,a,!1,c,l,0,s,[],n,0,0,0,0,-1,"none",!1,!1,null));i=i.concat(d.html),i.push("<br/>")}return i.join("")}function _actualColorize(e,n,t,i){let o=[],r=t.getInitialState();for(let a=0,s=e.length;a<s;a++){const s=e[a],c=t.tokenizeEncoded(s,!0,r);LineTokens.convertToEndOffset(c.tokens,s.length);const l=new LineTokens(c.tokens,s,i),d=ViewLineRenderingData.isBasicASCII(s,!0),u=ViewLineRenderingData.containsRTL(s,d,!0),m=renderViewLine(new RenderLineInput(!1,!0,s,!1,d,u,0,l.inflate(),[],n,0,0,0,0,-1,"none",!1,!1,null));o=o.concat(m.html),o.push("<br/>"),r=c.endState}return o.join("")}