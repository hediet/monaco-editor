var __awaiter=this&&this.__awaiter||function(e,r,n,t){return new(n||(n=Promise))((function(i,o){function a(e){try{s(t.next(e))}catch(e){o(e)}}function g(e){try{s(t.throw(e))}catch(e){o(e)}}function s(e){var r;e.done?i(e.value):(r=e.value,r instanceof n?r:new n((function(e){e(r)}))).then(a,g)}s((t=t.apply(e,r||[])).next())}))};import{Color}from"../../../base/common/color.js";import{Range}from"../../common/core/range.js";import*as languages from"../../common/languages.js";import{ILanguageConfigurationService}from"../../common/languages/languageConfigurationRegistry.js";import{ModesRegistry}from"../../common/languages/modesRegistry.js";import{ILanguageService}from"../../common/languages/language.js";import*as standaloneEnums from"../../common/standalone/standaloneEnums.js";import{StandaloneServices}from"./standaloneServices.js";import{compile}from"../common/monarch/monarchCompile.js";import{MonarchTokenizer}from"../common/monarch/monarchLexer.js";import{IStandaloneThemeService}from"../common/standaloneTheme.js";import{IMarkerService}from"../../../platform/markers/common/markers.js";import{ILanguageFeaturesService}from"../../common/services/languageFeatures.js";import{IConfigurationService}from"../../../platform/configuration/common/configuration.js";export function register(e){ModesRegistry.registerLanguage(e)}export function getLanguages(){let e=[];return e=e.concat(ModesRegistry.getLanguages()),e}export function getEncodedLanguageId(e){return StandaloneServices.get(ILanguageService).languageIdCodec.encodeLanguageId(e)}export function onLanguage(e,r){const n=StandaloneServices.get(ILanguageService).onDidEncounterLanguage((t=>{t===e&&(n.dispose(),r())}));return n}export function setLanguageConfiguration(e,r){if(!StandaloneServices.get(ILanguageService).isRegisteredLanguageId(e))throw new Error(`Cannot set configuration for unknown language ${e}`);return StandaloneServices.get(ILanguageConfigurationService).register(e,r,100)}export class EncodedTokenizationSupportAdapter{constructor(e,r){this._languageId=e,this._actual=r}getInitialState(){return this._actual.getInitialState()}tokenize(e,r,n){if("function"==typeof this._actual.tokenize)return TokenizationSupportAdapter.adaptTokenize(this._languageId,this._actual,e,n);throw new Error("Not supported!")}tokenizeEncoded(e,r,n){const t=this._actual.tokenizeEncoded(e,n);return new languages.EncodedTokenizationResult(t.tokens,t.endState)}}export class TokenizationSupportAdapter{constructor(e,r,n,t){this._languageId=e,this._actual=r,this._languageService=n,this._standaloneThemeService=t}getInitialState(){return this._actual.getInitialState()}static _toClassicTokens(e,r){const n=[];let t=0;for(let i=0,o=e.length;i<o;i++){const o=e[i];let a=o.startIndex;0===i?a=0:a<t&&(a=t),n[i]=new languages.Token(a,o.scopes,r),t=a}return n}static adaptTokenize(e,r,n,t){const i=r.tokenize(n,t),o=TokenizationSupportAdapter._toClassicTokens(i.tokens,e);let a;return a=i.endState.equals(t)?t:i.endState,new languages.TokenizationResult(o,a)}tokenize(e,r,n){return TokenizationSupportAdapter.adaptTokenize(this._languageId,this._actual,e,n)}_toBinaryTokens(e,r){const n=e.encodeLanguageId(this._languageId),t=this._standaloneThemeService.getColorTheme().tokenTheme,i=[];let o=0,a=0;for(let e=0,g=r.length;e<g;e++){const g=r[e],s=t.match(n,g.scopes);if(o>0&&i[o-1]===s)continue;let d=g.startIndex;0===e?d=0:d<a&&(d=a),i[o++]=d,i[o++]=s,a=d}const g=new Uint32Array(o);for(let e=0;e<o;e++)g[e]=i[e];return g}tokenizeEncoded(e,r,n){const t=this._actual.tokenize(e,n),i=this._toBinaryTokens(this._languageService.languageIdCodec,t.tokens);let o;return o=t.endState.equals(n)?n:t.endState,new languages.EncodedTokenizationResult(i,o)}}function isATokensProvider(e){return"function"==typeof e.getInitialState}function isEncodedTokensProvider(e){return"tokenizeEncoded"in e}function isThenable(e){return e&&"function"==typeof e.then}export function setColorMap(e){const r=StandaloneServices.get(IStandaloneThemeService);if(e){const n=[null];for(let r=1,t=e.length;r<t;r++)n[r]=Color.fromHex(e[r]);r.setColorMapOverride(n)}else r.setColorMapOverride(null)}function createTokenizationSupportAdapter(e,r){return isEncodedTokensProvider(r)?new EncodedTokenizationSupportAdapter(e,r):new TokenizationSupportAdapter(e,r,StandaloneServices.get(ILanguageService),StandaloneServices.get(IStandaloneThemeService))}export function registerTokensProviderFactory(e,r){const n={createTokenizationSupport:()=>__awaiter(this,void 0,void 0,(function*(){const n=yield Promise.resolve(r.create());return n?isATokensProvider(n)?createTokenizationSupportAdapter(e,n):new MonarchTokenizer(StandaloneServices.get(ILanguageService),StandaloneServices.get(IStandaloneThemeService),e,compile(e,n),StandaloneServices.get(IConfigurationService)):null}))};return languages.TokenizationRegistry.registerFactory(e,n)}export function setTokensProvider(e,r){if(!StandaloneServices.get(ILanguageService).isRegisteredLanguageId(e))throw new Error(`Cannot set tokens provider for unknown language ${e}`);return isThenable(r)?registerTokensProviderFactory(e,{create:()=>r}):languages.TokenizationRegistry.register(e,createTokenizationSupportAdapter(e,r))}export function setMonarchTokensProvider(e,r){return isThenable(r)?registerTokensProviderFactory(e,{create:()=>r}):languages.TokenizationRegistry.register(e,(r=>new MonarchTokenizer(StandaloneServices.get(ILanguageService),StandaloneServices.get(IStandaloneThemeService),e,compile(e,r),StandaloneServices.get(IConfigurationService)))(r))}export function registerReferenceProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).referenceProvider.register(e,r)}export function registerRenameProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).renameProvider.register(e,r)}export function registerSignatureHelpProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).signatureHelpProvider.register(e,r)}export function registerHoverProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).hoverProvider.register(e,{provideHover:(e,n,t)=>{const i=e.getWordAtPosition(n);return Promise.resolve(r.provideHover(e,n,t)).then((e=>{if(e)return!e.range&&i&&(e.range=new Range(n.lineNumber,i.startColumn,n.lineNumber,i.endColumn)),e.range||(e.range=new Range(n.lineNumber,n.column,n.lineNumber,n.column)),e}))}})}export function registerDocumentSymbolProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).documentSymbolProvider.register(e,r)}export function registerDocumentHighlightProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).documentHighlightProvider.register(e,r)}export function registerLinkedEditingRangeProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).linkedEditingRangeProvider.register(e,r)}export function registerDefinitionProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).definitionProvider.register(e,r)}export function registerImplementationProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).implementationProvider.register(e,r)}export function registerTypeDefinitionProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).typeDefinitionProvider.register(e,r)}export function registerCodeLensProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).codeLensProvider.register(e,r)}export function registerCodeActionProvider(e,r,n){return StandaloneServices.get(ILanguageFeaturesService).codeActionProvider.register(e,{providedCodeActionKinds:null==n?void 0:n.providedCodeActionKinds,documentation:null==n?void 0:n.documentation,provideCodeActions:(e,n,t,i)=>{const o=StandaloneServices.get(IMarkerService).read({resource:e.uri}).filter((e=>Range.areIntersectingOrTouching(e,n)));return r.provideCodeActions(e,n,{markers:o,only:t.only,trigger:t.trigger},i)},resolveCodeAction:r.resolveCodeAction})}export function registerDocumentFormattingEditProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).documentFormattingEditProvider.register(e,r)}export function registerDocumentRangeFormattingEditProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).documentRangeFormattingEditProvider.register(e,r)}export function registerOnTypeFormattingEditProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).onTypeFormattingEditProvider.register(e,r)}export function registerLinkProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).linkProvider.register(e,r)}export function registerCompletionItemProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).completionProvider.register(e,r)}export function registerColorProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).colorProvider.register(e,r)}export function registerFoldingRangeProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).foldingRangeProvider.register(e,r)}export function registerDeclarationProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).declarationProvider.register(e,r)}export function registerSelectionRangeProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).selectionRangeProvider.register(e,r)}export function registerDocumentSemanticTokensProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).documentSemanticTokensProvider.register(e,r)}export function registerDocumentRangeSemanticTokensProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).documentRangeSemanticTokensProvider.register(e,r)}export function registerInlineCompletionsProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).inlineCompletionsProvider.register(e,r)}export function registerInlayHintsProvider(e,r){return StandaloneServices.get(ILanguageFeaturesService).inlayHintsProvider.register(e,r)}export function createMonacoLanguagesAPI(){return{register,getLanguages,onLanguage,getEncodedLanguageId,setLanguageConfiguration,setColorMap,registerTokensProviderFactory,setTokensProvider,setMonarchTokensProvider,registerReferenceProvider,registerRenameProvider,registerCompletionItemProvider,registerSignatureHelpProvider,registerHoverProvider,registerDocumentSymbolProvider,registerDocumentHighlightProvider,registerLinkedEditingRangeProvider,registerDefinitionProvider,registerImplementationProvider,registerTypeDefinitionProvider,registerCodeLensProvider,registerCodeActionProvider,registerDocumentFormattingEditProvider,registerDocumentRangeFormattingEditProvider,registerOnTypeFormattingEditProvider,registerLinkProvider,registerColorProvider,registerFoldingRangeProvider,registerDeclarationProvider,registerSelectionRangeProvider,registerDocumentSemanticTokensProvider,registerDocumentRangeSemanticTokensProvider,registerInlineCompletionsProvider,registerInlayHintsProvider,DocumentHighlightKind:standaloneEnums.DocumentHighlightKind,CompletionItemKind:standaloneEnums.CompletionItemKind,CompletionItemTag:standaloneEnums.CompletionItemTag,CompletionItemInsertTextRule:standaloneEnums.CompletionItemInsertTextRule,SymbolKind:standaloneEnums.SymbolKind,SymbolTag:standaloneEnums.SymbolTag,IndentAction:standaloneEnums.IndentAction,CompletionTriggerKind:standaloneEnums.CompletionTriggerKind,SignatureHelpTriggerKind:standaloneEnums.SignatureHelpTriggerKind,InlayHintKind:standaloneEnums.InlayHintKind,InlineCompletionTriggerKind:standaloneEnums.InlineCompletionTriggerKind,CodeActionTriggerType:standaloneEnums.CodeActionTriggerType,FoldingRangeKind:languages.FoldingRangeKind}}