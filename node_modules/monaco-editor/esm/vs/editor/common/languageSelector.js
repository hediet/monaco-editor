import{match as matchGlobPattern}from"../../base/common/glob.js";import{normalize}from"../../base/common/path.js";export function score(e,t,r,o,s,n){if(Array.isArray(e)){let a=0;for(const i of e){const e=score(i,t,r,o,s,n);if(10===e)return e;e>a&&(a=e)}return a}if("string"==typeof e)return o?"*"===e?5:e===r?10:0:0;if(e){const{language:a,pattern:i,scheme:f,hasAccessToAllModels:c,notebookType:m}=e;if(!o&&!c)return 0;m&&s&&(t=s);let l=0;if(f)if(f===t.scheme)l=10;else{if("*"!==f)return 0;l=5}if(a)if(a===r)l=10;else{if("*"!==a)return 0;l=Math.max(l,5)}if(m)if(m===n)l=10;else{if("*"!==m||void 0===n)return 0;l=Math.max(l,5)}if(i){let e;if(e="string"==typeof i?i:Object.assign(Object.assign({},i),{base:normalize(i.base)}),e!==t.fsPath&&!matchGlobPattern(e,t.fsPath))return 0;l=10}return l}return 0}