import{CursorColumns}from"../core/cursorColumns.js";export class AtomicTabMoveOperations{static whitespaceVisibleColumn(e,r,t){const o=e.length;let s=0,a=-1,n=-1;for(let c=0;c<o;c++){if(c===r)return[a,n,s];switch(s%t==0&&(a=c,n=s),e.charCodeAt(c)){case 32:s+=1;break;case 9:s=CursorColumns.nextRenderTabStop(s,t);break;default:return[-1,-1,-1]}}return r===o?[a,n,s]:[-1,-1,-1]}static atomicPosition(e,r,t,o){const s=e.length,[a,n,c]=AtomicTabMoveOperations.whitespaceVisibleColumn(e,r,t);if(-1===c)return-1;let u;switch(o){case 0:u=!0;break;case 1:u=!1;break;case 2:if(c%t==0)return r;u=c%t<=t/2}if(u){if(-1===a)return-1;let r=n;for(let o=a;o<s;++o){if(r===n+t)return a;switch(e.charCodeAt(o)){case 32:r+=1;break;case 9:r=CursorColumns.nextRenderTabStop(r,t);break;default:return-1}}return r===n+t?a:-1}const i=CursorColumns.nextRenderTabStop(c,t);let l=c;for(let o=r;o<s;o++){if(l===i)return o;switch(e.charCodeAt(o)){case 32:l+=1;break;case 9:l=CursorColumns.nextRenderTabStop(l,t);break;default:return-1}}return l===i?s:-1}}