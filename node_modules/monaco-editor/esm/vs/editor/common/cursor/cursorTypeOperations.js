import{onUnexpectedError}from"../../../base/common/errors.js";import*as strings from"../../../base/common/strings.js";import{ReplaceCommand,ReplaceCommandWithOffsetCursorState,ReplaceCommandWithoutChangingPosition,ReplaceCommandThatPreservesSelection}from"../commands/replaceCommand.js";import{ShiftCommand}from"../commands/shiftCommand.js";import{CompositionSurroundSelectionCommand,SurroundSelectionCommand}from"../commands/surroundSelectionCommand.js";import{EditOperationResult,isQuote}from"../cursorCommon.js";import{getMapForWordSeparators}from"../core/wordCharacterClassifier.js";import{Range}from"../core/range.js";import{Position}from"../core/position.js";import{IndentAction}from"../languages/languageConfiguration.js";import{getIndentationAtPosition}from"../languages/languageConfigurationRegistry.js";import{createScopedLineTokens}from"../languages/supports.js";import{getIndentActionForType,getIndentForEnter,getInheritIndentForLine}from"../languages/autoIndent.js";import{getEnterAction}from"../languages/enterAction.js";export class TypeOperations{static indent(e,t,n){if(null===t||null===n)return[];const o=[];for(let t=0,i=n.length;t<i;t++)o[t]=new ShiftCommand(n[t],{isUnshift:!1,tabSize:e.tabSize,indentSize:e.indentSize,insertSpaces:e.insertSpaces,useTabStops:e.useTabStops,autoIndent:e.autoIndent},e.languageConfigurationService);return o}static outdent(e,t,n){const o=[];for(let t=0,i=n.length;t<i;t++)o[t]=new ShiftCommand(n[t],{isUnshift:!0,tabSize:e.tabSize,indentSize:e.indentSize,insertSpaces:e.insertSpaces,useTabStops:e.useTabStops,autoIndent:e.autoIndent},e.languageConfigurationService);return o}static shiftIndent(e,t,n){return n=n||1,ShiftCommand.shiftIndent(t,t.length+n,e.tabSize,e.indentSize,e.insertSpaces)}static unshiftIndent(e,t,n){return n=n||1,ShiftCommand.unshiftIndent(t,t.length+n,e.tabSize,e.indentSize,e.insertSpaces)}static _distributedPaste(e,t,n,o){const i=[];for(let e=0,t=n.length;e<t;e++)i[e]=new ReplaceCommand(n[e],o[e]);return new EditOperationResult(0,i,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!0})}static _simplePaste(e,t,n,o,i){const r=[];for(let e=0,t=n.length;e<t;e++){const t=n[e],s=t.getPosition();if(i&&!t.isEmpty()&&(i=!1),i&&o.indexOf("\n")!==o.length-1&&(i=!1),i){const n=new Range(s.lineNumber,1,s.lineNumber,1);r[e]=new ReplaceCommandThatPreservesSelection(n,o,t,!0)}else r[e]=new ReplaceCommand(t,o)}return new EditOperationResult(0,r,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!0})}static _distributePasteToCursors(e,t,n,o,i){if(o)return null;if(1===t.length)return null;if(i&&i.length===t.length)return i;if("spread"===e.multiCursorPaste){10===n.charCodeAt(n.length-1)&&(n=n.substr(0,n.length-1)),13===n.charCodeAt(n.length-1)&&(n=n.substr(0,n.length-1));const e=strings.splitLines(n);if(e.length===t.length)return e}return null}static paste(e,t,n,o,i,r){const s=this._distributePasteToCursors(e,n,o,i,r);return s?(n=n.sort(Range.compareRangesUsingStarts),this._distributedPaste(e,t,n,s)):this._simplePaste(e,t,n,o,i)}static _goodIndentForLine(e,t,n){let o=null,i="";const r=getInheritIndentForLine(e.autoIndent,t,n,!1,e.languageConfigurationService);if(r)o=r.action,i=r.indentation;else if(n>1){let o;for(o=n-1;o>=1;o--){const e=t.getLineContent(o);if(strings.lastNonWhitespaceIndex(e)>=0)break}if(o<1)return null;const r=t.getLineMaxColumn(o),s=getEnterAction(e.autoIndent,t,new Range(o,r,o,r),e.languageConfigurationService);s&&(i=s.indentation+s.appendText)}return o&&(o===IndentAction.Indent&&(i=TypeOperations.shiftIndent(e,i)),o===IndentAction.Outdent&&(i=TypeOperations.unshiftIndent(e,i)),i=e.normalizeIndentation(i)),i||null}static _replaceJumpToNextIndent(e,t,n,o){let i="";const r=n.getStartPosition();if(e.insertSpaces){const n=e.visibleColumnFromColumn(t,r),o=e.indentSize,s=o-n%o;for(let e=0;e<s;e++)i+=" "}else i="\t";return new ReplaceCommand(n,i,o)}static tab(e,t,n){const o=[];for(let i=0,r=n.length;i<r;i++){const r=n[i];if(r.isEmpty()){const n=t.getLineContent(r.startLineNumber);if(/^\s*$/.test(n)&&t.tokenization.isCheapToTokenize(r.startLineNumber)){let s=this._goodIndentForLine(e,t,r.startLineNumber);s=s||"\t";const a=e.normalizeIndentation(s);if(!n.startsWith(a)){o[i]=new ReplaceCommand(new Range(r.startLineNumber,1,r.startLineNumber,n.length+1),a,!0);continue}}o[i]=this._replaceJumpToNextIndent(e,t,r,!0)}else{if(r.startLineNumber===r.endLineNumber){const n=t.getLineMaxColumn(r.startLineNumber);if(1!==r.startColumn||r.endColumn!==n){o[i]=this._replaceJumpToNextIndent(e,t,r,!1);continue}}o[i]=new ShiftCommand(r,{isUnshift:!1,tabSize:e.tabSize,indentSize:e.indentSize,insertSpaces:e.insertSpaces,useTabStops:e.useTabStops,autoIndent:e.autoIndent},e.languageConfigurationService)}}return o}static compositionType(e,t,n,o,i,r,s,a){const u=o.map((e=>this._compositionType(n,e,i,r,s,a)));return new EditOperationResult(4,u,{shouldPushStackElementBefore:shouldPushStackElementBetween(e,4),shouldPushStackElementAfter:!1})}static _compositionType(e,t,n,o,i,r){if(!t.isEmpty())return null;const s=t.getPosition(),a=Math.max(1,s.column-o),u=Math.min(e.getLineMaxColumn(s.lineNumber),s.column+i),l=new Range(s.lineNumber,a,s.lineNumber,u);return e.getValueInRange(l)===n&&0===r?null:new ReplaceCommandWithOffsetCursorState(l,n,0,r)}static _typeCommand(e,t,n){return n?new ReplaceCommandWithoutChangingPosition(e,t,!0):new ReplaceCommand(e,t,!0)}static _enter(e,t,n,o){if(0===e.autoIndent)return TypeOperations._typeCommand(o,"\n",n);if(!t.tokenization.isCheapToTokenize(o.getStartPosition().lineNumber)||1===e.autoIndent){const i=t.getLineContent(o.startLineNumber),r=strings.getLeadingWhitespace(i).substring(0,o.startColumn-1);return TypeOperations._typeCommand(o,"\n"+e.normalizeIndentation(r),n)}const i=getEnterAction(e.autoIndent,t,o,e.languageConfigurationService);if(i){if(i.indentAction===IndentAction.None)return TypeOperations._typeCommand(o,"\n"+e.normalizeIndentation(i.indentation+i.appendText),n);if(i.indentAction===IndentAction.Indent)return TypeOperations._typeCommand(o,"\n"+e.normalizeIndentation(i.indentation+i.appendText),n);if(i.indentAction===IndentAction.IndentOutdent){const t=e.normalizeIndentation(i.indentation),r=e.normalizeIndentation(i.indentation+i.appendText),s="\n"+r+"\n"+t;return n?new ReplaceCommandWithoutChangingPosition(o,s,!0):new ReplaceCommandWithOffsetCursorState(o,s,-1,r.length-t.length,!0)}if(i.indentAction===IndentAction.Outdent){const t=TypeOperations.unshiftIndent(e,i.indentation);return TypeOperations._typeCommand(o,"\n"+e.normalizeIndentation(t+i.appendText),n)}}const r=t.getLineContent(o.startLineNumber),s=strings.getLeadingWhitespace(r).substring(0,o.startColumn-1);if(e.autoIndent>=4){const i=getIndentForEnter(e.autoIndent,t,o,{unshiftIndent:t=>TypeOperations.unshiftIndent(e,t),shiftIndent:t=>TypeOperations.shiftIndent(e,t),normalizeIndentation:t=>e.normalizeIndentation(t)},e.languageConfigurationService);if(i){let r=e.visibleColumnFromColumn(t,o.getEndPosition());const s=o.endColumn,a=t.getLineContent(o.endLineNumber),u=strings.firstNonWhitespaceIndex(a);if(o=u>=0?o.setEndPosition(o.endLineNumber,Math.max(o.endColumn,u+1)):o.setEndPosition(o.endLineNumber,t.getLineMaxColumn(o.endLineNumber)),n)return new ReplaceCommandWithoutChangingPosition(o,"\n"+e.normalizeIndentation(i.afterEnter),!0);{let t=0;return s<=u+1&&(e.insertSpaces||(r=Math.ceil(r/e.indentSize)),t=Math.min(r+1-e.normalizeIndentation(i.afterEnter).length-1,0)),new ReplaceCommandWithOffsetCursorState(o,"\n"+e.normalizeIndentation(i.afterEnter),0,t,!0)}}}return TypeOperations._typeCommand(o,"\n"+e.normalizeIndentation(s),n)}static _isAutoIndentType(e,t,n){if(e.autoIndent<4)return!1;for(let e=0,o=n.length;e<o;e++)if(!t.tokenization.isCheapToTokenize(n[e].getEndPosition().lineNumber))return!1;return!0}static _runAutoIndentType(e,t,n,o){const i=getIndentationAtPosition(t,n.startLineNumber,n.startColumn),r=getIndentActionForType(e.autoIndent,t,n,o,{shiftIndent:t=>TypeOperations.shiftIndent(e,t),unshiftIndent:t=>TypeOperations.unshiftIndent(e,t)},e.languageConfigurationService);if(null===r)return null;if(r!==e.normalizeIndentation(i)){const i=t.getLineFirstNonWhitespaceColumn(n.startLineNumber);return 0===i?TypeOperations._typeCommand(new Range(n.startLineNumber,1,n.endLineNumber,n.endColumn),e.normalizeIndentation(r)+o,!1):TypeOperations._typeCommand(new Range(n.startLineNumber,1,n.endLineNumber,n.endColumn),e.normalizeIndentation(r)+t.getLineContent(n.startLineNumber).substring(i-1,n.startColumn-1)+o,!1)}return null}static _isAutoClosingOvertype(e,t,n,o,i){if("never"===e.autoClosingOvertype)return!1;if(!e.autoClosingPairs.autoClosingPairsCloseSingleChar.has(i))return!1;for(let r=0,s=n.length;r<s;r++){const s=n[r];if(!s.isEmpty())return!1;const a=s.getPosition(),u=t.getLineContent(a.lineNumber);if(u.charAt(a.column-1)!==i)return!1;const l=isQuote(i);if(92===(a.column>2?u.charCodeAt(a.column-2):0)&&l)return!1;if("auto"===e.autoClosingOvertype){let e=!1;for(let t=0,n=o.length;t<n;t++){const n=o[t];if(a.lineNumber===n.startLineNumber&&a.column===n.startColumn){e=!0;break}}if(!e)return!1}}return!0}static _runAutoClosingOvertype(e,t,n,o,i){const r=[];for(let e=0,t=o.length;e<t;e++){const t=o[e].getPosition(),n=new Range(t.lineNumber,t.column,t.lineNumber,t.column+1);r[e]=new ReplaceCommand(n,i)}return new EditOperationResult(4,r,{shouldPushStackElementBefore:shouldPushStackElementBetween(e,4),shouldPushStackElementAfter:!1})}static _isBeforeClosingBrace(e,t){const n=t.charAt(0),o=e.autoClosingPairs.autoClosingPairsOpenByStart.get(n)||[],i=e.autoClosingPairs.autoClosingPairsCloseByStart.get(n)||[],r=o.some((e=>t.startsWith(e.open))),s=i.some((e=>t.startsWith(e.close)));return!r&&s}static _findAutoClosingPairOpen(e,t,n,o){const i=e.autoClosingPairs.autoClosingPairsOpenByEnd.get(o);if(!i)return null;let r=null;for(const e of i)if(null===r||e.open.length>r.open.length){let i=!0;for(const r of n)if(t.getValueInRange(new Range(r.lineNumber,r.column-e.open.length+1,r.lineNumber,r.column))+o!==e.open){i=!1;break}i&&(r=e)}return r}static _findContainedAutoClosingPair(e,t){if(t.open.length<=1)return null;const n=t.close.charAt(t.close.length-1),o=e.autoClosingPairs.autoClosingPairsCloseByEnd.get(n)||[];let i=null;for(const e of o)e.open!==t.open&&t.open.includes(e.open)&&t.close.endsWith(e.close)&&(!i||e.open.length>i.open.length)&&(i=e);return i}static _getAutoClosingPairClose(e,t,n,o,i){const r=isQuote(o),s=r?e.autoClosingQuotes:e.autoClosingBrackets,a=r?e.shouldAutoCloseBefore.quote:e.shouldAutoCloseBefore.bracket;if("never"===s)return null;for(const e of n)if(!e.isEmpty())return null;const u=n.map((e=>{const t=e.getPosition();return i?{lineNumber:t.lineNumber,beforeColumn:t.column-o.length,afterColumn:t.column}:{lineNumber:t.lineNumber,beforeColumn:t.column,afterColumn:t.column}})),l=this._findAutoClosingPairOpen(e,t,u.map((e=>new Position(e.lineNumber,e.beforeColumn))),o);if(!l)return null;const c=this._findContainedAutoClosingPair(e,l),m=c?c.close:"";let d=!0;for(const n of u){const{lineNumber:i,beforeColumn:r,afterColumn:u}=n,c=t.getLineContent(i),p=c.substring(0,r-1),h=c.substring(u-1);if(h.startsWith(m)||(d=!1),h.length>0){const t=h.charAt(0);if(!TypeOperations._isBeforeClosingBrace(e,h)&&!a(t))return null}if(1===l.open.length&&("'"===o||'"'===o)&&"always"!==s){const t=getMapForWordSeparators(e.wordSeparators);if(p.length>0){const e=p.charCodeAt(p.length-1);if(0===t.get(e))return null}}if(!t.tokenization.isCheapToTokenize(i))return null;t.tokenization.forceTokenization(i);const g=t.tokenization.getLineTokens(i),f=createScopedLineTokens(g,r-1);if(!l.shouldAutoClose(f,r-f.firstCharOffset))return null;const C=l.findNeutralCharacter();if(C){const e=t.tokenization.getTokenTypeIfInsertingCharacter(i,r,C);if(!l.isOK(e))return null}}return d?l.close.substring(0,l.close.length-m.length):l.close}static _runAutoClosingOpenCharType(e,t,n,o,i,r,s){const a=[];for(let e=0,t=o.length;e<t;e++){const t=o[e];a[e]=new TypeWithAutoClosingCommand(t,i,!r,s)}return new EditOperationResult(4,a,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!1})}static _shouldSurroundChar(e,t){return isQuote(t)?"quotes"===e.autoSurround||"languageDefined"===e.autoSurround:"brackets"===e.autoSurround||"languageDefined"===e.autoSurround}static _isSurroundSelectionType(e,t,n,o){if(!TypeOperations._shouldSurroundChar(e,o)||!e.surroundingPairs.hasOwnProperty(o))return!1;const i=isQuote(o);for(const e of n){if(e.isEmpty())return!1;let n=!0;for(let o=e.startLineNumber;o<=e.endLineNumber;o++){const i=t.getLineContent(o),r=o===e.startLineNumber?e.startColumn-1:0,s=o===e.endLineNumber?e.endColumn-1:i.length,a=i.substring(r,s);if(/[^ \t]/.test(a)){n=!1;break}}if(n)return!1;if(i&&e.startLineNumber===e.endLineNumber&&e.startColumn+1===e.endColumn){const n=t.getValueInRange(e);if(isQuote(n))return!1}}return!0}static _runSurroundSelectionType(e,t,n,o,i){const r=[];for(let e=0,n=o.length;e<n;e++){const n=o[e],s=t.surroundingPairs[i];r[e]=new SurroundSelectionCommand(n,i,s)}return new EditOperationResult(0,r,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!0})}static _isTypeInterceptorElectricChar(e,t,n){return!(1!==n.length||!t.tokenization.isCheapToTokenize(n[0].getEndPosition().lineNumber))}static _typeInterceptorElectricChar(e,t,n,o,i){if(!t.electricChars.hasOwnProperty(i)||!o.isEmpty())return null;const r=o.getPosition();n.tokenization.forceTokenization(r.lineNumber);const s=n.tokenization.getLineTokens(r.lineNumber);let a;try{a=t.onElectricCharacter(i,s,r.column)}catch(e){return onUnexpectedError(e),null}if(!a)return null;if(a.matchOpenBracket){const o=(s.getLineContent()+i).lastIndexOf(a.matchOpenBracket)+1,u=n.bracketPairs.findMatchingBracketUp(a.matchOpenBracket,{lineNumber:r.lineNumber,column:o},500);if(u){if(u.startLineNumber===r.lineNumber)return null;const o=n.getLineContent(u.startLineNumber),s=strings.getLeadingWhitespace(o),a=t.normalizeIndentation(s),l=n.getLineContent(r.lineNumber),c=n.getLineFirstNonWhitespaceColumn(r.lineNumber)||r.column,m=a+l.substring(c-1,r.column-1)+i,d=new Range(r.lineNumber,1,r.lineNumber,r.column),p=new ReplaceCommand(d,m);return new EditOperationResult(getTypingOperation(m,e),[p],{shouldPushStackElementBefore:!1,shouldPushStackElementAfter:!0})}}return null}static compositionEndWithInterceptors(e,t,n,o,i,r){if(!o)return null;let s=null;for(const e of o)if(null===s)s=e.insertedText;else if(s!==e.insertedText)return null;if(!s||1!==s.length)return null;const a=s;let u=!1;for(const e of o)if(0!==e.deletedText.length){u=!0;break}if(u){if(!TypeOperations._shouldSurroundChar(t,a)||!t.surroundingPairs.hasOwnProperty(a))return null;const e=isQuote(a);for(const t of o){if(0!==t.deletedSelectionStart||t.deletedSelectionEnd!==t.deletedText.length)return null;if(/^[ \t]+$/.test(t.deletedText))return null;if(e&&isQuote(t.deletedText))return null}const n=[];for(const e of i){if(!e.isEmpty())return null;n.push(e.getPosition())}if(n.length!==o.length)return null;const r=[];for(let e=0,i=n.length;e<i;e++)r.push(new CompositionSurroundSelectionCommand(n[e],o[e].deletedText,t.surroundingPairs[a]));return new EditOperationResult(4,r,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!1})}if(this._isAutoClosingOvertype(t,n,i,r,a)){const e=i.map((e=>new ReplaceCommand(new Range(e.positionLineNumber,e.positionColumn,e.positionLineNumber,e.positionColumn+1),"",!1)));return new EditOperationResult(4,e,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!1})}const l=this._getAutoClosingPairClose(t,n,i,a,!0);return null!==l?this._runAutoClosingOpenCharType(e,t,n,i,a,!0,l):null}static typeWithInterceptors(e,t,n,o,i,r,s){if(!e&&"\n"===s){const e=[];for(let t=0,r=i.length;t<r;t++)e[t]=TypeOperations._enter(n,o,!1,i[t]);return new EditOperationResult(4,e,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!1})}if(!e&&this._isAutoIndentType(n,o,i)){const e=[];let t=!1;for(let r=0,a=i.length;r<a;r++)if(e[r]=this._runAutoIndentType(n,o,i[r],s),!e[r]){t=!0;break}if(!t)return new EditOperationResult(4,e,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!1})}if(this._isAutoClosingOvertype(n,o,i,r,s))return this._runAutoClosingOvertype(t,n,o,i,s);if(!e){const e=this._getAutoClosingPairClose(n,o,i,s,!1);if(e)return this._runAutoClosingOpenCharType(t,n,o,i,s,!1,e)}if(!e&&this._isSurroundSelectionType(n,o,i,s))return this._runSurroundSelectionType(t,n,o,i,s);if(!e&&this._isTypeInterceptorElectricChar(n,o,i)){const e=this._typeInterceptorElectricChar(t,n,o,i[0],s);if(e)return e}const a=[];for(let e=0,t=i.length;e<t;e++)a[e]=new ReplaceCommand(i[e],s);const u=getTypingOperation(s,t);return new EditOperationResult(u,a,{shouldPushStackElementBefore:shouldPushStackElementBetween(t,u),shouldPushStackElementAfter:!1})}static typeWithoutInterceptors(e,t,n,o,i){const r=[];for(let e=0,t=o.length;e<t;e++)r[e]=new ReplaceCommand(o[e],i);const s=getTypingOperation(i,e);return new EditOperationResult(s,r,{shouldPushStackElementBefore:shouldPushStackElementBetween(e,s),shouldPushStackElementAfter:!1})}static lineInsertBefore(e,t,n){if(null===t||null===n)return[];const o=[];for(let i=0,r=n.length;i<r;i++){let r=n[i].positionLineNumber;if(1===r)o[i]=new ReplaceCommandWithoutChangingPosition(new Range(1,1,1,1),"\n");else{r--;const n=t.getLineMaxColumn(r);o[i]=this._enter(e,t,!1,new Range(r,n,r,n))}}return o}static lineInsertAfter(e,t,n){if(null===t||null===n)return[];const o=[];for(let i=0,r=n.length;i<r;i++){const r=n[i].positionLineNumber,s=t.getLineMaxColumn(r);o[i]=this._enter(e,t,!1,new Range(r,s,r,s))}return o}static lineBreakInsert(e,t,n){const o=[];for(let i=0,r=n.length;i<r;i++)o[i]=this._enter(e,t,!0,n[i]);return o}}export class TypeWithAutoClosingCommand extends ReplaceCommandWithOffsetCursorState{constructor(e,t,n,o){super(e,(n?t:"")+o,0,-o.length),this._openCharacter=t,this._closeCharacter=o,this.closeCharacterRange=null,this.enclosingRange=null}computeCursorState(e,t){const n=t.getInverseEditOperations()[0].range;return this.closeCharacterRange=new Range(n.startLineNumber,n.endColumn-this._closeCharacter.length,n.endLineNumber,n.endColumn),this.enclosingRange=new Range(n.startLineNumber,n.endColumn-this._openCharacter.length-this._closeCharacter.length,n.endLineNumber,n.endColumn),super.computeCursorState(e,t)}}export class CompositionOutcome{constructor(e,t,n,o,i,r){this.deletedText=e,this.deletedSelectionStart=t,this.deletedSelectionEnd=n,this.insertedText=o,this.insertedSelectionStart=i,this.insertedSelectionEnd=r}}function getTypingOperation(e,t){return" "===e?5===t||6===t?6:5:4}function shouldPushStackElementBetween(e,t){return!(!isTypingOperation(e)||isTypingOperation(t))||5!==e&&normalizeOperationType(e)!==normalizeOperationType(t)}function normalizeOperationType(e){return 6===e||5===e?"space":e}function isTypingOperation(e){return 4===e||5===e||6===e}