import{SingleCursorState}from"../cursorCommon.js";import{Position}from"../core/position.js";import{Range}from"../core/range.js";export class ColumnSelection{static columnSelect(e,o,i,n,t,m){const u=Math.abs(t-i)+1,l=i>t,r=n>m,s=n<m,c=[];for(let t=0;t<u;t++){const u=i+(l?-t:t),a=e.columnFromVisibleColumn(o,u,n),V=e.columnFromVisibleColumn(o,u,m),w=e.visibleColumnFromColumn(o,new Position(u,a)),C=e.visibleColumnFromColumn(o,new Position(u,V));if(s){if(w>m)continue;if(C<n)continue}if(r){if(C>n)continue;if(w<m)continue}c.push(new SingleCursorState(new Range(u,a,u,a),0,0,new Position(u,V),0))}if(0===c.length)for(let e=0;e<u;e++){const n=i+(l?-e:e),t=o.getLineMaxColumn(n);c.push(new SingleCursorState(new Range(n,t,n,t),0,0,new Position(n,t),0))}return{viewStates:c,reversed:l,fromLineNumber:i,fromVisualColumn:n,toLineNumber:t,toVisualColumn:m}}static columnSelectLeft(e,o,i){let n=i.toViewVisualColumn;return n>0&&n--,ColumnSelection.columnSelect(e,o,i.fromViewLineNumber,i.fromViewVisualColumn,i.toViewLineNumber,n)}static columnSelectRight(e,o,i){let n=0;const t=Math.min(i.fromViewLineNumber,i.toViewLineNumber),m=Math.max(i.fromViewLineNumber,i.toViewLineNumber);for(let i=t;i<=m;i++){const t=o.getLineMaxColumn(i),m=e.visibleColumnFromColumn(o,new Position(i,t));n=Math.max(n,m)}let u=i.toViewVisualColumn;return u<n&&u++,this.columnSelect(e,o,i.fromViewLineNumber,i.fromViewVisualColumn,i.toViewLineNumber,u)}static columnSelectUp(e,o,i,n){const t=n?e.pageSize:1,m=Math.max(1,i.toViewLineNumber-t);return this.columnSelect(e,o,i.fromViewLineNumber,i.fromViewVisualColumn,m,i.toViewVisualColumn)}static columnSelectDown(e,o,i,n){const t=n?e.pageSize:1,m=Math.min(o.getLineCount(),i.toViewLineNumber+t);return this.columnSelect(e,o,i.fromViewLineNumber,i.fromViewVisualColumn,m,i.toViewVisualColumn)}}