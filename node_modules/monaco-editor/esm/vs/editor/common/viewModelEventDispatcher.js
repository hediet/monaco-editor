import{Emitter}from"../../base/common/event.js";import{Disposable}from"../../base/common/lifecycle.js";export class ViewModelEventDispatcher extends Disposable{constructor(){super(),this._onEvent=this._register(new Emitter),this.onEvent=this._onEvent.event,this._eventHandlers=[],this._viewEventQueue=null,this._isConsumingViewEventQueue=!1,this._collector=null,this._collectorCnt=0,this._outgoingEvents=[]}emitOutgoingEvent(t){this._addOutgoingEvent(t),this._emitOutgoingEvents()}_addOutgoingEvent(t){for(let e=0,n=this._outgoingEvents.length;e<n;e++){const n=this._outgoingEvents[e].kind===t.kind?this._outgoingEvents[e].attemptToMerge(t):null;if(n)return void(this._outgoingEvents[e]=n)}this._outgoingEvents.push(t)}_emitOutgoingEvents(){for(;this._outgoingEvents.length>0;){if(this._collector||this._isConsumingViewEventQueue)return;const t=this._outgoingEvents.shift();t.isNoOp()||this._onEvent.fire(t)}}addViewEventHandler(t){for(let e=0,n=this._eventHandlers.length;e<n;e++)this._eventHandlers[e]===t&&console.warn("Detected duplicate listener in ViewEventDispatcher",t);this._eventHandlers.push(t)}removeViewEventHandler(t){for(let e=0;e<this._eventHandlers.length;e++)if(this._eventHandlers[e]===t){this._eventHandlers.splice(e,1);break}}beginEmitViewEvents(){return this._collectorCnt++,1===this._collectorCnt&&(this._collector=new ViewModelEventsCollector),this._collector}endEmitViewEvents(){if(this._collectorCnt--,0===this._collectorCnt){const t=this._collector.outgoingEvents,e=this._collector.viewEvents;this._collector=null;for(const e of t)this._addOutgoingEvent(e);e.length>0&&this._emitMany(e)}this._emitOutgoingEvents()}emitSingleViewEvent(t){try{this.beginEmitViewEvents().emitViewEvent(t)}finally{this.endEmitViewEvents()}}_emitMany(t){this._viewEventQueue?this._viewEventQueue=this._viewEventQueue.concat(t):this._viewEventQueue=t,this._isConsumingViewEventQueue||this._consumeViewEventQueue()}_consumeViewEventQueue(){try{this._isConsumingViewEventQueue=!0,this._doConsumeQueue()}finally{this._isConsumingViewEventQueue=!1}}_doConsumeQueue(){for(;this._viewEventQueue;){const t=this._viewEventQueue;this._viewEventQueue=null;const e=this._eventHandlers.slice(0);for(const n of e)n.handleEvents(t)}}}export class ViewModelEventsCollector{constructor(){this.viewEvents=[],this.outgoingEvents=[]}emitViewEvent(t){this.viewEvents.push(t)}emitOutgoingEvent(t){this.outgoingEvents.push(t)}}export class ContentSizeChangedEvent{constructor(t,e,n,i){this.kind=0,this._oldContentWidth=t,this._oldContentHeight=e,this.contentWidth=n,this.contentHeight=i,this.contentWidthChanged=this._oldContentWidth!==this.contentWidth,this.contentHeightChanged=this._oldContentHeight!==this.contentHeight}isNoOp(){return!this.contentWidthChanged&&!this.contentHeightChanged}attemptToMerge(t){return t.kind!==this.kind?null:new ContentSizeChangedEvent(this._oldContentWidth,this._oldContentHeight,t.contentWidth,t.contentHeight)}}export class FocusChangedEvent{constructor(t,e){this.kind=1,this.oldHasFocus=t,this.hasFocus=e}isNoOp(){return this.oldHasFocus===this.hasFocus}attemptToMerge(t){return t.kind!==this.kind?null:new FocusChangedEvent(this.oldHasFocus,t.hasFocus)}}export class ScrollChangedEvent{constructor(t,e,n,i,s,o,r,l){this.kind=2,this._oldScrollWidth=t,this._oldScrollLeft=e,this._oldScrollHeight=n,this._oldScrollTop=i,this.scrollWidth=s,this.scrollLeft=o,this.scrollHeight=r,this.scrollTop=l,this.scrollWidthChanged=this._oldScrollWidth!==this.scrollWidth,this.scrollLeftChanged=this._oldScrollLeft!==this.scrollLeft,this.scrollHeightChanged=this._oldScrollHeight!==this.scrollHeight,this.scrollTopChanged=this._oldScrollTop!==this.scrollTop}isNoOp(){return!(this.scrollWidthChanged||this.scrollLeftChanged||this.scrollHeightChanged||this.scrollTopChanged)}attemptToMerge(t){return t.kind!==this.kind?null:new ScrollChangedEvent(this._oldScrollWidth,this._oldScrollLeft,this._oldScrollHeight,this._oldScrollTop,t.scrollWidth,t.scrollLeft,t.scrollHeight,t.scrollTop)}}export class ViewZonesChangedEvent{constructor(){this.kind=3}isNoOp(){return!1}attemptToMerge(t){return t.kind!==this.kind?null:this}}export class HiddenAreasChangedEvent{constructor(){this.kind=4}isNoOp(){return!1}attemptToMerge(t){return t.kind!==this.kind?null:this}}export class CursorStateChangedEvent{constructor(t,e,n,i,s,o,r){this.kind=6,this.oldSelections=t,this.selections=e,this.oldModelVersionId=n,this.modelVersionId=i,this.source=s,this.reason=o,this.reachedMaxCursorCount=r}static _selectionsAreEqual(t,e){if(!t&&!e)return!0;if(!t||!e)return!1;const n=t.length;if(n!==e.length)return!1;for(let i=0;i<n;i++)if(!t[i].equalsSelection(e[i]))return!1;return!0}isNoOp(){return CursorStateChangedEvent._selectionsAreEqual(this.oldSelections,this.selections)&&this.oldModelVersionId===this.modelVersionId}attemptToMerge(t){return t.kind!==this.kind?null:new CursorStateChangedEvent(this.oldSelections,t.selections,this.oldModelVersionId,t.modelVersionId,t.source,t.reason,this.reachedMaxCursorCount||t.reachedMaxCursorCount)}}export class ReadOnlyEditAttemptEvent{constructor(){this.kind=5}isNoOp(){return!1}attemptToMerge(t){return t.kind!==this.kind?null:this}}export class ModelDecorationsChangedEvent{constructor(t){this.event=t,this.kind=7}isNoOp(){return!1}attemptToMerge(t){return null}}export class ModelLanguageChangedEvent{constructor(t){this.event=t,this.kind=8}isNoOp(){return!1}attemptToMerge(t){return null}}export class ModelLanguageConfigurationChangedEvent{constructor(t){this.event=t,this.kind=9}isNoOp(){return!1}attemptToMerge(t){return null}}export class ModelContentChangedEvent{constructor(t){this.event=t,this.kind=10}isNoOp(){return!1}attemptToMerge(t){return null}}export class ModelOptionsChangedEvent{constructor(t){this.event=t,this.kind=11}isNoOp(){return!1}attemptToMerge(t){return null}}export class ModelTokensChangedEvent{constructor(t){this.event=t,this.kind=12}isNoOp(){return!1}attemptToMerge(t){return null}}