import{CachedFunction}from"../../../../base/common/cache.js";import{BugIndicatingError}from"../../../../base/common/errors.js";export class LanguageBracketsConfiguration{constructor(e,t){let n;this.languageId=e,n=t.colorizedBracketPairs?filterValidBrackets(t.colorizedBracketPairs.map((e=>[e[0],e[1]]))):t.brackets?filterValidBrackets(t.brackets.map((e=>[e[0],e[1]])).filter((e=>!("<"===e[0]&&">"===e[1])))):[];const r=new CachedFunction((e=>{const t=new Set;return{info:new OpeningBracketKind(this,e,t),closing:t}})),s=new CachedFunction((e=>{const t=new Set;return{info:new ClosingBracketKind(this,e,t),opening:t}}));for(const[e,t]of n){const n=r.get(e),i=s.get(t);n.closing.add(i.info),i.opening.add(n.info)}this._openingBrackets=new Map([...r.cachedValues].map((([e,t])=>[e,t.info]))),this._closingBrackets=new Map([...s.cachedValues].map((([e,t])=>[e,t.info])))}get openingBrackets(){return[...this._openingBrackets.values()]}get closingBrackets(){return[...this._closingBrackets.values()]}getOpeningBracketInfo(e){return this._openingBrackets.get(e)}getClosingBracketInfo(e){return this._closingBrackets.get(e)}getBracketInfo(e){return this.getOpeningBracketInfo(e)||this.getClosingBracketInfo(e)}}function filterValidBrackets(e){return e.filter((([e,t])=>""!==e&&""!==t))}export class BracketKindBase{constructor(e,t){this.config=e,this.bracketText=t}get languageId(){return this.config.languageId}}export class OpeningBracketKind extends BracketKindBase{constructor(e,t,n){super(e,t),this.openedBrackets=n,this.isOpeningBracket=!0}}export class ClosingBracketKind extends BracketKindBase{constructor(e,t,n){super(e,t),this.closedBrackets=n,this.isOpeningBracket=!1}closes(e){if(e.languageId===this.languageId&&e.config!==this.config)throw new BugIndicatingError("Brackets from different language configuration cannot be used.");return this.closedBrackets.has(e)}getClosedBrackets(){return[...this.closedBrackets]}}