import{Iterable}from"../../../base/common/iterator.js";import{LinkedList}from"../../../base/common/linkedList.js";export const USUAL_WORD_SEPARATORS="`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?";function createWordRegExp(e=""){let n="(-?\\d*\\.\\d\\w*)|([^";for(const t of USUAL_WORD_SEPARATORS)e.indexOf(t)>=0||(n+="\\"+t);return n+="\\s]+)",new RegExp(n,"g")}export const DEFAULT_WORD_REGEXP=createWordRegExp();export function ensureValidWordDefinition(e){let n=DEFAULT_WORD_REGEXP;if(e&&e instanceof RegExp)if(e.global)n=e;else{let t="g";e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.unicode&&(t+="u"),n=new RegExp(e.source,t)}return n.lastIndex=0,n}const _defaultConfig=new LinkedList;_defaultConfig.unshift({maxLen:1e3,windowSize:15,timeBudget:150});export function getWordAtText(e,n,t,o,i){if(i||(i=Iterable.first(_defaultConfig)),t.length>i.maxLen){let r=e-i.maxLen/2;return r<0?r=0:o+=r,getWordAtText(e,n,t=t.substring(r,e+i.maxLen/2),o,i)}const r=Date.now(),l=e-1-o;let s=-1,a=null;for(let e=1;!(Date.now()-r>=i.timeBudget);e++){const o=l-i.windowSize*e;n.lastIndex=Math.max(0,o);const r=_findRegexMatchEnclosingPosition(n,t,l,s);if(!r&&a)break;if(a=r,o<=0)break;s=o}if(a){const e={word:a[0],startColumn:o+1+a.index,endColumn:o+1+a.index+a[0].length};return n.lastIndex=0,e}return null}function _findRegexMatchEnclosingPosition(e,n,t,o){let i;for(;i=e.exec(n);){const n=i.index||0;if(n<=t&&e.lastIndex>=t)return i;if(o>0&&n>o)return null}return null}