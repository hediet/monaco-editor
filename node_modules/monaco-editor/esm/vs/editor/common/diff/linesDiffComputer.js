export class LineRangeMapping{constructor(e,i,t){this.originalRange=e,this.modifiedRange=i,this.innerChanges=t}toString(){return`{${this.originalRange.toString()}->${this.modifiedRange.toString()}}`}}export class RangeMapping{constructor(e,i){this.originalRange=e,this.modifiedRange=i}toString(){return`{${this.originalRange.toString()}->${this.modifiedRange.toString()}}`}}export class LineRange{constructor(e,i){this.startLineNumber=e,this.endLineNumberExclusive=i}get isEmpty(){return this.startLineNumber===this.endLineNumberExclusive}delta(e){return new LineRange(this.startLineNumber+e,this.endLineNumberExclusive+e)}get length(){return this.endLineNumberExclusive-this.startLineNumber}join(e){return new LineRange(Math.min(this.startLineNumber,e.startLineNumber),Math.max(this.endLineNumberExclusive,e.endLineNumberExclusive))}toString(){return`[${this.startLineNumber},${this.endLineNumberExclusive})`}}