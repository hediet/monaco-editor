class SpacesDiffResult{constructor(){this.spacesDiff=0,this.looksLikeAlignment=!1}}function spacesDiff(e,t,n,s,i){let o;for(i.spacesDiff=0,i.looksLikeAlignment=!1,o=0;o<t&&o<s&&e.charCodeAt(o)===n.charCodeAt(o);o++);let f=0,c=0;for(let n=o;n<t;n++)32===e.charCodeAt(n)?f++:c++;let a=0,r=0;for(let e=o;e<s;e++)32===n.charCodeAt(e)?a++:r++;if(f>0&&c>0)return;if(a>0&&r>0)return;const l=Math.abs(c-r),h=Math.abs(f-a);if(0===l)return i.spacesDiff=h,void(h>0&&0<=a-1&&a-1<e.length&&a<n.length&&32!==n.charCodeAt(a)&&32===e.charCodeAt(a-1)&&44===e.charCodeAt(e.length-1)&&(i.looksLikeAlignment=!0));h%l!=0||(i.spacesDiff=h/l)}export function guessIndentation(e,t,n){const s=Math.min(e.getLineCount(),1e4);let i=0,o=0,f="",c=0;const a=[2,4,6,8,3,5,7],r=[0,0,0,0,0,0,0,0,0],l=new SpacesDiffResult;for(let a=1;a<=s;a++){const s=e.getLineLength(a),h=e.getLineContent(a),g=s<=65536;let u=!1,p=0,A=0,C=0;for(let t=0,n=s;t<n;t++){const n=g?h.charCodeAt(t):e.getLineCharCode(a,t);if(9===n)C++;else{if(32!==n){u=!0,p=t;break}A++}}if(!u)continue;if(C>0?i++:A>1&&o++,spacesDiff(f,c,h,p,l),l.looksLikeAlignment&&(!n||t!==l.spacesDiff))continue;const d=l.spacesDiff;d<=8&&r[d]++,f=h,c=p}let h=n;i!==o&&(h=i<o);let g=t;if(h){let e=h?0:.1*s;a.forEach((t=>{const n=r[t];n>e&&(e=n,g=t)})),4===g&&r[4]>0&&r[2]>0&&r[2]>=r[4]/2&&(g=2)}return{insertSpaces:h,tabSize:g}}