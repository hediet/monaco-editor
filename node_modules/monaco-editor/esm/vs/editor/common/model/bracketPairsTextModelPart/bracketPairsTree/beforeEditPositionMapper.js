import{lengthAdd,lengthDiffNonNegative,lengthLessThanEqual,lengthToObj,toLength}from"./length.js";export class TextEditInfo{constructor(t,e,n){this.startOffset=t,this.endOffset=e,this.newLength=n}}export class BeforeEditPositionMapper{constructor(t){this.nextEditIdx=0,this.deltaOldToNewLineCount=0,this.deltaOldToNewColumnCount=0,this.deltaLineIdxInOld=-1,this.edits=t.map((t=>TextEditInfoCache.from(t)))}getOffsetBeforeChange(t){return this.adjustNextEdit(t),this.translateCurToOld(t)}getDistanceToNextChange(t){this.adjustNextEdit(t);const e=this.edits[this.nextEditIdx],n=e?this.translateOldToCur(e.offsetObj):null;return null===n?null:lengthDiffNonNegative(t,n)}translateOldToCur(t){return t.lineCount===this.deltaLineIdxInOld?toLength(t.lineCount+this.deltaOldToNewLineCount,t.columnCount+this.deltaOldToNewColumnCount):toLength(t.lineCount+this.deltaOldToNewLineCount,t.columnCount)}translateCurToOld(t){const e=lengthToObj(t);return e.lineCount-this.deltaOldToNewLineCount===this.deltaLineIdxInOld?toLength(e.lineCount-this.deltaOldToNewLineCount,e.columnCount-this.deltaOldToNewColumnCount):toLength(e.lineCount-this.deltaOldToNewLineCount,e.columnCount)}adjustNextEdit(t){for(;this.nextEditIdx<this.edits.length;){const e=this.edits[this.nextEditIdx],n=this.translateOldToCur(e.endOffsetAfterObj);if(!lengthLessThanEqual(n,t))break;{this.nextEditIdx++;const t=lengthToObj(n),o=lengthToObj(this.translateOldToCur(e.endOffsetBeforeObj)),l=t.lineCount-o.lineCount;this.deltaOldToNewLineCount+=l;const s=this.deltaLineIdxInOld===e.endOffsetBeforeObj.lineCount?this.deltaOldToNewColumnCount:0,i=t.columnCount-o.columnCount;this.deltaOldToNewColumnCount=s+i,this.deltaLineIdxInOld=e.endOffsetBeforeObj.lineCount}}}}class TextEditInfoCache{static from(t){return new TextEditInfoCache(t.startOffset,t.endOffset,t.newLength)}constructor(t,e,n){this.endOffsetBeforeObj=lengthToObj(e),this.endOffsetAfterObj=lengthToObj(lengthAdd(t,n)),this.offsetObj=lengthToObj(t)}}