import{escapeRegExpCharacters}from"../../../../../base/common/strings.js";import{BracketAstNode}from"./ast.js";import{toLength}from"./length.js";import{identityKeyProvider,SmallImmutableSet}from"./smallImmutableSet.js";import{Token}from"./tokenizer.js";export class BracketTokens{static createFromLanguage(e,t){function r(e){return t.getKey(`${e.languageId}:::${e.bracketText}`)}const a=new Map;for(const t of e.bracketsNew.openingBrackets){const e=toLength(0,t.bracketText.length),s=r(t),n=SmallImmutableSet.getEmpty().add(s,identityKeyProvider);a.set(t.bracketText,new Token(e,1,s,n,BracketAstNode.create(e,t,n)))}for(const t of e.bracketsNew.closingBrackets){const e=toLength(0,t.bracketText.length);let s=SmallImmutableSet.getEmpty();const n=t.getClosedBrackets();for(const e of n)s=s.add(r(e),identityKeyProvider);a.set(t.bracketText,new Token(e,2,r(n[0]),s,BracketAstNode.create(e,t,s)))}return new BracketTokens(a)}constructor(e){this.map=e,this.hasRegExp=!1,this._regExpGlobal=null}getRegExpStr(){if(this.isEmpty)return null;{const e=[...this.map.keys()];return e.sort(),e.reverse(),e.map((e=>prepareBracketForRegExp(e))).join("|")}}get regExpGlobal(){if(!this.hasRegExp){const e=this.getRegExpStr();this._regExpGlobal=e?new RegExp(e,"gi"):null,this.hasRegExp=!0}return this._regExpGlobal}getToken(e){return this.map.get(e.toLowerCase())}findClosingTokenText(e){for(const[t,r]of this.map)if(2===r.kind&&r.bracketIds.intersects(e))return t}get isEmpty(){return 0===this.map.size}}function prepareBracketForRegExp(e){let t=escapeRegExpCharacters(e);return/^[\w ]+/.test(e)&&(t=`\\b${t}`),/[\w ]+$/.test(e)&&(t=`${t}\\b`),t}export class LanguageAgnosticBracketTokens{constructor(e,t){this.denseKeyProvider=e,this.getLanguageConfiguration=t,this.languageIdToBracketTokens=new Map}didLanguageChange(e){return this.languageIdToBracketTokens.has(e)}getSingleLanguageBracketTokens(e){let t=this.languageIdToBracketTokens.get(e);return t||(t=BracketTokens.createFromLanguage(this.getLanguageConfiguration(e),this.denseKeyProvider),this.languageIdToBracketTokens.set(e,t)),t}}