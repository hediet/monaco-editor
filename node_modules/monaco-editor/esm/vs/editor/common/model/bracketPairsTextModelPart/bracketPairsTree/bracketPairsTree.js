import{Emitter}from"../../../../../base/common/event.js";import{Disposable}from"../../../../../base/common/lifecycle.js";import{Range}from"../../../core/range.js";import{BracketInfo,BracketPairWithMinIndentationInfo}from"../../../textModelBracketPairs.js";import{TextEditInfo}from"./beforeEditPositionMapper.js";import{LanguageAgnosticBracketTokens}from"./brackets.js";import{lengthAdd,lengthGreaterThanEqual,lengthLessThan,lengthLessThanEqual,lengthOfString,lengthsToRange,lengthZero,positionToLength,toLength}from"./length.js";import{parseDocument}from"./parser.js";import{DenseKeyProvider}from"./smallImmutableSet.js";import{FastTokenizer,TextBufferTokenizer}from"./tokenizer.js";import{CallbackIterable}from"../../../../../base/common/arrays.js";import{combineTextEditInfos}from"./combineTextEditInfos.js";export class BracketPairsTree extends Disposable{didLanguageChange(t){return this.brackets.didLanguageChange(t)}constructor(t,e){if(super(),this.textModel=t,this.getLanguageConfiguration=e,this.didChangeEmitter=new Emitter,this.denseKeyProvider=new DenseKeyProvider,this.brackets=new LanguageAgnosticBracketTokens(this.denseKeyProvider,this.getLanguageConfiguration),this.onDidChange=this.didChangeEmitter.event,this.queuedTextEditsForInitialAstWithoutTokens=[],this.queuedTextEdits=[],0===t.tokenization.backgroundTokenizationState){const t=this.brackets.getSingleLanguageBracketTokens(this.textModel.getLanguageId()),e=new FastTokenizer(this.textModel.getValue(),t);this.initialAstWithoutTokens=parseDocument(e,[],void 0,!0),this.astWithTokens=this.initialAstWithoutTokens}else 2===t.tokenization.backgroundTokenizationState?(this.initialAstWithoutTokens=void 0,this.astWithTokens=this.parseDocumentFromTextBuffer([],void 0,!1)):1===t.tokenization.backgroundTokenizationState&&(this.initialAstWithoutTokens=this.parseDocumentFromTextBuffer([],void 0,!0),this.astWithTokens=this.initialAstWithoutTokens)}handleDidChangeBackgroundTokenizationState(){if(2===this.textModel.tokenization.backgroundTokenizationState){const t=void 0===this.initialAstWithoutTokens;this.initialAstWithoutTokens=void 0,t||this.didChangeEmitter.fire()}}handleDidChangeTokens({ranges:t}){const e=t.map((t=>new TextEditInfo(toLength(t.fromLineNumber-1,0),toLength(t.toLineNumber,0),toLength(t.toLineNumber-t.fromLineNumber+1,0))));this.handleEdits(e,!0),this.initialAstWithoutTokens||this.didChangeEmitter.fire()}handleContentChanged(t){const e=t.changes.map((t=>{const e=Range.lift(t.range);return new TextEditInfo(positionToLength(e.getStartPosition()),positionToLength(e.getEndPosition()),lengthOfString(t.text))})).reverse();this.handleEdits(e,!1)}handleEdits(t,e){const n=combineTextEditInfos(this.queuedTextEdits,t);this.queuedTextEdits=n,this.initialAstWithoutTokens&&!e&&(this.queuedTextEditsForInitialAstWithoutTokens=combineTextEditInfos(this.queuedTextEditsForInitialAstWithoutTokens,t))}flushQueue(){this.queuedTextEdits.length>0&&(this.astWithTokens=this.parseDocumentFromTextBuffer(this.queuedTextEdits,this.astWithTokens,!1),this.queuedTextEdits=[]),this.queuedTextEditsForInitialAstWithoutTokens.length>0&&(this.initialAstWithoutTokens&&(this.initialAstWithoutTokens=this.parseDocumentFromTextBuffer(this.queuedTextEditsForInitialAstWithoutTokens,this.initialAstWithoutTokens,!1)),this.queuedTextEditsForInitialAstWithoutTokens=[])}parseDocumentFromTextBuffer(t,e,n){const i=e,o=new TextBufferTokenizer(this.textModel,this.brackets);return parseDocument(o,t,i,n)}getBracketsInRange(t){this.flushQueue();const e=toLength(t.startLineNumber-1,t.startColumn-1),n=toLength(t.endLineNumber-1,t.endColumn-1);return new CallbackIterable((t=>{const i=this.initialAstWithoutTokens||this.astWithTokens;collectBrackets(i,lengthZero,i.length,e,n,t,0,0,new Map)}))}getBracketPairsInRange(t,e){this.flushQueue();const n=positionToLength(t.getStartPosition()),i=positionToLength(t.getEndPosition());return new CallbackIterable((t=>{const o=this.initialAstWithoutTokens||this.astWithTokens,s=new CollectBracketPairsContext(t,e,this.textModel);collectBracketPairs(o,lengthZero,o.length,n,i,s,0,new Map)}))}getFirstBracketAfter(t){this.flushQueue();const e=this.initialAstWithoutTokens||this.astWithTokens;return getFirstBracketAfter(e,lengthZero,e.length,positionToLength(t))}getFirstBracketBefore(t){this.flushQueue();const e=this.initialAstWithoutTokens||this.astWithTokens;return getFirstBracketBefore(e,lengthZero,e.length,positionToLength(t))}}function getFirstBracketBefore(t,e,n,i){if(4===t.kind||2===t.kind){const o=[];for(const i of t.children)n=lengthAdd(e,i.length),o.push({nodeOffsetStart:e,nodeOffsetEnd:n}),e=n;for(let e=o.length-1;e>=0;e--){const{nodeOffsetStart:n,nodeOffsetEnd:s}=o[e];if(lengthLessThan(n,i)){const o=getFirstBracketBefore(t.children[e],n,s,i);if(o)return o}}return null}if(3===t.kind)return null;if(1===t.kind){const i=lengthsToRange(e,n);return{bracketInfo:t.bracketInfo,range:i}}return null}function getFirstBracketAfter(t,e,n,i){if(4===t.kind||2===t.kind){for(const o of t.children){if(n=lengthAdd(e,o.length),lengthLessThan(i,n)){const t=getFirstBracketAfter(o,e,n,i);if(t)return t}e=n}return null}if(3===t.kind)return null;if(1===t.kind){const i=lengthsToRange(e,n);return{bracketInfo:t.bracketInfo,range:i}}return null}function collectBrackets(t,e,n,i,o,s,r,a,h,l=!1){if(r>200)return!0;t:for(;;)switch(t.kind){case 4:{const a=t.childrenLength;for(let l=0;l<a;l++){const a=t.getChild(l);if(a){if(n=lengthAdd(e,a.length),lengthLessThanEqual(e,o)&&lengthGreaterThanEqual(n,i)){if(lengthGreaterThanEqual(n,o)){t=a;continue t}if(!collectBrackets(a,e,n,i,o,s,r,0,h))return!1}e=n}}return!0}case 2:{let l=0;if(h){let e=h.get(t.openingBracket.text);void 0===e&&(e=0),l=e,e++,h.set(t.openingBracket.text,e)}const u=t.childrenLength;for(let g=0;g<u;g++){const u=t.getChild(g);if(u){if(n=lengthAdd(e,u.length),lengthLessThanEqual(e,o)&&lengthGreaterThanEqual(n,i)){if(lengthGreaterThanEqual(n,o)){t=u,r++,a=l+1;continue t}if(!collectBrackets(u,e,n,i,o,s,r+1,l+1,h,!t.closingBracket))return!1}e=n}}return null==h||h.set(t.openingBracket.text,l),!0}case 3:{const t=lengthsToRange(e,n);return s(new BracketInfo(t,r-1,0,!0))}case 1:{const t=lengthsToRange(e,n);return s(new BracketInfo(t,r-1,a-1,l))}case 0:return!0}}class CollectBracketPairsContext{constructor(t,e,n){this.push=t,this.includeMinIndentation=e,this.textModel=n}}function collectBracketPairs(t,e,n,i,o,s,r,a){var h;if(r>200)return!0;let l=!0;if(2===t.kind){let u=0;if(a){let e=a.get(t.openingBracket.text);void 0===e&&(e=0),u=e,e++,a.set(t.openingBracket.text,e)}const g=lengthAdd(e,t.openingBracket.length);let c=-1;if(s.includeMinIndentation&&(c=t.computeMinIndentation(e,s.textModel)),l=s.push(new BracketPairWithMinIndentationInfo(lengthsToRange(e,n),lengthsToRange(e,g),t.closingBracket?lengthsToRange(lengthAdd(g,(null===(h=t.child)||void 0===h?void 0:h.length)||lengthZero),n):void 0,r,u,t,c)),e=g,l&&t.child){const h=t.child;if(n=lengthAdd(e,h.length),lengthLessThanEqual(e,o)&&lengthGreaterThanEqual(n,i)&&(l=collectBracketPairs(h,e,n,i,o,s,r+1,a),!l))return!1}null==a||a.set(t.openingBracket.text,u)}else{let n=e;for(const e of t.children){const t=n;if(n=lengthAdd(n,e.length),lengthLessThanEqual(t,o)&&lengthLessThanEqual(i,n)&&(l=collectBracketPairs(e,t,n,i,o,s,r,a),!l))return!1}}return l}