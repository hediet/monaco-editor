var __decorate=this&&this.__decorate||function(t,e,n,i){var s,o=arguments.length,r=o<3?e:null===i?i=Object.getOwnPropertyDescriptor(e,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,n,i);else for(var a=t.length-1;a>=0;a--)(s=t[a])&&(r=(o<3?s(r):o>3?s(e,n,r):s(e,n))||r);return o>3&&r&&Object.defineProperty(e,n,r),r},__param=this&&this.__param||function(t,e){return function(n,i){e(n,i,t)}};import*as strings from"../../../base/common/strings.js";import{CursorColumns}from"../core/cursorColumns.js";import{Range}from"../core/range.js";import{Selection}from"../core/selection.js";import{getEnterAction}from"../languages/enterAction.js";import{ILanguageConfigurationService}from"../languages/languageConfigurationRegistry.js";const repeatCache=Object.create(null);function cachedStringRepeat(t,e){if(e<=0)return"";repeatCache[t]||(repeatCache[t]=["",t]);const n=repeatCache[t];for(let i=n.length;i<=e;i++)n[i]=n[i-1]+t;return n[e]}let ShiftCommand=class t{static unshiftIndent(t,e,n,i,s){const o=CursorColumns.visibleColumnFromColumn(t,e,n);if(s){const t=cachedStringRepeat(" ",i);return cachedStringRepeat(t,CursorColumns.prevIndentTabStop(o,i)/i)}return cachedStringRepeat("\t",CursorColumns.prevRenderTabStop(o,n)/n)}static shiftIndent(t,e,n,i,s){const o=CursorColumns.visibleColumnFromColumn(t,e,n);if(s){const t=cachedStringRepeat(" ",i);return cachedStringRepeat(t,CursorColumns.nextIndentTabStop(o,i)/i)}return cachedStringRepeat("\t",CursorColumns.nextRenderTabStop(o,n)/n)}constructor(t,e,n){this._languageConfigurationService=n,this._opts=e,this._selection=t,this._selectionId=null,this._useLastEditRangeForCursorEndPosition=!1,this._selectionStartColumnStaysPut=!1}_addEditOperation(t,e,n){this._useLastEditRangeForCursorEndPosition?t.addTrackedEditOperation(e,n):t.addEditOperation(e,n)}getEditOperations(e,n){const i=this._selection.startLineNumber;let s=this._selection.endLineNumber;1===this._selection.endColumn&&i!==s&&(s-=1);const{tabSize:o,indentSize:r,insertSpaces:a}=this._opts,c=i===s;if(this._opts.useTabStops){this._selection.isEmpty()&&/^\s*$/.test(e.getLineContent(i))&&(this._useLastEditRangeForCursorEndPosition=!0);let u=0,l=0;for(let h=i;h<=s;h++,u=l){l=0;const s=e.getLineContent(h);let d,m=strings.firstNonWhitespaceIndex(s);if((!this._opts.isUnshift||0!==s.length&&0!==m)&&(c||this._opts.isUnshift||0!==s.length)){if(-1===m&&(m=s.length),h>1&&CursorColumns.visibleColumnFromColumn(s,m+1,o)%r!=0&&e.tokenization.isCheapToTokenize(h-1)){const t=getEnterAction(this._opts.autoIndent,e,new Range(h-1,e.getLineMaxColumn(h-1),h-1,e.getLineMaxColumn(h-1)),this._languageConfigurationService);if(t){if(l=u,t.appendText)for(let e=0,n=t.appendText.length;e<n&&l<r&&32===t.appendText.charCodeAt(e);e++)l++;t.removeText&&(l=Math.max(0,l-t.removeText));for(let t=0;t<l&&0!==m&&32===s.charCodeAt(m-1);t++)m--}}this._opts.isUnshift&&0===m||(d=this._opts.isUnshift?t.unshiftIndent(s,m+1,o,r,a):t.shiftIndent(s,m+1,o,r,a),this._addEditOperation(n,new Range(h,1,h,m+1),d),h!==i||this._selection.isEmpty()||(this._selectionStartColumnStaysPut=this._selection.startColumn<=m+1))}}}else{!this._opts.isUnshift&&this._selection.isEmpty()&&0===e.getLineLength(i)&&(this._useLastEditRangeForCursorEndPosition=!0);const t=a?cachedStringRepeat(" ",r):"\t";for(let o=i;o<=s;o++){const s=e.getLineContent(o);let a=strings.firstNonWhitespaceIndex(s);if((!this._opts.isUnshift||0!==s.length&&0!==a)&&(c||this._opts.isUnshift||0!==s.length)&&(-1===a&&(a=s.length),!this._opts.isUnshift||0!==a))if(this._opts.isUnshift){a=Math.min(a,r);for(let t=0;t<a;t++)if(9===s.charCodeAt(t)){a=t+1;break}this._addEditOperation(n,new Range(o,1,o,a+1),"")}else this._addEditOperation(n,new Range(o,1,o,1),t),o!==i||this._selection.isEmpty()||(this._selectionStartColumnStaysPut=1===this._selection.startColumn)}}this._selectionId=n.trackSelection(this._selection)}computeCursorState(t,e){if(this._useLastEditRangeForCursorEndPosition){const t=e.getInverseEditOperations()[0];return new Selection(t.range.endLineNumber,t.range.endColumn,t.range.endLineNumber,t.range.endColumn)}const n=e.getTrackedSelection(this._selectionId);if(this._selectionStartColumnStaysPut){const t=this._selection.startColumn;return n.startColumn<=t?n:0===n.getDirection()?new Selection(n.startLineNumber,t,n.endLineNumber,n.endColumn):new Selection(n.endLineNumber,n.endColumn,n.startLineNumber,t)}return n}};ShiftCommand=__decorate([__param(2,ILanguageConfigurationService)],ShiftCommand);export{ShiftCommand};