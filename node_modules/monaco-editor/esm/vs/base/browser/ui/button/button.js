import{addDisposableListener,EventHelper,EventType,reset,trackFocus}from"../../dom.js";import{StandardKeyboardEvent}from"../../keyboardEvent.js";import{EventType as TouchEventType,Gesture}from"../../touch.js";import{renderLabelWithIcons}from"../iconLabel/iconLabels.js";import{Color}from"../../../common/color.js";import{Emitter}from"../../../common/event.js";import{Disposable}from"../../../common/lifecycle.js";import"./button.css";export const unthemedButtonStyles={buttonBackground:"#0E639C",buttonHoverBackground:"#006BB3",buttonSeparator:Color.white.toString(),buttonForeground:Color.white.toString(),buttonBorder:void 0,buttonSecondaryBackground:void 0,buttonSecondaryForeground:void 0,buttonSecondaryHoverBackground:void 0};export class Button extends Disposable{get onDidClick(){return this._onDidClick.event}constructor(t,e){super(),this._onDidClick=this._register(new Emitter),this.options=e,this._element=document.createElement("a"),this._element.classList.add("monaco-button"),this._element.tabIndex=0,this._element.setAttribute("role","button");const s=e.secondary?e.buttonSecondaryBackground:e.buttonBackground,o=e.secondary?e.buttonSecondaryForeground:e.buttonForeground;this._element.style.color=o||"",this._element.style.backgroundColor=s||"",e.supportShortLabel&&(this._labelShortElement=document.createElement("div"),this._labelShortElement.classList.add("monaco-button-label-short"),this._element.appendChild(this._labelShortElement),this._labelElement=document.createElement("div"),this._labelElement.classList.add("monaco-button-label"),this._element.appendChild(this._labelElement),this._element.classList.add("monaco-text-button-with-short-label")),t.appendChild(this._element),this._register(Gesture.addTarget(this._element)),[EventType.CLICK,TouchEventType.Tap].forEach((t=>{this._register(addDisposableListener(this._element,t,(t=>{this.enabled?this._onDidClick.fire(t):EventHelper.stop(t)})))})),this._register(addDisposableListener(this._element,EventType.KEY_DOWN,(t=>{const e=new StandardKeyboardEvent(t);let s=!1;this.enabled&&(e.equals(3)||e.equals(10))?(this._onDidClick.fire(t),s=!0):e.equals(9)&&(this._element.blur(),s=!0),s&&EventHelper.stop(e,!0)}))),this._register(addDisposableListener(this._element,EventType.MOUSE_OVER,(t=>{this._element.classList.contains("disabled")||this.updateBackground(!0)}))),this._register(addDisposableListener(this._element,EventType.MOUSE_OUT,(t=>{this.updateBackground(!1)}))),this.focusTracker=this._register(trackFocus(this._element)),this._register(this.focusTracker.onDidFocus((()=>{this.enabled&&this.updateBackground(!0)}))),this._register(this.focusTracker.onDidBlur((()=>{this.enabled&&this.updateBackground(!1)})))}getContentElements(t){const e=[];for(let s of renderLabelWithIcons(t))if("string"==typeof s){if(s=s.trim(),""===s)continue;const t=document.createElement("span");t.textContent=s,e.push(t)}else e.push(s);return e}updateBackground(t){let e;e=this.options.secondary?t?this.options.buttonSecondaryHoverBackground:this.options.buttonSecondaryBackground:t?this.options.buttonHoverBackground:this.options.buttonBackground,e&&(this._element.style.backgroundColor=e)}get element(){return this._element}set label(t){this._element.classList.add("monaco-text-button");const e=this.options.supportShortLabel?this._labelElement:this._element;this.options.supportIcons?reset(e,...this.getContentElements(t)):e.textContent=t,"string"==typeof this.options.title?this._element.title=this.options.title:this.options.title&&(this._element.title=t)}set enabled(t){t?(this._element.classList.remove("disabled"),this._element.setAttribute("aria-disabled",String(!1)),this._element.tabIndex=0):(this._element.classList.add("disabled"),this._element.setAttribute("aria-disabled",String(!0)))}get enabled(){return!this._element.classList.contains("disabled")}}