var __awaiter=this&&this.__awaiter||function(i,t,n,e){return new(n||(n=Promise))((function(o,s){function r(i){try{a(e.next(i))}catch(i){s(i)}}function c(i){try{a(e.throw(i))}catch(i){s(i)}}function a(i){var t;i.done?o(i.value):(t=i.value,t instanceof n?t:new n((function(i){i(t)}))).then(r,c)}a((e=e.apply(i,t||[])).next())}))};import{ActionBar}from"../actionbar/actionbar.js";import{DropdownMenuActionViewItem}from"../dropdown/dropdownActionViewItem.js";import{Action,SubmenuAction}from"../../../common/actions.js";import{Codicon}from"../../../common/codicons.js";import{ThemeIcon}from"../../../common/themables.js";import{EventMultiplexer}from"../../../common/event.js";import{Disposable,DisposableStore}from"../../../common/lifecycle.js";import{withNullAsUndefined}from"../../../common/types.js";import"./toolbar.css";import*as nls from"../../../../nls.js";export class ToolBar extends Disposable{constructor(i,t,n={orientation:0}){super(),this.submenuActionViewItems=[],this.hasSecondaryActions=!1,this._onDidChangeDropdownVisibility=this._register(new EventMultiplexer),this.onDidChangeDropdownVisibility=this._onDidChangeDropdownVisibility.event,this.disposables=new DisposableStore,this.options=n,this.lookupKeybindings="function"==typeof this.options.getKeyBinding,this.toggleMenuAction=this._register(new ToggleMenuAction((()=>{var i;return null===(i=this.toggleMenuActionViewItem)||void 0===i?void 0:i.show()}),n.toggleMenuTitle)),this.element=document.createElement("div"),this.element.className="monaco-toolbar",i.appendChild(this.element),this.actionBar=this._register(new ActionBar(this.element,{orientation:n.orientation,ariaLabel:n.ariaLabel,actionRunner:n.actionRunner,allowContextMenu:n.allowContextMenu,actionViewItemProvider:(i,e)=>{var o;if(i.id===ToggleMenuAction.ID)return this.toggleMenuActionViewItem=new DropdownMenuActionViewItem(i,i.menuActions,t,{actionViewItemProvider:this.options.actionViewItemProvider,actionRunner:this.actionRunner,keybindingProvider:this.options.getKeyBinding,classNames:ThemeIcon.asClassNameArray(null!==(o=n.moreIcon)&&void 0!==o?o:Codicon.toolBarMore),anchorAlignmentProvider:this.options.anchorAlignmentProvider,menuAsChild:!!this.options.renderDropdownAsChildElement}),this.toggleMenuActionViewItem.setActionContext(this.actionBar.context),this.disposables.add(this._onDidChangeDropdownVisibility.add(this.toggleMenuActionViewItem.onDidChangeVisibility)),this.toggleMenuActionViewItem;if(n.actionViewItemProvider){const t=n.actionViewItemProvider(i,e);if(t)return t}if(i instanceof SubmenuAction){const n=new DropdownMenuActionViewItem(i,i.actions,t,{actionViewItemProvider:this.options.actionViewItemProvider,actionRunner:this.actionRunner,keybindingProvider:this.options.getKeyBinding,classNames:i.class,anchorAlignmentProvider:this.options.anchorAlignmentProvider,menuAsChild:!!this.options.renderDropdownAsChildElement});return n.setActionContext(this.actionBar.context),this.submenuActionViewItems.push(n),this.disposables.add(this._onDidChangeDropdownVisibility.add(n.onDidChangeVisibility)),n}}}))}set actionRunner(i){this.actionBar.actionRunner=i}get actionRunner(){return this.actionBar.actionRunner}getElement(){return this.element}getItemAction(i){return this.actionBar.getAction(i)}setActions(i,t){this.clear();const n=i?i.slice(0):[];this.hasSecondaryActions=!!(t&&t.length>0),this.hasSecondaryActions&&t&&(this.toggleMenuAction.menuActions=t.slice(0),n.push(this.toggleMenuAction)),n.forEach((i=>{this.actionBar.push(i,{icon:!0,label:!1,keybinding:this.getKeybindingLabel(i)})}))}getKeybindingLabel(i){var t,n;const e=this.lookupKeybindings?null===(n=(t=this.options).getKeyBinding)||void 0===n?void 0:n.call(t,i):void 0;return withNullAsUndefined(null==e?void 0:e.getLabel())}clear(){this.submenuActionViewItems=[],this.disposables.clear(),this.actionBar.clear()}dispose(){this.clear(),super.dispose()}}class ToggleMenuAction extends Action{constructor(i,t){t=t||nls.localize("moreActions","More Actions..."),super(ToggleMenuAction.ID,t,void 0,!0),this._menuActions=[],this.toggleDropdownMenu=i}run(){return __awaiter(this,void 0,void 0,(function*(){this.toggleDropdownMenu()}))}get menuActions(){return this._menuActions}set menuActions(i){this._menuActions=i}}ToggleMenuAction.ID="toolbar.toggle.more";export{ToggleMenuAction};