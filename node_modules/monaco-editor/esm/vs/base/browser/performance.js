export var inputLatency;!function(e){const n={total:0,min:Number.MAX_VALUE,max:0},r=Object.assign({},n),t=Object.assign({},n),a=Object.assign({},n);let o=0;const c={keydown:0,input:0,render:0};function u(){1===c.keydown&&(performance.mark("keydown/end"),c.keydown=2)}function i(){performance.mark("input/start"),c.input=1,s()}function p(){1===c.input&&(performance.mark("input/end"),c.input=2)}function m(){1===c.render&&(performance.mark("render/end"),c.render=2)}function s(){setTimeout(d)}function d(){2===c.keydown&&2===c.input&&2===c.render&&(performance.mark("inputlatency/end"),performance.measure("keydown","keydown/start","keydown/end"),performance.measure("input","input/start","input/end"),performance.measure("render","render/start","render/end"),performance.measure("inputlatency","inputlatency/start","inputlatency/end"),f("keydown",n),f("input",r),f("render",t),f("inputlatency",a),o++,performance.clearMarks("keydown/start"),performance.clearMarks("keydown/end"),performance.clearMarks("input/start"),performance.clearMarks("input/end"),performance.clearMarks("render/start"),performance.clearMarks("render/end"),performance.clearMarks("inputlatency/start"),performance.clearMarks("inputlatency/end"),performance.clearMeasures("keydown"),performance.clearMeasures("input"),performance.clearMeasures("render"),performance.clearMeasures("inputlatency"),c.keydown=0,c.input=0,c.render=0)}function f(e,n){const r=performance.getEntriesByName(e)[0].duration;n.total+=r,n.min=Math.min(n.min,r),n.max=Math.max(n.max,r)}function k(e){return{average:e.total/o,max:e.max,min:e.min}}function y(e){e.total=0,e.min=Number.MAX_VALUE,e.max=0}e.onKeyDown=function(){d(),performance.mark("inputlatency/start"),performance.mark("keydown/start"),c.keydown=1,queueMicrotask(u)},e.onBeforeInput=i,e.onInput=function(){0===c.input&&i(),queueMicrotask(p)},e.onKeyUp=function(){d()},e.onSelectionChange=function(){d()},e.onRenderStart=function(){2===c.keydown&&2===c.input&&0===c.render&&(performance.mark("render/start"),c.render=1,queueMicrotask(m),s())},e.getAndClearMeasurements=function(){if(0===o)return;const e={keydown:k(n),input:k(r),render:k(t),total:k(a),sampleCount:o};return y(n),y(r),y(t),y(a),o=0,e}}(inputLatency||(inputLatency={}));