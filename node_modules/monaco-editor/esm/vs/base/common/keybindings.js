import{illegalArgument}from"./errors.js";export function decodeKeybinding(e,t){if(0===e)return null;const i=(65535&e)>>>0,s=(4294901760&e)>>>16;return new Keybinding(0!==s?[createSimpleKeybinding(i,t),createSimpleKeybinding(s,t)]:[createSimpleKeybinding(i,t)])}export function createSimpleKeybinding(e,t){const i=!!(2048&e),s=!!(256&e);return new KeyCodeChord(2===t?s:i,!!(1024&e),!!(512&e),2===t?i:s,255&e)}export class KeyCodeChord{constructor(e,t,i,s,h){this.ctrlKey=e,this.shiftKey=t,this.altKey=i,this.metaKey=s,this.keyCode=h}equals(e){return e instanceof KeyCodeChord&&this.ctrlKey===e.ctrlKey&&this.shiftKey===e.shiftKey&&this.altKey===e.altKey&&this.metaKey===e.metaKey&&this.keyCode===e.keyCode}isModifierKey(){return 0===this.keyCode||5===this.keyCode||57===this.keyCode||6===this.keyCode||4===this.keyCode}isDuplicateModifierCase(){return this.ctrlKey&&5===this.keyCode||this.shiftKey&&4===this.keyCode||this.altKey&&6===this.keyCode||this.metaKey&&57===this.keyCode}}export class ScanCodeChord{constructor(e,t,i,s,h){this.ctrlKey=e,this.shiftKey=t,this.altKey=i,this.metaKey=s,this.scanCode=h}isDuplicateModifierCase(){return this.ctrlKey&&(157===this.scanCode||161===this.scanCode)||this.shiftKey&&(158===this.scanCode||162===this.scanCode)||this.altKey&&(159===this.scanCode||163===this.scanCode)||this.metaKey&&(160===this.scanCode||164===this.scanCode)}}export class Keybinding{constructor(e){if(0===e.length)throw illegalArgument("chords");this.chords=e}}export class ResolvedChord{constructor(e,t,i,s,h,o){this.ctrlKey=e,this.shiftKey=t,this.altKey=i,this.metaKey=s,this.keyLabel=h,this.keyAriaLabel=o}}export class ResolvedKeybinding{}