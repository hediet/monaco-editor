export class LRUCachedFunction{constructor(t){this.fn=t,this.lastCache=void 0,this.lastArgKey=void 0}get(t){const s=JSON.stringify(t);return this.lastArgKey!==s&&(this.lastArgKey=s,this.lastCache=this.fn(t)),this.lastCache}}export class CachedFunction{get cachedValues(){return this._map}constructor(t){this.fn=t,this._map=new Map}get(t){if(this._map.has(t))return this._map.get(t);const s=this.fn(t);return this._map.set(t,s),s}}