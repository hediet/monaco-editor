export var Iterable;!function(t){function n(t){return t&&"object"==typeof t&&"function"==typeof t[Symbol.iterator]}t.is=n;const o=Object.freeze([]);function*e(t){yield t}t.empty=function(){return o},t.single=e,t.wrap=function(t){return n(t)?t:e(t)},t.from=function(t){return t||o},t.isEmpty=function(t){return!t||!0===t[Symbol.iterator]().next().done},t.first=function(t){return t[Symbol.iterator]().next().value},t.some=function(t,n){for(const o of t)if(n(o))return!0;return!1},t.find=function(t,n){for(const o of t)if(n(o))return o},t.filter=function*(t,n){for(const o of t)n(o)&&(yield o)},t.map=function*(t,n){let o=0;for(const e of t)yield n(e,o++)},t.concat=function*(...t){for(const n of t)for(const t of n)yield t},t.reduce=function(t,n,o){let e=o;for(const o of t)e=n(e,o);return e},t.slice=function*(t,n,o=t.length){for(n<0&&(n+=t.length),o<0?o+=t.length:o>t.length&&(o=t.length);n<o;n++)yield t[n]},t.consume=function(n,o=Number.POSITIVE_INFINITY){const e=[];if(0===o)return[e,n];const r=n[Symbol.iterator]();for(let n=0;n<o;n++){const n=r.next();if(n.done)return[e,t.empty()];e.push(n.value)}return[e,{[Symbol.iterator]:()=>r}]}}(Iterable||(Iterable={}));