import*as strings from"./strings.js";export function hash(t){return doHash(t,0)}export function doHash(t,e){switch(typeof t){case"object":return null===t?numberHash(349,e):Array.isArray(t)?arrayHash(t,e):objectHash(t,e);case"string":return stringHash(t,e);case"boolean":return booleanHash(t,e);case"number":return numberHash(t,e);case"undefined":return numberHash(937,e);default:return numberHash(617,e)}}export function numberHash(t,e){return(e<<5)-e+t|0}function booleanHash(t,e){return numberHash(t?433:863,e)}export function stringHash(t,e){e=numberHash(149417,e);for(let s=0,i=t.length;s<i;s++)e=numberHash(t.charCodeAt(s),e);return e}function arrayHash(t,e){return e=numberHash(104579,e),t.reduce(((t,e)=>doHash(e,t)),e)}function objectHash(t,e){return e=numberHash(181387,e),Object.keys(t).sort().reduce(((e,s)=>(e=stringHash(s,e),doHash(t[s],e))),e)}function leftRotate(t,e,s=32){const i=s-e;return(t<<e|(~((1<<i)-1)&t)>>>i)>>>0}function fill(t,e=0,s=t.byteLength,i=0){for(let r=0;r<s;r++)t[e+r]=i}function leftPad(t,e,s="0"){for(;t.length<e;)t=s+t;return t}export function toHexString(t,e=32){return t instanceof ArrayBuffer?Array.from(new Uint8Array(t)).map((t=>t.toString(16).padStart(2,"0"))).join(""):leftPad((t>>>0).toString(16),e/4)}class StringSHA1{constructor(){this._h0=1732584193,this._h1=4023233417,this._h2=2562383102,this._h3=271733878,this._h4=3285377520,this._buff=new Uint8Array(67),this._buffDV=new DataView(this._buff.buffer),this._buffLen=0,this._totalLen=0,this._leftoverHighSurrogate=0,this._finished=!1}update(t){const e=t.length;if(0===e)return;const s=this._buff;let i,r,h=this._buffLen,n=this._leftoverHighSurrogate;for(0!==n?(i=n,r=-1,n=0):(i=t.charCodeAt(0),r=0);;){let o=i;if(strings.isHighSurrogate(i)){if(!(r+1<e)){n=i;break}{const e=t.charCodeAt(r+1);strings.isLowSurrogate(e)?(r++,o=strings.computeCodePoint(i,e)):o=65533}}else strings.isLowSurrogate(i)&&(o=65533);if(h=this._push(s,h,o),r++,!(r<e))break;i=t.charCodeAt(r)}this._buffLen=h,this._leftoverHighSurrogate=n}_push(t,e,s){return s<128?t[e++]=s:s<2048?(t[e++]=192|(1984&s)>>>6,t[e++]=128|(63&s)>>>0):s<65536?(t[e++]=224|(61440&s)>>>12,t[e++]=128|(4032&s)>>>6,t[e++]=128|(63&s)>>>0):(t[e++]=240|(1835008&s)>>>18,t[e++]=128|(258048&s)>>>12,t[e++]=128|(4032&s)>>>6,t[e++]=128|(63&s)>>>0),e>=64&&(this._step(),e-=64,this._totalLen+=64,t[0]=t[64],t[1]=t[65],t[2]=t[66]),e}digest(){return this._finished||(this._finished=!0,this._leftoverHighSurrogate&&(this._leftoverHighSurrogate=0,this._buffLen=this._push(this._buff,this._buffLen,65533)),this._totalLen+=this._buffLen,this._wrapUp()),toHexString(this._h0)+toHexString(this._h1)+toHexString(this._h2)+toHexString(this._h3)+toHexString(this._h4)}_wrapUp(){this._buff[this._buffLen++]=128,fill(this._buff,this._buffLen),this._buffLen>56&&(this._step(),fill(this._buff));const t=8*this._totalLen;this._buffDV.setUint32(56,Math.floor(t/4294967296),!1),this._buffDV.setUint32(60,t%4294967296,!1),this._step()}_step(){const t=StringSHA1._bigBlock32,e=this._buffDV;for(let s=0;s<64;s+=4)t.setUint32(s,e.getUint32(s,!1),!1);for(let e=64;e<320;e+=4)t.setUint32(e,leftRotate(t.getUint32(e-12,!1)^t.getUint32(e-32,!1)^t.getUint32(e-56,!1)^t.getUint32(e-64,!1),1),!1);let s,i,r,h=this._h0,n=this._h1,o=this._h2,f=this._h3,a=this._h4;for(let e=0;e<80;e++)e<20?(s=n&o|~n&f,i=1518500249):e<40?(s=n^o^f,i=1859775393):e<60?(s=n&o|n&f|o&f,i=2400959708):(s=n^o^f,i=3395469782),r=leftRotate(h,5)+s+a+i+t.getUint32(4*e,!1)&4294967295,a=f,f=o,o=leftRotate(n,30),n=h,h=r;this._h0=this._h0+h&4294967295,this._h1=this._h1+n&4294967295,this._h2=this._h2+o&4294967295,this._h3=this._h3+f&4294967295,this._h4=this._h4+a&4294967295}}StringSHA1._bigBlock32=new DataView(new ArrayBuffer(320));export{StringSHA1};