import*as dom from"../../../browser/dom.js";import{StandardKeyboardEvent}from"../../../browser/keyboardEvent.js";import{StandardMouseEvent}from"../../../browser/mouseEvent.js";import{FindInput}from"../../../browser/ui/findinput/findInput.js";import{Disposable}from"../../../common/lifecycle.js";import Severity from"../../../common/severity.js";import"./media/quickInput.css";const $=dom.$;export class QuickInputBox extends Disposable{constructor(t,e,n){super(),this.parent=t,this.onKeyDown=t=>dom.addDisposableListener(this.findInput.inputBox.inputElement,dom.EventType.KEY_DOWN,(e=>{t(new StandardKeyboardEvent(e))})),this.onMouseDown=t=>dom.addDisposableListener(this.findInput.inputBox.inputElement,dom.EventType.MOUSE_DOWN,(e=>{t(new StandardMouseEvent(e))})),this.onDidChange=t=>this.findInput.onDidChange(t),this.container=dom.append(this.parent,$(".quick-input-box")),this.findInput=this._register(new FindInput(this.container,void 0,{label:"",inputBoxStyles:e,toggleStyles:n}))}get value(){return this.findInput.getValue()}set value(t){this.findInput.setValue(t)}select(t=null){this.findInput.inputBox.select(t)}isSelectionAtEnd(){return this.findInput.inputBox.isSelectionAtEnd()}get placeholder(){return this.findInput.inputBox.inputElement.getAttribute("placeholder")||""}set placeholder(t){this.findInput.inputBox.setPlaceHolder(t)}get ariaLabel(){return this.findInput.inputBox.getAriaLabel()}set ariaLabel(t){this.findInput.inputBox.setAriaLabel(t)}get password(){return"password"===this.findInput.inputBox.inputElement.type}set password(t){this.findInput.inputBox.inputElement.type=t?"password":"text"}set enabled(t){this.findInput.inputBox.inputElement.toggleAttribute("readonly",!t)}set toggles(t){this.findInput.setAdditionalToggles(t)}setAttribute(t,e){this.findInput.inputBox.inputElement.setAttribute(t,e)}removeAttribute(t){this.findInput.inputBox.inputElement.removeAttribute(t)}showDecoration(t){t===Severity.Ignore?this.findInput.clearMessage():this.findInput.showMessage({type:t===Severity.Info?1:t===Severity.Warning?2:3,content:""})}stylesForType(t){return this.findInput.inputBox.stylesForType(t===Severity.Info?1:t===Severity.Warning?2:3)}setFocus(){this.findInput.focus()}layout(){this.findInput.inputBox.layout()}}