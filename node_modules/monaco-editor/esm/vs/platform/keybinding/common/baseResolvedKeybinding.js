import{illegalArgument}from"../../../base/common/errors.js";import{AriaLabelProvider,ElectronAcceleratorLabelProvider,UILabelProvider}from"../../../base/common/keybindingLabels.js";import{ResolvedKeybinding,ResolvedChord}from"../../../base/common/keybindings.js";export class BaseResolvedKeybinding extends ResolvedKeybinding{constructor(e,r){if(super(),0===r.length)throw illegalArgument("chords");this._os=e,this._chords=r}getLabel(){return UILabelProvider.toLabel(this._os,this._chords,(e=>this._getLabel(e)))}getAriaLabel(){return AriaLabelProvider.toLabel(this._os,this._chords,(e=>this._getAriaLabel(e)))}getElectronAccelerator(){return this._chords.length>1||this._chords[0].isDuplicateModifierCase()?null:ElectronAcceleratorLabelProvider.toLabel(this._os,this._chords,(e=>this._getElectronAccelerator(e)))}hasMultipleChords(){return this._chords.length>1}getChords(){return this._chords.map((e=>this._getChord(e)))}_getChord(e){return new ResolvedChord(e.ctrlKey,e.shiftKey,e.altKey,e.metaKey,this._getLabel(e),this._getAriaLabel(e))}getDispatchChords(){return this._chords.map((e=>this._getChordDispatch(e)))}getSingleModifierDispatchChords(){return this._chords.map((e=>this._getSingleModifierChordDispatch(e)))}}