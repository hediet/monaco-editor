import{Emitter}from"../../../base/common/event.js";import{Disposable}from"../../../base/common/lifecycle.js";import{createDecorator}from"../../instantiation/common/instantiation.js";export const ILogService=createDecorator("logService");export var LogLevel;!function(e){e[e.Off=0]="Off",e[e.Trace=1]="Trace",e[e.Debug=2]="Debug",e[e.Info=3]="Info",e[e.Warning=4]="Warning",e[e.Error=5]="Error"}(LogLevel||(LogLevel={}));export const DEFAULT_LOG_LEVEL=LogLevel.Info;export class AbstractLogger extends Disposable{constructor(){super(...arguments),this.level=DEFAULT_LOG_LEVEL,this._onDidChangeLogLevel=this._register(new Emitter),this.onDidChangeLogLevel=this._onDidChangeLogLevel.event}setLevel(e){this.level!==e&&(this.level=e,this._onDidChangeLogLevel.fire(this.level))}getLevel(){return this.level}checkLogLevel(e){return this.level!==LogLevel.Off&&this.level<=e}}export class ConsoleLogger extends AbstractLogger{constructor(e=DEFAULT_LOG_LEVEL){super(),this.setLevel(e)}trace(e,...o){this.checkLogLevel(LogLevel.Trace)&&console.log("%cTRACE","color: #888",e,...o)}debug(e,...o){this.checkLogLevel(LogLevel.Debug)&&console.log("%cDEBUG","background: #eee; color: #888",e,...o)}info(e,...o){this.checkLogLevel(LogLevel.Info)&&console.log("%c INFO","color: #33f",e,...o)}error(e,...o){this.checkLogLevel(LogLevel.Error)&&console.log("%c  ERR","color: #f33",e,...o)}dispose(){}}export class MultiplexLogger extends AbstractLogger{constructor(e){super(),this.loggers=e,e.length&&this.setLevel(e[0].getLevel())}setLevel(e){for(const o of this.loggers)o.setLevel(e);super.setLevel(e)}trace(e,...o){for(const r of this.loggers)r.trace(e,...o)}debug(e,...o){for(const r of this.loggers)r.debug(e,...o)}info(e,...o){for(const r of this.loggers)r.info(e,...o)}error(e,...o){for(const r of this.loggers)r.error(e,...o)}dispose(){for(const e of this.loggers)e.dispose()}}