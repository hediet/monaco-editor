var __decorate=this&&this.__decorate||function(e,t,r,i){var o,s=arguments.length,c=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(e,t,r,i);else for(var n=e.length-1;n>=0;n--)(o=e[n])&&(c=(s<3?o(c):s>3?o(t,r,c):o(t,r))||c);return s>3&&c&&Object.defineProperty(t,r,c),c},__param=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};import{CancellationToken}from"../../../base/common/cancellation.js";import{Emitter}from"../../../base/common/event.js";import{QuickInputController}from"../../../base/parts/quickinput/browser/quickInput.js";import{IAccessibilityService}from"../../accessibility/common/accessibility.js";import{IContextKeyService,RawContextKey}from"../../contextkey/common/contextkey.js";import{IInstantiationService}from"../../instantiation/common/instantiation.js";import{ILayoutService}from"../../layout/browser/layoutService.js";import{WorkbenchList}from"../../list/browser/listService.js";import{QuickAccessController}from"./quickAccess.js";import{defaultButtonStyles,defaultCountBadgeStyles,defaultInputBoxStyles,defaultKeybindingLabelStyles,defaultProgressBarStyles,defaultToggleStyles,getListStyles}from"../../theme/browser/defaultStyles.js";import{activeContrastBorder,asCssVariable,pickerGroupBorder,pickerGroupForeground,quickInputBackground,quickInputForeground,quickInputListFocusBackground,quickInputListFocusForeground,quickInputListFocusIconForeground,quickInputTitleBackground,widgetBorder,widgetShadow}from"../../theme/common/colorRegistry.js";import{IThemeService,Themable}from"../../theme/common/themeService.js";let QuickInputService=class extends Themable{get controller(){return this._controller||(this._controller=this._register(this.createController())),this._controller}get hasController(){return!!this._controller}get quickAccess(){return this._quickAccess||(this._quickAccess=this._register(this.instantiationService.createInstance(QuickAccessController))),this._quickAccess}constructor(e,t,r,i,o){super(r),this.instantiationService=e,this.contextKeyService=t,this.accessibilityService=i,this.layoutService=o,this._onShow=this._register(new Emitter),this._onHide=this._register(new Emitter),this.contexts=new Map}createController(e=this.layoutService,t){const r={idPrefix:"quickInput_",container:e.container,ignoreFocusOut:()=>!1,isScreenReaderOptimized:()=>this.accessibilityService.isScreenReaderOptimized(),backKeybindingLabel:()=>{},setContextKey:e=>this.setContextKey(e),returnFocus:()=>e.focus(),createList:(e,t,r,i,o)=>this.instantiationService.createInstance(WorkbenchList,e,t,r,i,o),styles:this.computeStyles()},i=this._register(new QuickInputController(Object.assign(Object.assign({},r),t)));return i.layout(e.dimension,e.offset.quickPickTop),this._register(e.onDidLayout((t=>i.layout(t,e.offset.quickPickTop)))),this._register(i.onShow((()=>{this.resetContextKeys(),this._onShow.fire()}))),this._register(i.onHide((()=>{this.resetContextKeys(),this._onHide.fire()}))),i}setContextKey(e){let t;e&&(t=this.contexts.get(e),t||(t=new RawContextKey(e,!1).bindTo(this.contextKeyService),this.contexts.set(e,t))),t&&t.get()||(this.resetContextKeys(),null==t||t.set(!0))}resetContextKeys(){this.contexts.forEach((e=>{e.get()&&e.reset()}))}pick(e,t={},r=CancellationToken.None){return this.controller.pick(e,t,r)}createQuickPick(){return this.controller.createQuickPick()}createInputBox(){return this.controller.createInputBox()}updateStyles(){this.hasController&&this.controller.applyStyles(this.computeStyles())}computeStyles(){return{widget:{quickInputBackground:asCssVariable(quickInputBackground),quickInputForeground:asCssVariable(quickInputForeground),quickInputTitleBackground:asCssVariable(quickInputTitleBackground),widgetBorder:asCssVariable(widgetBorder),widgetShadow:asCssVariable(widgetShadow)},inputBox:defaultInputBoxStyles,toggle:defaultToggleStyles,countBadge:defaultCountBadgeStyles,button:defaultButtonStyles,progressBar:defaultProgressBarStyles,keybindingLabel:defaultKeybindingLabelStyles,list:getListStyles({listBackground:quickInputBackground,listFocusBackground:quickInputListFocusBackground,listFocusForeground:quickInputListFocusForeground,listInactiveFocusForeground:quickInputListFocusForeground,listInactiveSelectionIconForeground:quickInputListFocusIconForeground,listInactiveFocusBackground:quickInputListFocusBackground,listFocusOutline:activeContrastBorder,listInactiveFocusOutline:activeContrastBorder}),pickerGroup:{pickerGroupBorder:asCssVariable(pickerGroupBorder),pickerGroupForeground:asCssVariable(pickerGroupForeground)}}}};QuickInputService=__decorate([__param(0,IInstantiationService),__param(1,IContextKeyService),__param(2,IThemeService),__param(3,IAccessibilityService),__param(4,ILayoutService)],QuickInputService);export{QuickInputService};