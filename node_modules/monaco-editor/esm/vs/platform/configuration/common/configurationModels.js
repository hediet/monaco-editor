import*as arrays from"../../../base/common/arrays.js";import{ResourceMap}from"../../../base/common/map.js";import*as objects from"../../../base/common/objects.js";import*as types from"../../../base/common/types.js";import{URI}from"../../../base/common/uri.js";import{addToValueTree,getConfigurationValue,removeFromValueTree,toValuesTree}from"./configuration.js";import{Extensions,overrideIdentifiersFromKey,OVERRIDE_PROPERTY_REGEX}from"./configurationRegistry.js";import{Registry}from"../../registry/common/platform.js";function freeze(e){return Object.isFrozen(e)?e:objects.deepFreeze(e)}export class ConfigurationModel{constructor(e={},t=[],o=[],i){this._contents=e,this._keys=t,this._overrides=o,this.raw=i,this.overrideConfigurations=new Map}get rawConfiguration(){var e;if(!this._rawConfiguration)if(null===(e=this.raw)||void 0===e?void 0:e.length){const e=this.raw.map((e=>{if(e instanceof ConfigurationModel)return e;const t=new ConfigurationModelParser("");return t.parseRaw(e),t.configurationModel}));this._rawConfiguration=e.reduce(((e,t)=>t===e?t:e.merge(t)),e[0])}else this._rawConfiguration=this;return this._rawConfiguration}get contents(){return this._contents}get overrides(){return this._overrides}get keys(){return this._keys}isEmpty(){return 0===this._keys.length&&0===Object.keys(this._contents).length&&0===this._overrides.length}getValue(e){return e?getConfigurationValue(this.contents,e):this.contents}inspect(e,t){const o=this.rawConfiguration.getValue(e);return{value:o,override:t?this.rawConfiguration.getOverrideValue(e,t):void 0,merged:t?this.rawConfiguration.override(t).getValue(e):o}}getOverrideValue(e,t){const o=this.getContentsForOverrideIdentifer(t);return o?e?getConfigurationValue(o,e):o:void 0}override(e){let t=this.overrideConfigurations.get(e);return t||(t=this.createOverrideConfigurationModel(e),this.overrideConfigurations.set(e,t)),t}merge(...e){var t,o;const i=objects.deepClone(this.contents),r=objects.deepClone(this.overrides),s=[...this.keys],n=(null===(t=this.raw)||void 0===t?void 0:t.length)?[...this.raw]:[this];for(const t of e)if(n.push(...(null===(o=t.raw)||void 0===o?void 0:o.length)?t.raw:[t]),!t.isEmpty()){this.mergeContents(i,t.contents);for(const e of t.overrides){const[t]=r.filter((t=>arrays.equals(t.identifiers,e.identifiers)));t?(this.mergeContents(t.contents,e.contents),t.keys.push(...e.keys),t.keys=arrays.distinct(t.keys)):r.push(objects.deepClone(e))}for(const e of t.keys)-1===s.indexOf(e)&&s.push(e)}return new ConfigurationModel(i,s,r,n.every((e=>e instanceof ConfigurationModel))?void 0:n)}createOverrideConfigurationModel(e){const t=this.getContentsForOverrideIdentifer(e);if(!t||"object"!=typeof t||!Object.keys(t).length)return this;const o={};for(const e of arrays.distinct([...Object.keys(this.contents),...Object.keys(t)])){let i=this.contents[e];const r=t[e];r&&("object"==typeof i&&"object"==typeof r?(i=objects.deepClone(i),this.mergeContents(i,r)):i=r),o[e]=i}return new ConfigurationModel(o,this.keys,this.overrides)}mergeContents(e,t){for(const o of Object.keys(t))o in e&&types.isObject(e[o])&&types.isObject(t[o])?this.mergeContents(e[o],t[o]):e[o]=objects.deepClone(t[o])}getContentsForOverrideIdentifer(e){let t=null,o=null;const i=e=>{e&&(o?this.mergeContents(o,e):o=objects.deepClone(e))};for(const o of this.overrides)arrays.equals(o.identifiers,[e])?t=o.contents:o.identifiers.includes(e)&&i(o.contents);return i(t),o}toJSON(){return{contents:this.contents,overrides:this.overrides,keys:this.keys}}addValue(e,t){this.updateValue(e,t,!0)}setValue(e,t){this.updateValue(e,t,!1)}removeValue(e){const t=this.keys.indexOf(e);-1!==t&&(this.keys.splice(t,1),removeFromValueTree(this.contents,e),OVERRIDE_PROPERTY_REGEX.test(e)&&this.overrides.splice(this.overrides.findIndex((t=>arrays.equals(t.identifiers,overrideIdentifiersFromKey(e)))),1))}updateValue(e,t,o){addToValueTree(this.contents,e,t,(e=>console.error(e))),(o=o||-1===this.keys.indexOf(e))&&this.keys.push(e),OVERRIDE_PROPERTY_REGEX.test(e)&&this.overrides.push({identifiers:overrideIdentifiersFromKey(e),keys:Object.keys(this.contents[e]),contents:toValuesTree(this.contents[e],(e=>console.error(e)))})}}export class ConfigurationModelParser{constructor(e){this._name=e,this._raw=null,this._configurationModel=null,this._restrictedConfigurations=[]}get configurationModel(){return this._configurationModel||new ConfigurationModel}parseRaw(e,t){this._raw=e;const{contents:o,keys:i,overrides:r,restricted:s,hasExcludedProperties:n}=this.doParseRaw(e,t);this._configurationModel=new ConfigurationModel(o,i,r,n?[e]:void 0),this._restrictedConfigurations=s||[]}doParseRaw(e,t){const o=Registry.as(Extensions.Configuration).getConfigurationProperties(),i=this.filter(e,o,!0,t);return e=i.raw,{contents:toValuesTree(e,(e=>console.error(`Conflict in settings file ${this._name}: ${e}`))),keys:Object.keys(e),overrides:this.toOverrides(e,(e=>console.error(`Conflict in settings file ${this._name}: ${e}`))),restricted:i.restricted,hasExcludedProperties:i.hasExcludedProperties}}filter(e,t,o,i){let r=!1;if(!(null==i?void 0:i.scopes)&&!(null==i?void 0:i.skipRestricted))return{raw:e,restricted:[],hasExcludedProperties:r};const s={},n=[];for(const a in e)if(OVERRIDE_PROPERTY_REGEX.test(a)&&o){const o=this.filter(e[a],t,!1,i);s[a]=o.raw,r=r||o.hasExcludedProperties,n.push(...o.restricted)}else{const o=t[a],u=o?void 0!==o.scope?o.scope:3:void 0;(null==o?void 0:o.restricted)&&n.push(a),void 0!==u&&void 0!==i.scopes&&!i.scopes.includes(u)||i.skipRestricted&&(null==o?void 0:o.restricted)?r=!0:s[a]=e[a]}return{raw:s,restricted:n,hasExcludedProperties:r}}toOverrides(e,t){const o=[];for(const i of Object.keys(e))if(OVERRIDE_PROPERTY_REGEX.test(i)){const r={};for(const t in e[i])r[t]=e[i][t];o.push({identifiers:overrideIdentifiersFromKey(i),keys:Object.keys(r),contents:toValuesTree(r,t)})}return o}}class ConfigurationInspectValue{constructor(e,t,o,i,r,s,n,a,u,f,d,c,l){this.key=e,this.overrides=t,this._value=o,this.overrideIdentifiers=i,this.defaultConfiguration=r,this.policyConfiguration=s,this.applicationConfiguration=n,this.userConfiguration=a,this.localUserConfiguration=u,this.remoteUserConfiguration=f,this.workspaceConfiguration=d,this.folderConfigurationModel=c,this.memoryConfigurationModel=l}inspect(e,t,o){const i=e.inspect(t,o);return{get value(){return freeze(i.value)},get override(){return freeze(i.override)},get merged(){return freeze(i.merged)}}}get userInspectValue(){return this._userInspectValue||(this._userInspectValue=this.inspect(this.userConfiguration,this.key,this.overrides.overrideIdentifier)),this._userInspectValue}get user(){return void 0!==this.userInspectValue.value||void 0!==this.userInspectValue.override?{value:this.userInspectValue.value,override:this.userInspectValue.override}:void 0}}export class Configuration{constructor(e,t,o,i,r=new ConfigurationModel,s=new ConfigurationModel,n=new ResourceMap,a=new ConfigurationModel,u=new ResourceMap){this._defaultConfiguration=e,this._policyConfiguration=t,this._applicationConfiguration=o,this._localUserConfiguration=i,this._remoteUserConfiguration=r,this._workspaceConfiguration=s,this._folderConfigurations=n,this._memoryConfiguration=a,this._memoryConfigurationByResource=u,this._workspaceConsolidatedConfiguration=null,this._foldersConsolidatedConfigurations=new ResourceMap,this._userConfiguration=null}getValue(e,t,o){return this.getConsolidatedConfigurationModel(e,t,o).getValue(e)}updateValue(e,t,o={}){let i;o.resource?(i=this._memoryConfigurationByResource.get(o.resource),i||(i=new ConfigurationModel,this._memoryConfigurationByResource.set(o.resource,i))):i=this._memoryConfiguration,void 0===t?i.removeValue(e):i.setValue(e,t),o.resource||(this._workspaceConsolidatedConfiguration=null)}inspect(e,t,o){const i=this.getConsolidatedConfigurationModel(e,t,o),r=this.getFolderConfigurationModelForResource(t.resource,o),s=t.resource&&this._memoryConfigurationByResource.get(t.resource)||this._memoryConfiguration,n=new Set;for(const t of i.overrides)for(const o of t.identifiers)void 0!==i.getOverrideValue(e,o)&&n.add(o);return new ConfigurationInspectValue(e,t,i.getValue(e),n.size?[...n]:void 0,this._defaultConfiguration,this._policyConfiguration.isEmpty()?void 0:this._policyConfiguration,this.applicationConfiguration.isEmpty()?void 0:this.applicationConfiguration,this.userConfiguration,this.localUserConfiguration,this.remoteUserConfiguration,o?this._workspaceConfiguration:void 0,r||void 0,s)}get applicationConfiguration(){return this._applicationConfiguration}get userConfiguration(){return this._userConfiguration||(this._userConfiguration=this._remoteUserConfiguration.isEmpty()?this._localUserConfiguration:this._localUserConfiguration.merge(this._remoteUserConfiguration)),this._userConfiguration}get localUserConfiguration(){return this._localUserConfiguration}get remoteUserConfiguration(){return this._remoteUserConfiguration}getConsolidatedConfigurationModel(e,t,o){let i=this.getConsolidatedConfigurationModelForResource(t,o);return t.overrideIdentifier&&(i=i.override(t.overrideIdentifier)),this._policyConfiguration.isEmpty()||void 0===this._policyConfiguration.getValue(e)||(i=i.merge(this._policyConfiguration)),i}getConsolidatedConfigurationModelForResource({resource:e},t){let o=this.getWorkspaceConsolidatedConfiguration();if(t&&e){const i=t.getFolder(e);i&&(o=this.getFolderConsolidatedConfiguration(i.uri)||o);const r=this._memoryConfigurationByResource.get(e);r&&(o=o.merge(r))}return o}getWorkspaceConsolidatedConfiguration(){return this._workspaceConsolidatedConfiguration||(this._workspaceConsolidatedConfiguration=this._defaultConfiguration.merge(this.applicationConfiguration,this.userConfiguration,this._workspaceConfiguration,this._memoryConfiguration)),this._workspaceConsolidatedConfiguration}getFolderConsolidatedConfiguration(e){let t=this._foldersConsolidatedConfigurations.get(e);if(!t){const o=this.getWorkspaceConsolidatedConfiguration(),i=this._folderConfigurations.get(e);i?(t=o.merge(i),this._foldersConsolidatedConfigurations.set(e,t)):t=o}return t}getFolderConfigurationModelForResource(e,t){if(t&&e){const o=t.getFolder(e);if(o)return this._folderConfigurations.get(o.uri)}}toData(){return{defaults:{contents:this._defaultConfiguration.contents,overrides:this._defaultConfiguration.overrides,keys:this._defaultConfiguration.keys},policy:{contents:this._policyConfiguration.contents,overrides:this._policyConfiguration.overrides,keys:this._policyConfiguration.keys},application:{contents:this.applicationConfiguration.contents,overrides:this.applicationConfiguration.overrides,keys:this.applicationConfiguration.keys},user:{contents:this.userConfiguration.contents,overrides:this.userConfiguration.overrides,keys:this.userConfiguration.keys},workspace:{contents:this._workspaceConfiguration.contents,overrides:this._workspaceConfiguration.overrides,keys:this._workspaceConfiguration.keys},folders:[...this._folderConfigurations.keys()].reduce(((e,t)=>{const{contents:o,overrides:i,keys:r}=this._folderConfigurations.get(t);return e.push([t,{contents:o,overrides:i,keys:r}]),e}),[])}}static parse(e){const t=this.parseConfigurationModel(e.defaults),o=this.parseConfigurationModel(e.policy),i=this.parseConfigurationModel(e.application),r=this.parseConfigurationModel(e.user),s=this.parseConfigurationModel(e.workspace),n=e.folders.reduce(((e,t)=>(e.set(URI.revive(t[0]),this.parseConfigurationModel(t[1])),e)),new ResourceMap);return new Configuration(t,o,i,r,new ConfigurationModel,s,n,new ConfigurationModel,new ResourceMap)}static parseConfigurationModel(e){return new ConfigurationModel(e.contents,e.keys,e.overrides)}}export class ConfigurationChangeEvent{constructor(e,t,o,i){this.change=e,this.previous=t,this.currentConfiguraiton=o,this.currentWorkspace=i,this._marker="\n",this._markerCode1=this._marker.charCodeAt(0),this._markerCode2=".".charCodeAt(0),this.affectedKeys=new Set,this._previousConfiguration=void 0;for(const t of e.keys)this.affectedKeys.add(t);for(const[,t]of e.overrides)for(const e of t)this.affectedKeys.add(e);this._affectsConfigStr=this._marker;for(const e of this.affectedKeys)this._affectsConfigStr+=e+this._marker}get previousConfiguration(){return!this._previousConfiguration&&this.previous&&(this._previousConfiguration=Configuration.parse(this.previous.data)),this._previousConfiguration}affectsConfiguration(e,t){var o;const i=this._marker+e,r=this._affectsConfigStr.indexOf(i);if(r<0)return!1;const s=r+i.length;if(s>=this._affectsConfigStr.length)return!1;const n=this._affectsConfigStr.charCodeAt(s);if(n!==this._markerCode1&&n!==this._markerCode2)return!1;if(t){const i=this.previousConfiguration?this.previousConfiguration.getValue(e,t,null===(o=this.previous)||void 0===o?void 0:o.workspace):void 0,r=this.currentConfiguraiton.getValue(e,t,this.currentWorkspace);return!objects.equals(i,r)}return!0}}