import{CSSIcon}from"./codicons.js";import{matchesFuzzy}from"./filters.js";import{ltrim}from"./strings.js";export const iconStartMarker="$(";const iconsRegex=new RegExp(`\\$\\(${CSSIcon.iconNameExpression}(?:${CSSIcon.iconModifierExpression})?\\)`,"g"),iconNameCharacterRegexp=new RegExp(CSSIcon.iconNameCharacter),escapeIconsRegex=new RegExp(`(\\\\)?${iconsRegex.source}`,"g");export function escapeIcons(e){return e.replace(escapeIconsRegex,((e,n)=>n?e:`\\${e}`))}const markdownEscapedIconsRegex=new RegExp(`\\\\${iconsRegex.source}`,"g");export function markdownEscapeEscapedIcons(e){return e.replace(markdownEscapedIconsRegex,(e=>`\\${e}`))}const stripIconsRegex=new RegExp(`(\\s)?(\\\\)?${iconsRegex.source}(\\s)?`,"g");export function stripIcons(e){return-1===e.indexOf("$(")?e:e.replace(stripIconsRegex,((e,n,o,t)=>o?e:n||t||""))}export function parseLabelWithIcons(e){const n=e.indexOf("$(");return-1===n?{text:e}:doParseLabelWithIcons(e,n)}function doParseLabelWithIcons(e,n){const o=[];let t="";function s(e){if(e){t+=e;for(const n of e)o.push(p)}}let c,r,i=-1,a="",p=0,x=n;const f=e.length;for(s(e.substr(0,n));x<f;)c=e[x],r=e[x+1],c==="$("[0]&&r==="$("[1]?(i=x,s(a),a="$(",x++):")"===c&&-1!==i?(p+=x-i+1,i=-1,a=""):-1!==i?iconNameCharacterRegexp.test(c)?a+=c:(s(a),i=-1,a=""):s(c),x++;return s(a),{text:t,iconOffsets:o}}export function matchesFuzzyIconAware(e,n,o=!1){const{text:t,iconOffsets:s}=n;if(!s||0===s.length)return matchesFuzzy(e,t,o);const c=ltrim(t," "),r=t.length-c.length,i=matchesFuzzy(e,c,o);if(i)for(const e of i){const n=s[e.start+r]+r;e.start+=n,e.end+=n}return i}