var __decorate=this&&this.__decorate||function(e,t,i,o){var n,s=arguments.length,r=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,i):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(s<3?n(r):s>3?n(t,i,r):n(t,i))||r);return s>3&&r&&Object.defineProperty(t,i,r),r},__param=this&&this.__param||function(e,t){return function(i,o){t(i,o,e)}},__awaiter=this&&this.__awaiter||function(e,t,i,o){return new(i||(i=Promise))((function(n,s){function r(e){try{a(o.next(e))}catch(e){s(e)}}function l(e){try{a(o.throw(e))}catch(e){s(e)}}function a(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,l)}a((o=o.apply(e,t||[])).next())}))};import{Emitter}from"../../../../base/common/event.js";import{Disposable,MutableDisposable,toDisposable}from"../../../../base/common/lifecycle.js";import{firstNonWhitespaceIndex}from"../../../../base/common/strings.js";import{EditorAction}from"../../../browser/editorExtensions.js";import{CursorColumns}from"../../../common/core/cursorColumns.js";import{EditorContextKeys}from"../../../common/editorContextKeys.js";import{GhostTextModel}from"./ghostTextModel.js";import{GhostTextWidget}from"./ghostTextWidget.js";import*as nls from"../../../../nls.js";import{ContextKeyExpr,IContextKeyService,RawContextKey}from"../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService}from"../../../../platform/instantiation/common/instantiation.js";let GhostTextController=class e extends Disposable{static get(t){return t.getContribution(e.ID)}get activeModel(){var e;return null===(e=this.activeController.value)||void 0===e?void 0:e.model}constructor(e,t){super(),this.editor=e,this.instantiationService=t,this.triggeredExplicitly=!1,this.activeController=this._register(new MutableDisposable),this.activeModelDidChangeEmitter=this._register(new Emitter),this._register(this.editor.onDidChangeModel((()=>{this.updateModelController()}))),this._register(this.editor.onDidChangeConfiguration((e=>{e.hasChanged(108)&&this.updateModelController(),e.hasChanged(56)&&this.updateModelController()}))),this.updateModelController()}updateModelController(){const e=this.editor.getOption(108),t=this.editor.getOption(56);this.activeController.value=void 0,this.activeController.value=this.editor.hasModel()&&(e.preview||t.enabled||this.triggeredExplicitly)?this.instantiationService.createInstance(ActiveGhostTextController,this.editor):void 0,this.activeModelDidChangeEmitter.fire()}shouldShowHoverAt(e){var t;return(null===(t=this.activeModel)||void 0===t?void 0:t.shouldShowHoverAt(e))||!1}shouldShowHoverAtViewZone(e){var t,i;return(null===(i=null===(t=this.activeController.value)||void 0===t?void 0:t.widget)||void 0===i?void 0:i.shouldShowHoverAtViewZone(e))||!1}trigger(){var e;this.triggeredExplicitly=!0,this.activeController.value||this.updateModelController(),null===(e=this.activeModel)||void 0===e||e.triggerInlineCompletion()}commit(){var e;null===(e=this.activeModel)||void 0===e||e.commitInlineCompletion()}hide(){var e;null===(e=this.activeModel)||void 0===e||e.hideInlineCompletion()}showNextInlineCompletion(){var e;null===(e=this.activeModel)||void 0===e||e.showNextInlineCompletion()}showPreviousInlineCompletion(){var e;null===(e=this.activeModel)||void 0===e||e.showPreviousInlineCompletion()}hasMultipleInlineCompletions(){var e;return __awaiter(this,void 0,void 0,(function*(){const t=yield null===(e=this.activeModel)||void 0===e?void 0:e.hasMultipleInlineCompletions();return void 0!==t&&t}))}};GhostTextController.inlineSuggestionVisible=new RawContextKey("inlineSuggestionVisible",!1,nls.localize("inlineSuggestionVisible","Whether an inline suggestion is visible")),GhostTextController.inlineSuggestionHasIndentation=new RawContextKey("inlineSuggestionHasIndentation",!1,nls.localize("inlineSuggestionHasIndentation","Whether the inline suggestion starts with whitespace")),GhostTextController.inlineSuggestionHasIndentationLessThanTabSize=new RawContextKey("inlineSuggestionHasIndentationLessThanTabSize",!0,nls.localize("inlineSuggestionHasIndentationLessThanTabSize","Whether the inline suggestion starts with whitespace that is less than what would be inserted by tab")),GhostTextController.ID="editor.contrib.ghostTextController",GhostTextController=__decorate([__param(1,IInstantiationService)],GhostTextController);export{GhostTextController};class GhostTextContextKeys{constructor(e){this.contextKeyService=e,this.inlineCompletionVisible=GhostTextController.inlineSuggestionVisible.bindTo(this.contextKeyService),this.inlineCompletionSuggestsIndentation=GhostTextController.inlineSuggestionHasIndentation.bindTo(this.contextKeyService),this.inlineCompletionSuggestsIndentationLessThanTabSize=GhostTextController.inlineSuggestionHasIndentationLessThanTabSize.bindTo(this.contextKeyService)}}let ActiveGhostTextController=class extends Disposable{constructor(e,t,i){super(),this.editor=e,this.instantiationService=t,this.contextKeyService=i,this.contextKeys=new GhostTextContextKeys(this.contextKeyService),this.model=this._register(this.instantiationService.createInstance(GhostTextModel,this.editor)),this.widget=this._register(this.instantiationService.createInstance(GhostTextWidget,this.editor,this.model)),this._register(toDisposable((()=>{this.contextKeys.inlineCompletionVisible.set(!1),this.contextKeys.inlineCompletionSuggestsIndentation.set(!1),this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(!0)}))),this._register(this.model.onDidChange((()=>{this.updateContextKeys()}))),this.updateContextKeys()}updateContextKeys(){var e;this.contextKeys.inlineCompletionVisible.set(void 0!==(null===(e=this.model.activeInlineCompletionsModel)||void 0===e?void 0:e.ghostText));let t=!1,i=!0;const o=this.model.inlineCompletionsModel.ghostText;if(this.model.activeInlineCompletionsModel&&o&&o.parts.length>0){const{column:e,lines:n}=o.parts[0],s=n[0];if(e<=this.editor.getModel().getLineIndentColumn(o.lineNumber)){let e=firstNonWhitespaceIndex(s);-1===e&&(e=s.length-1),t=e>0;const o=this.editor.getModel().getOptions().tabSize;i=CursorColumns.visibleColumnFromColumn(s,e+1,o)<o}}this.contextKeys.inlineCompletionSuggestsIndentation.set(t),this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(i)}};ActiveGhostTextController=__decorate([__param(1,IInstantiationService),__param(2,IContextKeyService)],ActiveGhostTextController);export{ActiveGhostTextController};export class ShowNextInlineSuggestionAction extends EditorAction{constructor(){super({id:ShowNextInlineSuggestionAction.ID,label:nls.localize("action.inlineSuggest.showNext","Show Next Inline Suggestion"),alias:"Show Next Inline Suggestion",precondition:ContextKeyExpr.and(EditorContextKeys.writable,GhostTextController.inlineSuggestionVisible),kbOpts:{weight:100,primary:601}})}run(e,t){return __awaiter(this,void 0,void 0,(function*(){const e=GhostTextController.get(t);e&&(e.showNextInlineCompletion(),t.focus())}))}}ShowNextInlineSuggestionAction.ID="editor.action.inlineSuggest.showNext";export class ShowPreviousInlineSuggestionAction extends EditorAction{constructor(){super({id:ShowPreviousInlineSuggestionAction.ID,label:nls.localize("action.inlineSuggest.showPrevious","Show Previous Inline Suggestion"),alias:"Show Previous Inline Suggestion",precondition:ContextKeyExpr.and(EditorContextKeys.writable,GhostTextController.inlineSuggestionVisible),kbOpts:{weight:100,primary:599}})}run(e,t){return __awaiter(this,void 0,void 0,(function*(){const e=GhostTextController.get(t);e&&(e.showPreviousInlineCompletion(),t.focus())}))}}ShowPreviousInlineSuggestionAction.ID="editor.action.inlineSuggest.showPrevious";export class TriggerInlineSuggestionAction extends EditorAction{constructor(){super({id:"editor.action.inlineSuggest.trigger",label:nls.localize("action.inlineSuggest.trigger","Trigger Inline Suggestion"),alias:"Trigger Inline Suggestion",precondition:EditorContextKeys.writable})}run(e,t){return __awaiter(this,void 0,void 0,(function*(){const e=GhostTextController.get(t);null==e||e.trigger()}))}}