import{Codicon}from"../../../../base/common/codicons.js";import{localize}from"../../../../nls.js";import{foreground,registerColor}from"../../../../platform/theme/common/colorRegistry.js";import{registerThemingParticipant}from"../../../../platform/theme/common/themeService.js";export const SYMBOL_ICON_ARRAY_FOREGROUND=registerColor("symbolIcon.arrayForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.arrayForeground","The foreground color for array symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_BOOLEAN_FOREGROUND=registerColor("symbolIcon.booleanForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.booleanForeground","The foreground color for boolean symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_CLASS_FOREGROUND=registerColor("symbolIcon.classForeground",{dark:"#EE9D28",light:"#D67E00",hcDark:"#EE9D28",hcLight:"#D67E00"},localize("symbolIcon.classForeground","The foreground color for class symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_COLOR_FOREGROUND=registerColor("symbolIcon.colorForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.colorForeground","The foreground color for color symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_CONSTANT_FOREGROUND=registerColor("symbolIcon.constantForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.constantForeground","The foreground color for constant symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_CONSTRUCTOR_FOREGROUND=registerColor("symbolIcon.constructorForeground",{dark:"#B180D7",light:"#652D90",hcDark:"#B180D7",hcLight:"#652D90"},localize("symbolIcon.constructorForeground","The foreground color for constructor symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_ENUMERATOR_FOREGROUND=registerColor("symbolIcon.enumeratorForeground",{dark:"#EE9D28",light:"#D67E00",hcDark:"#EE9D28",hcLight:"#D67E00"},localize("symbolIcon.enumeratorForeground","The foreground color for enumerator symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_ENUMERATOR_MEMBER_FOREGROUND=registerColor("symbolIcon.enumeratorMemberForeground",{dark:"#75BEFF",light:"#007ACC",hcDark:"#75BEFF",hcLight:"#007ACC"},localize("symbolIcon.enumeratorMemberForeground","The foreground color for enumerator member symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_EVENT_FOREGROUND=registerColor("symbolIcon.eventForeground",{dark:"#EE9D28",light:"#D67E00",hcDark:"#EE9D28",hcLight:"#D67E00"},localize("symbolIcon.eventForeground","The foreground color for event symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_FIELD_FOREGROUND=registerColor("symbolIcon.fieldForeground",{dark:"#75BEFF",light:"#007ACC",hcDark:"#75BEFF",hcLight:"#007ACC"},localize("symbolIcon.fieldForeground","The foreground color for field symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_FILE_FOREGROUND=registerColor("symbolIcon.fileForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.fileForeground","The foreground color for file symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_FOLDER_FOREGROUND=registerColor("symbolIcon.folderForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.folderForeground","The foreground color for folder symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_FUNCTION_FOREGROUND=registerColor("symbolIcon.functionForeground",{dark:"#B180D7",light:"#652D90",hcDark:"#B180D7",hcLight:"#652D90"},localize("symbolIcon.functionForeground","The foreground color for function symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_INTERFACE_FOREGROUND=registerColor("symbolIcon.interfaceForeground",{dark:"#75BEFF",light:"#007ACC",hcDark:"#75BEFF",hcLight:"#007ACC"},localize("symbolIcon.interfaceForeground","The foreground color for interface symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_KEY_FOREGROUND=registerColor("symbolIcon.keyForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.keyForeground","The foreground color for key symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_KEYWORD_FOREGROUND=registerColor("symbolIcon.keywordForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.keywordForeground","The foreground color for keyword symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_METHOD_FOREGROUND=registerColor("symbolIcon.methodForeground",{dark:"#B180D7",light:"#652D90",hcDark:"#B180D7",hcLight:"#652D90"},localize("symbolIcon.methodForeground","The foreground color for method symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_MODULE_FOREGROUND=registerColor("symbolIcon.moduleForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.moduleForeground","The foreground color for module symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_NAMESPACE_FOREGROUND=registerColor("symbolIcon.namespaceForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.namespaceForeground","The foreground color for namespace symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_NULL_FOREGROUND=registerColor("symbolIcon.nullForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.nullForeground","The foreground color for null symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_NUMBER_FOREGROUND=registerColor("symbolIcon.numberForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.numberForeground","The foreground color for number symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_OBJECT_FOREGROUND=registerColor("symbolIcon.objectForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.objectForeground","The foreground color for object symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_OPERATOR_FOREGROUND=registerColor("symbolIcon.operatorForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.operatorForeground","The foreground color for operator symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_PACKAGE_FOREGROUND=registerColor("symbolIcon.packageForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.packageForeground","The foreground color for package symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_PROPERTY_FOREGROUND=registerColor("symbolIcon.propertyForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.propertyForeground","The foreground color for property symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_REFERENCE_FOREGROUND=registerColor("symbolIcon.referenceForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.referenceForeground","The foreground color for reference symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_SNIPPET_FOREGROUND=registerColor("symbolIcon.snippetForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.snippetForeground","The foreground color for snippet symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_STRING_FOREGROUND=registerColor("symbolIcon.stringForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.stringForeground","The foreground color for string symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_STRUCT_FOREGROUND=registerColor("symbolIcon.structForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.structForeground","The foreground color for struct symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_TEXT_FOREGROUND=registerColor("symbolIcon.textForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.textForeground","The foreground color for text symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_TYPEPARAMETER_FOREGROUND=registerColor("symbolIcon.typeParameterForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.typeParameterForeground","The foreground color for type parameter symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_UNIT_FOREGROUND=registerColor("symbolIcon.unitForeground",{dark:foreground,light:foreground,hcDark:foreground,hcLight:foreground},localize("symbolIcon.unitForeground","The foreground color for unit symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));export const SYMBOL_ICON_VARIABLE_FOREGROUND=registerColor("symbolIcon.variableForeground",{dark:"#75BEFF",light:"#007ACC",hcDark:"#75BEFF",hcLight:"#007ACC"},localize("symbolIcon.variableForeground","The foreground color for variable symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));registerThemingParticipant(((o,r)=>{const e=o.getColor(SYMBOL_ICON_ARRAY_FOREGROUND);e&&r.addRule(`${Codicon.symbolArray.cssSelector} { color: ${e}; }`);const l=o.getColor(SYMBOL_ICON_BOOLEAN_FOREGROUND);l&&r.addRule(`${Codicon.symbolBoolean.cssSelector} { color: ${l}; }`);const s=o.getColor(SYMBOL_ICON_CLASS_FOREGROUND);s&&r.addRule(`${Codicon.symbolClass.cssSelector} { color: ${s}; }`);const n=o.getColor(SYMBOL_ICON_METHOD_FOREGROUND);n&&r.addRule(`${Codicon.symbolMethod.cssSelector} { color: ${n}; }`);const t=o.getColor(SYMBOL_ICON_COLOR_FOREGROUND);t&&r.addRule(`${Codicon.symbolColor.cssSelector} { color: ${t}; }`);const c=o.getColor(SYMBOL_ICON_CONSTANT_FOREGROUND);c&&r.addRule(`${Codicon.symbolConstant.cssSelector} { color: ${c}; }`);const d=o.getColor(SYMBOL_ICON_CONSTRUCTOR_FOREGROUND);d&&r.addRule(`${Codicon.symbolConstructor.cssSelector} { color: ${d}; }`);const g=o.getColor(SYMBOL_ICON_ENUMERATOR_FOREGROUND);g&&r.addRule(`\n\t\t\t${Codicon.symbolValue.cssSelector},${Codicon.symbolEnum.cssSelector} { color: ${g}; }`);const u=o.getColor(SYMBOL_ICON_ENUMERATOR_MEMBER_FOREGROUND);u&&r.addRule(`${Codicon.symbolEnumMember.cssSelector} { color: ${u}; }`);const a=o.getColor(SYMBOL_ICON_EVENT_FOREGROUND);a&&r.addRule(`${Codicon.symbolEvent.cssSelector} { color: ${a}; }`);const i=o.getColor(SYMBOL_ICON_FIELD_FOREGROUND);i&&r.addRule(`${Codicon.symbolField.cssSelector} { color: ${i}; }`);const O=o.getColor(SYMBOL_ICON_FILE_FOREGROUND);O&&r.addRule(`${Codicon.symbolFile.cssSelector} { color: ${O}; }`);const b=o.getColor(SYMBOL_ICON_FOLDER_FOREGROUND);b&&r.addRule(`${Codicon.symbolFolder.cssSelector} { color: ${b}; }`);const m=o.getColor(SYMBOL_ICON_FUNCTION_FOREGROUND);m&&r.addRule(`${Codicon.symbolFunction.cssSelector} { color: ${m}; }`);const h=o.getColor(SYMBOL_ICON_INTERFACE_FOREGROUND);h&&r.addRule(`${Codicon.symbolInterface.cssSelector} { color: ${h}; }`);const R=o.getColor(SYMBOL_ICON_KEY_FOREGROUND);R&&r.addRule(`${Codicon.symbolKey.cssSelector} { color: ${R}; }`);const C=o.getColor(SYMBOL_ICON_KEYWORD_FOREGROUND);C&&r.addRule(`${Codicon.symbolKeyword.cssSelector} { color: ${C}; }`);const _=o.getColor(SYMBOL_ICON_MODULE_FOREGROUND);_&&r.addRule(`${Codicon.symbolModule.cssSelector} { color: ${_}; }`);const y=o.getColor(SYMBOL_ICON_NAMESPACE_FOREGROUND);y&&r.addRule(`${Codicon.symbolNamespace.cssSelector} { color: ${y}; }`);const f=o.getColor(SYMBOL_ICON_NULL_FOREGROUND);f&&r.addRule(`${Codicon.symbolNull.cssSelector} { color: ${f}; }`);const N=o.getColor(SYMBOL_ICON_NUMBER_FOREGROUND);N&&r.addRule(`${Codicon.symbolNumber.cssSelector} { color: ${N}; }`);const E=o.getColor(SYMBOL_ICON_OBJECT_FOREGROUND);E&&r.addRule(`${Codicon.symbolObject.cssSelector} { color: ${E}; }`);const F=o.getColor(SYMBOL_ICON_OPERATOR_FOREGROUND);F&&r.addRule(`${Codicon.symbolOperator.cssSelector} { color: ${F}; }`);const I=o.getColor(SYMBOL_ICON_PACKAGE_FOREGROUND);I&&r.addRule(`${Codicon.symbolPackage.cssSelector} { color: ${I}; }`);const p=o.getColor(SYMBOL_ICON_PROPERTY_FOREGROUND);p&&r.addRule(`${Codicon.symbolProperty.cssSelector} { color: ${p}; }`);const D=o.getColor(SYMBOL_ICON_REFERENCE_FOREGROUND);D&&r.addRule(`${Codicon.symbolReference.cssSelector} { color: ${D}; }`);const S=o.getColor(SYMBOL_ICON_SNIPPET_FOREGROUND);S&&r.addRule(`${Codicon.symbolSnippet.cssSelector} { color: ${S}; }`);const L=o.getColor(SYMBOL_ICON_STRING_FOREGROUND);L&&r.addRule(`${Codicon.symbolString.cssSelector} { color: ${L}; }`);const T=o.getColor(SYMBOL_ICON_STRUCT_FOREGROUND);T&&r.addRule(`${Codicon.symbolStruct.cssSelector} { color: ${T}; }`);const B=o.getColor(SYMBOL_ICON_TEXT_FOREGROUND);B&&r.addRule(`${Codicon.symbolText.cssSelector} { color: ${B}; }`);const M=o.getColor(SYMBOL_ICON_TYPEPARAMETER_FOREGROUND);M&&r.addRule(`${Codicon.symbolTypeParameter.cssSelector} { color: ${M}; }`);const U=o.getColor(SYMBOL_ICON_UNIT_FOREGROUND);U&&r.addRule(`${Codicon.symbolUnit.cssSelector} { color: ${U}; }`);const k=o.getColor(SYMBOL_ICON_VARIABLE_FOREGROUND);k&&r.addRule(`${Codicon.symbolVariable.cssSelector} { color: ${k}; }`)}));