var __decorate=this&&this.__decorate||function(e,t,i,r){var n,o=arguments.length,s=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,i):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,i,r);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(s=(o<3?n(s):o>3?n(t,i,s):n(t,i))||s);return o>3&&s&&Object.defineProperty(t,i,s),s},__param=this&&this.__param||function(e,t){return function(i,r){t(i,r,e)}},__awaiter=this&&this.__awaiter||function(e,t,i,r){return new(i||(i=Promise))((function(n,o){function s(e){try{u(r.next(e))}catch(e){o(e)}}function a(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(s,a)}u((r=r.apply(e,t||[])).next())}))};import{Disposable}from"../../../../base/common/lifecycle.js";import{basename}from"../../../../base/common/resources.js";import{registerEditorContribution}from"../../../browser/editorExtensions.js";import{ICodeEditorService}from"../../../browser/services/codeEditorService.js";import*as nls from"../../../../nls.js";import{IDialogService}from"../../../../platform/dialogs/common/dialogs.js";const ignoreUnusualLineTerminators="ignoreUnusualLineTerminators";function writeIgnoreState(e,t,i){e.setModelProperty(t.uri,ignoreUnusualLineTerminators,i)}function readIgnoreState(e,t){return e.getModelProperty(t.uri,ignoreUnusualLineTerminators)}let UnusualLineTerminatorsDetector=class extends Disposable{constructor(e,t,i){super(),this._editor=e,this._dialogService=t,this._codeEditorService=i,this._config=this._editor.getOption(116),this._register(this._editor.onDidChangeConfiguration((e=>{e.hasChanged(116)&&(this._config=this._editor.getOption(116),this._checkForUnusualLineTerminators())}))),this._register(this._editor.onDidChangeModel((()=>{this._checkForUnusualLineTerminators()}))),this._register(this._editor.onDidChangeModelContent((e=>{e.isUndoing||this._checkForUnusualLineTerminators()})))}_checkForUnusualLineTerminators(){return __awaiter(this,void 0,void 0,(function*(){if("off"===this._config)return;if(!this._editor.hasModel())return;const e=this._editor.getModel();e.mightContainUnusualLineTerminators()&&!0!==readIgnoreState(this._codeEditorService,e)&&(this._editor.getOption(82)||("auto"!==this._config?(yield this._dialogService.confirm({title:nls.localize("unusualLineTerminators.title","Unusual Line Terminators"),message:nls.localize("unusualLineTerminators.message","Detected unusual line terminators"),detail:nls.localize("unusualLineTerminators.detail","The file '{0}' contains one or more unusual line terminator characters, like Line Separator (LS) or Paragraph Separator (PS).\n\nIt is recommended to remove them from the file. This can be configured via `editor.unusualLineTerminators`.",basename(e.uri)),primaryButton:nls.localize("unusualLineTerminators.fix","Remove Unusual Line Terminators"),secondaryButton:nls.localize("unusualLineTerminators.ignore","Ignore")})).confirmed?e.removeUnusualLineTerminators(this._editor.getSelections()):writeIgnoreState(this._codeEditorService,e,!0):e.removeUnusualLineTerminators(this._editor.getSelections())))}))}};UnusualLineTerminatorsDetector.ID="editor.contrib.unusualLineTerminatorsDetector",UnusualLineTerminatorsDetector=__decorate([__param(1,IDialogService),__param(2,ICodeEditorService)],UnusualLineTerminatorsDetector);export{UnusualLineTerminatorsDetector};registerEditorContribution(UnusualLineTerminatorsDetector.ID,UnusualLineTerminatorsDetector);