var __decorate=this&&this.__decorate||function(e,t,r,o){var i,n=arguments.length,a=n<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,r,o);else for(var c=e.length-1;c>=0;c--)(i=e[c])&&(a=(n<3?i(a):n>3?i(t,r,a):i(t,r))||a);return n>3&&a&&Object.defineProperty(t,r,a),a},__param=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};import{createCancelablePromise,timeout}from"../../../../base/common/async.js";import{onUnexpectedError}from"../../../../base/common/errors.js";import{EditorState}from"../../editorState/browser/editorState.js";import{EditorAction,registerEditorAction,registerEditorContribution}from"../../../browser/editorExtensions.js";import{Range}from"../../../common/core/range.js";import{Selection}from"../../../common/core/selection.js";import{EditorContextKeys}from"../../../common/editorContextKeys.js";import{ModelDecorationOptions}from"../../../common/model/textModel.js";import{IEditorWorkerService}from"../../../common/services/editorWorker.js";import{editorBracketMatchBorder}from"../../../common/core/editorColorRegistry.js";import*as nls from"../../../../nls.js";import{registerThemingParticipant}from"../../../../platform/theme/common/themeService.js";import{InPlaceReplaceCommand}from"./inPlaceReplaceCommand.js";let InPlaceReplaceController=class e{static get(t){return t.getContribution(e.ID)}constructor(e,t){this.editor=e,this.editorWorkerService=t,this.decorations=this.editor.createDecorationsCollection()}dispose(){}run(t,r){var o;null===(o=this.currentRequest)||void 0===o||o.cancel();const i=this.editor.getSelection(),n=this.editor.getModel();if(!n||!i)return;let a=i;if(a.startLineNumber!==a.endLineNumber)return;const c=new EditorState(this.editor,5),l=n.uri;return this.editorWorkerService.canNavigateValueSet(l)?(this.currentRequest=createCancelablePromise((e=>this.editorWorkerService.navigateValueSet(l,a,r))),this.currentRequest.then((r=>{var o;if(!r||!r.range||!r.value)return;if(!c.validate(this.editor))return;const i=Range.lift(r.range);let n=r.range;const l=r.value.length-(a.endColumn-a.startColumn);n={startLineNumber:n.startLineNumber,startColumn:n.startColumn,endLineNumber:n.endLineNumber,endColumn:n.startColumn+r.value.length},l>1&&(a=new Selection(a.startLineNumber,a.startColumn,a.endLineNumber,a.endColumn+l-1));const s=new InPlaceReplaceCommand(i,a,r.value);this.editor.pushUndoStop(),this.editor.executeCommand(t,s),this.editor.pushUndoStop(),this.decorations.set([{range:n,options:e.DECORATION}]),null===(o=this.decorationRemover)||void 0===o||o.cancel(),this.decorationRemover=timeout(350),this.decorationRemover.then((()=>this.decorations.clear())).catch(onUnexpectedError)})).catch(onUnexpectedError)):Promise.resolve(void 0)}};InPlaceReplaceController.ID="editor.contrib.inPlaceReplaceController",InPlaceReplaceController.DECORATION=ModelDecorationOptions.register({description:"in-place-replace",className:"valueSetReplacement"}),InPlaceReplaceController=__decorate([__param(1,IEditorWorkerService)],InPlaceReplaceController);class InPlaceReplaceUp extends EditorAction{constructor(){super({id:"editor.action.inPlaceReplace.up",label:nls.localize("InPlaceReplaceAction.previous.label","Replace with Previous Value"),alias:"Replace with Previous Value",precondition:EditorContextKeys.writable,kbOpts:{kbExpr:EditorContextKeys.editorTextFocus,primary:3154,weight:100}})}run(e,t){const r=InPlaceReplaceController.get(t);return r?r.run(this.id,!0):Promise.resolve(void 0)}}class InPlaceReplaceDown extends EditorAction{constructor(){super({id:"editor.action.inPlaceReplace.down",label:nls.localize("InPlaceReplaceAction.next.label","Replace with Next Value"),alias:"Replace with Next Value",precondition:EditorContextKeys.writable,kbOpts:{kbExpr:EditorContextKeys.editorTextFocus,primary:3156,weight:100}})}run(e,t){const r=InPlaceReplaceController.get(t);return r?r.run(this.id,!1):Promise.resolve(void 0)}}registerEditorContribution(InPlaceReplaceController.ID,InPlaceReplaceController),registerEditorAction(InPlaceReplaceUp),registerEditorAction(InPlaceReplaceDown),registerThemingParticipant(((e,t)=>{const r=e.getColor(editorBracketMatchBorder);r&&t.addRule(`.monaco-editor.vs .valueSetReplacement { outline: solid 2px ${r}; }`)}));