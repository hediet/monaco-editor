import"./viewCursors.css";import{createFastDomNode}from"../../../../base/browser/fastDomNode.js";import{IntervalTimer,TimeoutTimer}from"../../../../base/common/async.js";import{ViewPart}from"../../view/viewPart.js";import{ViewCursor}from"./viewCursor.js";import{TextEditorCursorStyle}from"../../../common/config/editorOptions.js";import{editorCursorBackground,editorCursorForeground}from"../../../common/core/editorColorRegistry.js";import{registerThemingParticipant}from"../../../../platform/theme/common/themeService.js";import{isHighContrast}from"../../../../platform/theme/common/theme.js";export class ViewCursors extends ViewPart{constructor(r){super(r);const e=this._context.configuration.options;this._readOnly=e.get(82),this._cursorBlinking=e.get(22),this._cursorStyle=e.get(24),this._cursorSmoothCaretAnimation=e.get(23),this._selectionIsEmpty=!0,this._isComposingInput=!1,this._isVisible=!1,this._primaryCursor=new ViewCursor(this._context),this._secondaryCursors=[],this._renderData=[],this._domNode=createFastDomNode(document.createElement("div")),this._domNode.setAttribute("role","presentation"),this._domNode.setAttribute("aria-hidden","true"),this._updateDomClassName(),this._domNode.appendChild(this._primaryCursor.getDomNode()),this._startCursorBlinkAnimation=new TimeoutTimer,this._cursorFlatBlinkInterval=new IntervalTimer,this._blinkingEnabled=!1,this._editorHasFocus=!1,this._updateBlinking()}dispose(){super.dispose(),this._startCursorBlinkAnimation.dispose(),this._cursorFlatBlinkInterval.dispose()}getDomNode(){return this._domNode}onCompositionStart(r){return this._isComposingInput=!0,this._updateBlinking(),!0}onCompositionEnd(r){return this._isComposingInput=!1,this._updateBlinking(),!0}onConfigurationChanged(r){const e=this._context.configuration.options;this._readOnly=e.get(82),this._cursorBlinking=e.get(22),this._cursorStyle=e.get(24),this._cursorSmoothCaretAnimation=e.get(23),this._updateBlinking(),this._updateDomClassName(),this._primaryCursor.onConfigurationChanged(r);for(let e=0,s=this._secondaryCursors.length;e<s;e++)this._secondaryCursors[e].onConfigurationChanged(r);return!0}_onCursorPositionChanged(r,e){if(this._primaryCursor.onCursorPositionChanged(r),this._updateBlinking(),this._secondaryCursors.length<e.length){const r=e.length-this._secondaryCursors.length;for(let e=0;e<r;e++){const r=new ViewCursor(this._context);this._domNode.domNode.insertBefore(r.getDomNode().domNode,this._primaryCursor.getDomNode().domNode.nextSibling),this._secondaryCursors.push(r)}}else if(this._secondaryCursors.length>e.length){const r=this._secondaryCursors.length-e.length;for(let e=0;e<r;e++)this._domNode.removeChild(this._secondaryCursors[0].getDomNode()),this._secondaryCursors.splice(0,1)}for(let r=0;r<e.length;r++)this._secondaryCursors[r].onCursorPositionChanged(e[r])}onCursorStateChanged(r){const e=[];for(let s=0,t=r.selections.length;s<t;s++)e[s]=r.selections[s].getPosition();this._onCursorPositionChanged(e[0],e.slice(1));const s=r.selections[0].isEmpty();return this._selectionIsEmpty!==s&&(this._selectionIsEmpty=s,this._updateDomClassName()),!0}onDecorationsChanged(r){return!0}onFlushed(r){return!0}onFocusChanged(r){return this._editorHasFocus=r.isFocused,this._updateBlinking(),!1}onLinesChanged(r){return!0}onLinesDeleted(r){return!0}onLinesInserted(r){return!0}onScrollChanged(r){return!0}onTokensChanged(r){const e=e=>{for(let s=0,t=r.ranges.length;s<t;s++)if(r.ranges[s].fromLineNumber<=e.lineNumber&&e.lineNumber<=r.ranges[s].toLineNumber)return!0;return!1};if(e(this._primaryCursor.getPosition()))return!0;for(const r of this._secondaryCursors)if(e(r.getPosition()))return!0;return!1}onZonesChanged(r){return!0}_getCursorBlinking(){return this._isComposingInput?0:this._editorHasFocus?this._readOnly?5:this._cursorBlinking:0}_updateBlinking(){this._startCursorBlinkAnimation.cancel(),this._cursorFlatBlinkInterval.cancel();const r=this._getCursorBlinking(),e=0===r,s=5===r;e?this._hide():this._show(),this._blinkingEnabled=!1,this._updateDomClassName(),e||s||(1===r?this._cursorFlatBlinkInterval.cancelAndSet((()=>{this._isVisible?this._hide():this._show()}),ViewCursors.BLINK_INTERVAL):this._startCursorBlinkAnimation.setIfNotSet((()=>{this._blinkingEnabled=!0,this._updateDomClassName()}),ViewCursors.BLINK_INTERVAL))}_updateDomClassName(){this._domNode.setClassName(this._getClassName())}_getClassName(){let r="cursors-layer";switch(this._selectionIsEmpty||(r+=" has-selection"),this._cursorStyle){case TextEditorCursorStyle.Line:r+=" cursor-line-style";break;case TextEditorCursorStyle.Block:r+=" cursor-block-style";break;case TextEditorCursorStyle.Underline:r+=" cursor-underline-style";break;case TextEditorCursorStyle.LineThin:r+=" cursor-line-thin-style";break;case TextEditorCursorStyle.BlockOutline:r+=" cursor-block-outline-style";break;case TextEditorCursorStyle.UnderlineThin:r+=" cursor-underline-thin-style";break;default:r+=" cursor-line-style"}if(this._blinkingEnabled)switch(this._getCursorBlinking()){case 1:r+=" cursor-blink";break;case 2:r+=" cursor-smooth";break;case 3:r+=" cursor-phase";break;case 4:r+=" cursor-expand";break;default:r+=" cursor-solid"}else r+=" cursor-solid";return this._cursorSmoothCaretAnimation&&(r+=" cursor-smooth-caret-animation"),r}_show(){this._primaryCursor.show();for(let r=0,e=this._secondaryCursors.length;r<e;r++)this._secondaryCursors[r].show();this._isVisible=!0}_hide(){this._primaryCursor.hide();for(let r=0,e=this._secondaryCursors.length;r<e;r++)this._secondaryCursors[r].hide();this._isVisible=!1}prepareRender(r){this._primaryCursor.prepareRender(r);for(let e=0,s=this._secondaryCursors.length;e<s;e++)this._secondaryCursors[e].prepareRender(r)}render(r){const e=[];let s=0;const t=this._primaryCursor.render(r);t&&(e[s++]=t);for(let t=0,o=this._secondaryCursors.length;t<o;t++){const o=this._secondaryCursors[t].render(r);o&&(e[s++]=o)}this._renderData=e}getLastRenderData(){return this._renderData}}ViewCursors.BLINK_INTERVAL=500,registerThemingParticipant(((r,e)=>{const s=r.getColor(editorCursorForeground);if(s){let t=r.getColor(editorCursorBackground);t||(t=s.opposite()),e.addRule(`.monaco-editor .inputarea.ime-input { caret-color: ${s}; }`),e.addRule(`.monaco-editor .cursors-layer .cursor { background-color: ${s}; border-color: ${s}; color: ${t}; }`),isHighContrast(r.type)&&e.addRule(`.monaco-editor .cursors-layer.has-selection .cursor { border-left: 1px solid ${t}; border-right: 1px solid ${t}; }`)}}));