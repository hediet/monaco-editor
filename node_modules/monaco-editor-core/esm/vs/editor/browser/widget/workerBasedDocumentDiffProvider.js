var __decorate=this&&this.__decorate||function(e,r,n,t){var i,o=arguments.length,a=o<3?r:null===t?t=Object.getOwnPropertyDescriptor(r,n):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,r,n,t);else for(var c=e.length-1;c>=0;c--)(i=e[c])&&(a=(o<3?i(a):o>3?i(r,n,a):i(r,n))||a);return o>3&&a&&Object.defineProperty(r,n,a),a},__param=this&&this.__param||function(e,r){return function(n,t){r(n,t,e)}},__awaiter=this&&this.__awaiter||function(e,r,n,t){return new(n||(n=Promise))((function(i,o){function a(e){try{f(t.next(e))}catch(e){o(e)}}function c(e){try{f(t.throw(e))}catch(e){o(e)}}function f(e){var r;e.done?i(e.value):(r=e.value,r instanceof n?r:new n((function(e){e(r)}))).then(a,c)}f((t=t.apply(e,r||[])).next())}))};import{LineRange,LineRangeMapping,RangeMapping}from"../../common/diff/linesDiffComputer.js";import{Range}from"../../common/core/range.js";import{IEditorWorkerService}from"../../common/services/editorWorker.js";let WorkerBasedDocumentDiffProvider=class{constructor(e){this.editorWorkerService=e}computeDiff(e,r,n){return __awaiter(this,void 0,void 0,(function*(){const t=yield this.editorWorkerService.computeDiff(e.uri,r.uri,n);if(!t)throw new Error("no diff result available");return{identical:t.identical,quitEarly:t.quitEarly,changes:t.changes.map((e=>{var r;return new LineRangeMapping(new LineRange(e[0],e[1]),new LineRange(e[2],e[3]),null===(r=e[4])||void 0===r?void 0:r.map((e=>new RangeMapping(new Range(e[0],e[1],e[2],e[3]),new Range(e[4],e[5],e[6],e[7])))))}))}}))}};WorkerBasedDocumentDiffProvider=__decorate([__param(0,IEditorWorkerService)],WorkerBasedDocumentDiffProvider);export{WorkerBasedDocumentDiffProvider};