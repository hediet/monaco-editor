var __awaiter=this&&this.__awaiter||function(t,r,e,a){return new(e||(e=Promise))((function(n,o){function s(t){try{f(a.next(t))}catch(t){o(t)}}function i(t){try{f(a.throw(t))}catch(t){o(t)}}function f(t){var r;t.done?n(t.value):(r=t.value,r instanceof e?r:new e((function(t){t(r)}))).then(s,i)}f((a=a.apply(t,r||[])).next())}))};import{DataTransfers}from"../../base/browser/dnd.js";import{distinct}from"../../base/common/arrays.js";import{createFileDataTransferItem,createStringDataTransferItem,VSDataTransfer}from"../../base/common/dataTransfer.js";import{Mimes}from"../../base/common/mime.js";import{URI}from"../../base/common/uri.js";import{CodeDataTransfers,extractEditorsDropData}from"../../platform/dnd/browser/dnd.js";export function toVSDataTransfer(t){const r=new VSDataTransfer;for(const e of t.items){const t=e.type;if("string"===e.kind){const a=new Promise((t=>e.getAsString(t)));r.append(t,createStringDataTransferItem(a))}else if("file"===e.kind){const a=e.getAsFile();a&&r.append(t,createFileDataTransferItemFromFile(a))}}return r}export function createFileDataTransferItemFromFile(t){const r=t.path?URI.parse(t.path):void 0;return createFileDataTransferItem(t.name,r,(()=>__awaiter(this,void 0,void 0,(function*(){return new Uint8Array(yield t.arrayBuffer())}))))}const INTERNAL_DND_MIME_TYPES=Object.freeze([CodeDataTransfers.EDITORS,CodeDataTransfers.FILES,DataTransfers.RESOURCES]);export function addExternalEditorsDropData(t,r,e=!1){var a;if(r.dataTransfer&&(e||!t.has(Mimes.uriList))){const e=extractEditorsDropData(r).filter((t=>t.resource)).map((t=>t.resource.toString()));for(const t of null===(a=r.dataTransfer)||void 0===a?void 0:a.items){const r=t.getAsFile();r&&e.push(r.path?URI.file(r.path).toString():r.name)}e.length&&t.replace(Mimes.uriList,createStringDataTransferItem(UriList.create(e)))}for(const r of INTERNAL_DND_MIME_TYPES)t.delete(r)}export const UriList=Object.freeze({create:t=>distinct(t.map((t=>t.toString()))).join("\r\n"),parse:t=>t.split("\r\n").filter((t=>!t.startsWith("#")))});