import{SequenceDiff,OffsetRange}from"./diffAlgorithm.js";import{Array2D}from"./utils.js";export class DynamicProgrammingDiffing{compute(e,t,n){const g=new Array2D(e.length,t.length),l=new Array2D(e.length,t.length),s=new Array2D(e.length,t.length);for(let r=0;r<e.length;r++)for(let f=0;f<t.length;f++){const o=0===r?0:g.get(r-1,f),h=0===f?0:g.get(r,f-1);let i;e.getElement(r)===t.getElement(f)?(i=0===r||0===f?0:g.get(r-1,f-1),i+=n?n(r,f):1):i=-1;const a=Math.max(o,h,i);if(a===o)s.set(r,f,0),l.set(r,f,1);else if(a===h)s.set(r,f,0),l.set(r,f,2);else{const e=r>0&&f>0?s.get(r-1,f-1):0;s.set(r,f,e+1),l.set(r,f,3)}g.set(r,f,a)}const r=[];let f=e.length,o=t.length;function h(e,t){e+1===f&&t+1===o||r.push(new SequenceDiff(new OffsetRange(e+1,f),new OffsetRange(t+1,o))),f=e,o=t}let i=e.length-1,a=t.length-1;for(;i>=0&&a>=0;)3===l.get(i,a)?(h(i,a),i--,a--):1===l.get(i,a)?i--:a--;return h(-1,-1),r.reverse(),r}}